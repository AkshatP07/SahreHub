/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@supabase/auth-helpers-nextjs/dist/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-helpers-nextjs/dist/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n// src/index.ts\r\nvar src_exports = {};\r\n__export(src_exports, {\r\n  createBrowserSupabaseClient: () => createBrowserSupabaseClient,\r\n  createMiddlewareSupabaseClient: () => createMiddlewareSupabaseClient,\r\n  createRouteHandlerSupabaseClient: () => createRouteHandlerSupabaseClient,\r\n  createServerComponentSupabaseClient: () => createServerComponentSupabaseClient,\r\n  createServerSupabaseClient: () => createServerSupabaseClient4,\r\n  logger: () => log_default,\r\n  withApiAuth: () => withApiAuth,\r\n  withMiddlewareAuth: () => withMiddlewareAuth,\r\n  withPageAuth: () => withPageAuth\r\n});\r\nmodule.exports = __toCommonJS(src_exports);\r\nvar import_auth_helpers_shared4 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\r\n\r\n// src/middleware/withMiddlewareAuth.ts\r\nvar import_server = __webpack_require__(/*! next/server */ \"./node_modules/next/server.js\");\r\nvar import_auth_helpers_shared = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\r\nvar NoPermissionError = class extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"NoPermissionError\";\r\n  }\r\n};\r\nvar withMiddlewareAuth = (options = {}) => async (req) => {\r\n  var _a;\r\n  try {\r\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\r\n      throw new Error(\r\n        \"NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables are required!\"\r\n      );\r\n    }\r\n    const res = import_server.NextResponse.next();\r\n    const supabase = (0, import_auth_helpers_shared.createServerSupabaseClient)({\r\n      supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n      supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n      getCookie(name) {\r\n        const cookies = (0, import_auth_helpers_shared.parseCookies)(req.headers.get(\"cookie\") ?? \"\");\r\n        return cookies[name];\r\n      },\r\n      setCookie(name, value, options2) {\r\n        const newSessionStr = (0, import_auth_helpers_shared.serializeCookie)(name, value, {\r\n          ...options2,\r\n          httpOnly: false\r\n        });\r\n        res.headers.append(name, newSessionStr);\r\n      },\r\n      getRequestHeader: (key) => {\r\n        const header = req.headers.get(key) ?? void 0;\r\n        return header;\r\n      },\r\n      options: {\r\n        global: {\r\n          headers: {\r\n            \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n          }\r\n        }\r\n      },\r\n      cookieOptions: options.cookieOptions\r\n    });\r\n    const {\r\n      data: { session },\r\n      error\r\n    } = await supabase.auth.getSession();\r\n    if (error) {\r\n      throw new Error(\r\n        `Authorization error, redirecting to login page: ${error.message}`\r\n      );\r\n    } else if (!session) {\r\n      throw new Error(\"No auth session, redirecting\");\r\n    } else if (options.authGuard && !await options.authGuard.isPermitted(session.user, supabase)) {\r\n      throw new NoPermissionError(\"User is not permitted, redirecting\");\r\n    }\r\n    return res;\r\n  } catch (err) {\r\n    let { redirectTo = \"/\" } = options;\r\n    if (err instanceof NoPermissionError && !!((_a = options == null ? void 0 : options.authGuard) == null ? void 0 : _a.redirectTo)) {\r\n      redirectTo = options.authGuard.redirectTo;\r\n    }\r\n    if (err instanceof Error) {\r\n      console.log(\r\n        `Could not authenticate request, redirecting to ${redirectTo}:`,\r\n        err\r\n      );\r\n    }\r\n    const redirectUrl = req.nextUrl.clone();\r\n    redirectUrl.pathname = redirectTo;\r\n    redirectUrl.searchParams.set(`redirectedFrom`, req.nextUrl.pathname);\r\n    return import_server.NextResponse.redirect(redirectUrl);\r\n  }\r\n};\r\n\r\n// src/utils/withPageAuth.ts\r\nvar import_auth_helpers_shared2 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\r\nfunction withPageAuth({\r\n  authRequired = true,\r\n  redirectTo = \"/\",\r\n  getServerSideProps = void 0,\r\n  cookieOptions = {}\r\n} = {}) {\r\n  return async (context) => {\r\n    try {\r\n      if (!context.req.cookies) {\r\n        throw new import_auth_helpers_shared2.CookieNotParsed();\r\n      }\r\n      if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\r\n        throw new Error(\r\n          \"NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables are required!\"\r\n        );\r\n      }\r\n      const supabase = (0, import_auth_helpers_shared2.createServerSupabaseClient)({\r\n        supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n        supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n        getRequestHeader: (key) => context.req.headers[key],\r\n        getCookie(name) {\r\n          return context.req.cookies[name];\r\n        },\r\n        setCookie(name, value, options) {\r\n          var _a;\r\n          const newSetCookies = (0, import_auth_helpers_shared2.filterCookies)(\r\n            (0, import_auth_helpers_shared2.ensureArray)(((_a = context.res.getHeader(\"set-cookie\")) == null ? void 0 : _a.toString()) ?? []),\r\n            name\r\n          );\r\n          const newSessionStr = (0, import_auth_helpers_shared2.serializeCookie)(name, value, {\r\n            ...options,\r\n            httpOnly: false\r\n          });\r\n          context.res.setHeader(\"set-cookie\", [\r\n            ...newSetCookies,\r\n            newSessionStr\r\n          ]);\r\n        },\r\n        options: {\r\n          global: {\r\n            headers: {\r\n              \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n            }\r\n          }\r\n        },\r\n        cookieOptions\r\n      });\r\n      const {\r\n        data: { session },\r\n        error\r\n      } = await supabase.auth.getSession();\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      if (authRequired && !session) {\r\n        throw new import_auth_helpers_shared2.AuthHelperError(\"Unauthenticated\", \"unauthenticated\");\r\n      }\r\n      let ret = { props: {} };\r\n      if (getServerSideProps) {\r\n        try {\r\n          ret = await getServerSideProps(context, supabase);\r\n        } catch (error2) {\r\n          ret = {\r\n            props: {\r\n              error: String(error2)\r\n            }\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        ...ret,\r\n        props: {\r\n          initialSession: session,\r\n          user: (session == null ? void 0 : session.user) ?? null,\r\n          ...ret.props\r\n        }\r\n      };\r\n    } catch (e) {\r\n      if (authRequired) {\r\n        return {\r\n          redirect: {\r\n            destination: redirectTo,\r\n            permanent: false\r\n          }\r\n        };\r\n      }\r\n      return { props: {} };\r\n    }\r\n  };\r\n}\r\n\r\n// src/utils/withApiAuth.ts\r\nvar import_auth_helpers_shared3 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\r\nfunction withApiAuth(handler, options = {}) {\r\n  return async (req, res) => {\r\n    try {\r\n      if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\r\n        throw new Error(\r\n          \"NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables are required!\"\r\n        );\r\n      }\r\n      const supabase = (0, import_auth_helpers_shared3.createServerSupabaseClient)({\r\n        supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n        supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n        getCookie(name) {\r\n          return req.cookies[name];\r\n        },\r\n        setCookie(name, value, options2) {\r\n          var _a;\r\n          const newSetCookies = (0, import_auth_helpers_shared3.filterCookies)(\r\n            (0, import_auth_helpers_shared3.ensureArray)(((_a = res.getHeader(\"set-cookie\")) == null ? void 0 : _a.toString()) ?? []),\r\n            name\r\n          );\r\n          const newSessionStr = (0, import_auth_helpers_shared3.serializeCookie)(name, value, {\r\n            ...options2,\r\n            httpOnly: false\r\n          });\r\n          res.setHeader(\"set-cookie\", [...newSetCookies, newSessionStr]);\r\n        },\r\n        getRequestHeader: (key) => {\r\n          const header = req.headers[key];\r\n          if (typeof header === \"number\") {\r\n            return String(header);\r\n          }\r\n          return header;\r\n        },\r\n        options: {\r\n          global: {\r\n            headers: {\r\n              \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n            }\r\n          }\r\n        },\r\n        cookieOptions: options.cookieOptions\r\n      });\r\n      const {\r\n        data: { session },\r\n        error\r\n      } = await supabase.auth.getSession();\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      if (!session)\r\n        throw new import_auth_helpers_shared3.AuthHelperError(\"Unauthenticated\", \"unauthenticated\");\r\n      try {\r\n        await handler(req, res, supabase);\r\n      } catch (error2) {\r\n        res.status(500).json({\r\n          error: String(error2)\r\n        });\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      res.status(401).json({\r\n        error: \"not_authenticated\",\r\n        description: \"The user does not have an active session or is not authenticated\"\r\n      });\r\n      return;\r\n    }\r\n  };\r\n}\r\n\r\n// src/utils/log.ts\r\nvar dev = \"development\" !== \"production\";\r\nvar logger = {\r\n  log: (message, ...optionalParams) => {\r\n    dev ? console.log(message, ...optionalParams) : null;\r\n  },\r\n  error: (message, ...optionalParams) => {\r\n    console.error(message, ...optionalParams);\r\n  },\r\n  info: (message, ...optionalParams) => {\r\n    logger.log(message, ...optionalParams);\r\n  },\r\n  debug: (message, ...optionalParams) => {\r\n    logger.log(message, ...optionalParams);\r\n  },\r\n  warn: (message, ...optionalParams) => {\r\n    dev ? logger.error(message, ...optionalParams) : null;\r\n  }\r\n};\r\nvar log_default = logger;\r\n\r\n// src/index.ts\r\nfunction createBrowserSupabaseClient({\r\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n  options,\r\n  cookieOptions\r\n} = {}) {\r\n  var _a;\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error(\r\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\r\n    );\r\n  }\r\n  return (0, import_auth_helpers_shared4.createBrowserSupabaseClient)({\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    options: {\r\n      ...options,\r\n      global: {\r\n        ...options == null ? void 0 : options.global,\r\n        headers: {\r\n          ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\r\n          \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n        }\r\n      }\r\n    },\r\n    cookieOptions\r\n  });\r\n}\r\nfunction createServerSupabaseClient4(context, {\r\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n  options,\r\n  cookieOptions\r\n} = {}) {\r\n  var _a;\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error(\r\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\r\n    );\r\n  }\r\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    getRequestHeader: (key) => context.req.headers[key],\r\n    getCookie(name) {\r\n      return context.req.cookies[name];\r\n    },\r\n    setCookie(name, value, options2) {\r\n      var _a2;\r\n      const newSetCookies = (0, import_auth_helpers_shared4.filterCookies)(\r\n        (0, import_auth_helpers_shared4.ensureArray)(((_a2 = context.res.getHeader(\"set-cookie\")) == null ? void 0 : _a2.toString()) ?? []),\r\n        name\r\n      );\r\n      const newSessionStr = (0, import_auth_helpers_shared4.serializeCookie)(name, value, {\r\n        ...options2,\r\n        httpOnly: false\r\n      });\r\n      context.res.setHeader(\"set-cookie\", [...newSetCookies, newSessionStr]);\r\n    },\r\n    options: {\r\n      ...options,\r\n      global: {\r\n        ...options == null ? void 0 : options.global,\r\n        headers: {\r\n          ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\r\n          \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n        }\r\n      }\r\n    },\r\n    cookieOptions\r\n  });\r\n}\r\nfunction createMiddlewareSupabaseClient(context, {\r\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n  options,\r\n  cookieOptions\r\n} = {}) {\r\n  var _a;\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error(\r\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\r\n    );\r\n  }\r\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    getCookie(name) {\r\n      const cookies = (0, import_auth_helpers_shared4.parseCookies)(context.req.headers.get(\"cookie\") ?? \"\");\r\n      return cookies[name];\r\n    },\r\n    setCookie(name, value, options2) {\r\n      const newSessionStr = (0, import_auth_helpers_shared4.serializeCookie)(name, value, {\r\n        ...options2,\r\n        httpOnly: false\r\n      });\r\n      context.req.headers.append(\"cookie\", newSessionStr);\r\n      context.res.headers.set(\"set-cookie\", newSessionStr);\r\n    },\r\n    getRequestHeader: (key) => {\r\n      const header = context.req.headers.get(key) ?? void 0;\r\n      return header;\r\n    },\r\n    options: {\r\n      ...options,\r\n      global: {\r\n        ...options == null ? void 0 : options.global,\r\n        headers: {\r\n          ...(_a = options == null ? void 0 : options.global) == null ? void 0 : _a.headers,\r\n          \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n        }\r\n      }\r\n    },\r\n    cookieOptions\r\n  });\r\n}\r\nfunction createServerComponentSupabaseClient({\r\n  supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n  supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n  headers,\r\n  cookies,\r\n  options,\r\n  cookieOptions\r\n}) {\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error(\r\n      \"either NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY env variables or supabaseUrl and supabaseKey are required!\"\r\n    );\r\n  }\r\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    getRequestHeader: (key) => {\r\n      const headerList = headers();\r\n      return headerList.get(key);\r\n    },\r\n    getCookie(name) {\r\n      var _a;\r\n      const nextCookies = cookies();\r\n      return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;\r\n    },\r\n    setCookie() {\r\n    },\r\n    options: {\r\n      ...options,\r\n      global: {\r\n        ...options == null ? void 0 : options.global,\r\n        headers: {\r\n          \"X-Client-Info\": `${\"@supabase/auth-helpers-nextjs\"}@${\"0.5.9\"}`\r\n        }\r\n      }\r\n    },\r\n    cookieOptions\r\n  });\r\n}\r\nvar createRouteHandlerSupabaseClient = createServerComponentSupabaseClient;\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (0);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-helpers-react/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-helpers-react/dist/index.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n// src/index.tsx\r\nvar src_exports = {};\r\n__export(src_exports, {\r\n  SessionContextProvider: () => SessionContextProvider,\r\n  useSession: () => useSession,\r\n  useSessionContext: () => useSessionContext,\r\n  useSupabaseClient: () => useSupabaseClient,\r\n  useUser: () => useUser\r\n});\r\nmodule.exports = __toCommonJS(src_exports);\r\n\r\n// src/components/SessionContext.tsx\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\nvar SessionContext = (0, import_react.createContext)({\r\n  isLoading: true,\r\n  session: null,\r\n  error: null,\r\n  supabaseClient: {}\r\n});\r\nvar SessionContextProvider = ({\r\n  supabaseClient,\r\n  initialSession = null,\r\n  children\r\n}) => {\r\n  const [session, setSession] = (0, import_react.useState)(initialSession);\r\n  const [isLoading, setIsLoading] = (0, import_react.useState)(!initialSession);\r\n  const [error, setError] = (0, import_react.useState)();\r\n  (0, import_react.useEffect)(() => {\r\n    let mounted = true;\r\n    async function getSession() {\r\n      const {\r\n        data: { session: session2 },\r\n        error: error2\r\n      } = await supabaseClient.auth.getSession();\r\n      if (mounted) {\r\n        if (error2) {\r\n          setError(error2);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        setSession(session2);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    getSession();\r\n  }, []);\r\n  (0, import_react.useEffect)(() => {\r\n    const {\r\n      data: { subscription }\r\n    } = supabaseClient.auth.onAuthStateChange((event, session2) => {\r\n      if (session2 && (event === \"SIGNED_IN\" || event === \"TOKEN_REFRESHED\")) {\r\n        setSession(session2);\r\n      }\r\n      if (event === \"SIGNED_OUT\") {\r\n        setSession(null);\r\n      }\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n  const value = (0, import_react.useMemo)(() => {\r\n    if (isLoading) {\r\n      return {\r\n        isLoading: true,\r\n        session: null,\r\n        error: null,\r\n        supabaseClient\r\n      };\r\n    }\r\n    if (error) {\r\n      return {\r\n        isLoading: false,\r\n        session: null,\r\n        error,\r\n        supabaseClient\r\n      };\r\n    }\r\n    return {\r\n      isLoading: false,\r\n      session,\r\n      error: null,\r\n      supabaseClient\r\n    };\r\n  }, [isLoading, session, error]);\r\n  return /* @__PURE__ */ import_react.default.createElement(SessionContext.Provider, {\r\n    value\r\n  }, children);\r\n};\r\nvar useSessionContext = () => {\r\n  const context = (0, import_react.useContext)(SessionContext);\r\n  if (context === void 0) {\r\n    throw new Error(`useSessionContext must be used within a SessionContextProvider.`);\r\n  }\r\n  return context;\r\n};\r\nfunction useSupabaseClient() {\r\n  const context = (0, import_react.useContext)(SessionContext);\r\n  if (context === void 0) {\r\n    throw new Error(`useSupabaseClient must be used within a SessionContextProvider.`);\r\n  }\r\n  return context.supabaseClient;\r\n}\r\nvar useSession = () => {\r\n  const context = (0, import_react.useContext)(SessionContext);\r\n  if (context === void 0) {\r\n    throw new Error(`useSession must be used within a SessionContextProvider.`);\r\n  }\r\n  return context.session;\r\n};\r\nvar useUser = () => {\r\n  var _a, _b;\r\n  const context = (0, import_react.useContext)(SessionContext);\r\n  if (context === void 0) {\r\n    throw new Error(`useUser must be used within a SessionContextProvider.`);\r\n  }\r\n  return (_b = (_a = context.session) == null ? void 0 : _a.user) != null ? _b : null;\r\n};\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (0);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-helpers-react/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionsClient\": function() { return /* binding */ FunctionsClient; }\n/* harmony export */ });\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ \"./node_modules/@supabase/functions-js/dist/module/helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@supabase/functions-js/dist/module/types.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nclass FunctionsClient {\r\n    constructor(url, { headers = {}, customFetch, } = {}) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.fetch = (0,_helper__WEBPACK_IMPORTED_MODULE_0__.resolveFetch)(customFetch);\r\n    }\r\n    /**\r\n     * Updates the authorization header\r\n     * @param token - the new jwt token sent in the authorisation header\r\n     */\r\n    setAuth(token) {\r\n        this.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    /**\r\n     * Invokes a function\r\n     * @param functionName - The name of the Function to invoke.\r\n     * @param options - Options for invoking the Function.\r\n     */\r\n    invoke(functionName, options = {}) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { headers, method, body: functionArgs } = options;\r\n                let _headers = {};\r\n                let body;\r\n                if (functionArgs &&\r\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\r\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\r\n                        functionArgs instanceof ArrayBuffer) {\r\n                        // will work for File as File inherits Blob\r\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\r\n                        _headers['Content-Type'] = 'application/octet-stream';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof functionArgs === 'string') {\r\n                        // plain string\r\n                        _headers['Content-Type'] = 'text/plain';\r\n                        body = functionArgs;\r\n                    }\r\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\r\n                        // don't set content-type headers\r\n                        // Request will automatically add the right boundary value\r\n                        body = functionArgs;\r\n                    }\r\n                    else {\r\n                        // default, assume this is JSON\r\n                        _headers['Content-Type'] = 'application/json';\r\n                        body = JSON.stringify(functionArgs);\r\n                    }\r\n                }\r\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\r\n                    method: method || 'POST',\r\n                    // headers priority is (high to low):\r\n                    // 1. invoke-level headers\r\n                    // 2. client-level headers\r\n                    // 3. default Content-Type header\r\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\r\n                    body,\r\n                }).catch((fetchError) => {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsFetchError(fetchError);\r\n                });\r\n                const isRelayError = response.headers.get('x-relay-error');\r\n                if (isRelayError && isRelayError === 'true') {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsRelayError(response);\r\n                }\r\n                if (!response.ok) {\r\n                    throw new _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsHttpError(response);\r\n                }\r\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\r\n                let data;\r\n                if (responseType === 'application/json') {\r\n                    data = yield response.json();\r\n                }\r\n                else if (responseType === 'application/octet-stream') {\r\n                    data = yield response.blob();\r\n                }\r\n                else if (responseType === 'multipart/form-data') {\r\n                    data = yield response.formData();\r\n                }\r\n                else {\r\n                    // default to text\r\n                    data = yield response.text();\r\n                }\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                return { data: null, error };\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=FunctionsClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/helper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/helper.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resolveFetch\": function() { return /* binding */ resolveFetch; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\", 23))).fetch(...args); });\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9oZWxwZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRSxvQkFBb0Isb0tBQXFCLG1CQUFtQjtBQUMzSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9oZWxwZXIuanM/YjY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiB5aWVsZCAoeWllbGQgaW1wb3J0KCdjcm9zcy1mZXRjaCcpKS5mZXRjaCguLi5hcmdzKTsgfSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcclxuICAgIH1cclxuICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/helper.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionsClient\": function() { return /* reexport safe */ _FunctionsClient__WEBPACK_IMPORTED_MODULE_0__.FunctionsClient; },\n/* harmony export */   \"FunctionsError\": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsError; },\n/* harmony export */   \"FunctionsFetchError\": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsFetchError; },\n/* harmony export */   \"FunctionsHttpError\": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsHttpError; },\n/* harmony export */   \"FunctionsRelayError\": function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsRelayError; }\n/* harmony export */ });\n/* harmony import */ var _FunctionsClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FunctionsClient */ \"./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@supabase/functions-js/dist/module/types.js\");\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9EO0FBQ29EO0FBQ3hHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzPzUyN2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgRnVuY3Rpb25zQ2xpZW50IH0gZnJvbSAnLi9GdW5jdGlvbnNDbGllbnQnO1xyXG5leHBvcnQgeyBGdW5jdGlvbnNFcnJvciwgRnVuY3Rpb25zRmV0Y2hFcnJvciwgRnVuY3Rpb25zSHR0cEVycm9yLCBGdW5jdGlvbnNSZWxheUVycm9yLCB9IGZyb20gJy4vdHlwZXMnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/types.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionsError\": function() { return /* binding */ FunctionsError; },\n/* harmony export */   \"FunctionsFetchError\": function() { return /* binding */ FunctionsFetchError; },\n/* harmony export */   \"FunctionsHttpError\": function() { return /* binding */ FunctionsHttpError; },\n/* harmony export */   \"FunctionsRelayError\": function() { return /* binding */ FunctionsRelayError; }\n/* harmony export */ });\nclass FunctionsError extends Error {\r\n    constructor(message, name = 'FunctionsError', context) {\r\n        super(message);\r\n        super.name = name;\r\n        this.context = context;\r\n    }\r\n}\r\nclass FunctionsFetchError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\r\n    }\r\n}\r\nclass FunctionsRelayError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\r\n    }\r\n}\r\nclass FunctionsHttpError extends FunctionsError {\r\n    constructor(context) {\r\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\r\n    }\r\n}\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS90eXBlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS90eXBlcy5qcz82ODhlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGdW5jdGlvbnNFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG5hbWUgPSAnRnVuY3Rpb25zRXJyb3InLCBjb250ZXh0KSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgc3VwZXIubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zRmV0Y2hFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcclxuICAgICAgICBzdXBlcignRmFpbGVkIHRvIHNlbmQgYSByZXF1ZXN0IHRvIHRoZSBFZGdlIEZ1bmN0aW9uJywgJ0Z1bmN0aW9uc0ZldGNoRXJyb3InLCBjb250ZXh0KTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zUmVsYXlFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcclxuICAgICAgICBzdXBlcignUmVsYXkgRXJyb3IgaW52b2tpbmcgdGhlIEVkZ2UgRnVuY3Rpb24nLCAnRnVuY3Rpb25zUmVsYXlFcnJvcicsIGNvbnRleHQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBGdW5jdGlvbnNIdHRwRXJyb3IgZXh0ZW5kcyBGdW5jdGlvbnNFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XHJcbiAgICAgICAgc3VwZXIoJ0VkZ2UgRnVuY3Rpb24gcmV0dXJuZWQgYSBub24tMnh4IHN0YXR1cyBjb2RlJywgJ0Z1bmN0aW9uc0h0dHBFcnJvcicsIGNvbnRleHQpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueAdminApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nclass GoTrueAdminApi {\r\n    constructor({ url = '', headers = {}, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n        this.mfa = {\r\n            listFactors: this._listFactors.bind(this),\r\n            deleteFactor: this._deleteFactor.bind(this),\r\n        };\r\n    }\r\n    /**\r\n     * Removes a logged-in session.\r\n     * @param jwt A valid, logged-in JWT.\r\n     */\r\n    signOut(jwt) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/logout`, {\r\n                    headers: this.headers,\r\n                    jwt,\r\n                    noResolveJson: true,\r\n                });\r\n                return { data: null, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sends an invite link to an email address.\r\n     * @param email The email address of the user.\r\n     * @param options Additional options to be included when inviting.\r\n     */\r\n    inviteUserByEmail(email, options = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/invite`, {\r\n                    body: { email, data: options.data },\r\n                    headers: this.headers,\r\n                    redirectTo: options.redirectTo,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Generates email links and OTPs to be sent via a custom email provider.\r\n     * @param email The user's email.\r\n     * @param options.password User password. For signup only.\r\n     * @param options.data Optional user metadata. For signup only.\r\n     * @param options.redirectTo The redirect url which should be appended to the generated link\r\n     */\r\n    generateLink(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { options } = params, rest = __rest(params, [\"options\"]);\r\n                const body = Object.assign(Object.assign({}, rest), options);\r\n                if ('newEmail' in rest) {\r\n                    // replace newEmail with new_email in request body\r\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\r\n                    delete body['newEmail'];\r\n                }\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\r\n                    body: body,\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._generateLinkResponse,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return {\r\n                        data: {\r\n                            properties: null,\r\n                            user: null,\r\n                        },\r\n                        error,\r\n                    };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    // User Admin API\r\n    /**\r\n     * Creates a new user.\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    createUser(attributes) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\r\n                    body: attributes,\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Get a list of users.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\r\n     */\r\n    listUsers(params) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\r\n                const response = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\r\n                    headers: this.headers,\r\n                    noResolveJson: true,\r\n                    query: {\r\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\r\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._noResolveJsonResponse,\r\n                });\r\n                if (response.error)\r\n                    throw response.error;\r\n                const users = yield response.json();\r\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\r\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\r\n                if (links.length > 0) {\r\n                    links.forEach((link) => {\r\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\r\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\r\n                        pagination[`${rel}Page`] = page;\r\n                    });\r\n                    pagination.total = parseInt(total);\r\n                }\r\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { users: [] }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Get user by id.\r\n     *\r\n     * @param uid The user's unique identifier\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    getUserById(uid) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Updates the user data.\r\n     *\r\n     * @param attributes The data you want to update.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    updateUserById(uid, attributes) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\r\n                    body: attributes,\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Delete a user. Requires a `service_role` key.\r\n     *\r\n     * @param id The user id you want to remove.\r\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\r\n     * Defaults to false for backward compatibility.\r\n     *\r\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\r\n     */\r\n    deleteUser(id, shouldSoftDelete = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        should_soft_delete: shouldSoftDelete,\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    _listFactors(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data, error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\r\n                    headers: this.headers,\r\n                    xform: (factors) => {\r\n                        return { data: { factors }, error: null };\r\n                    },\r\n                });\r\n                return { data, error };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    _deleteFactor(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\r\n                    headers: this.headers,\r\n                });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=GoTrueAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueClient; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/local-storage */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js\");\n/* harmony import */ var _lib_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/polyfills */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_lib_polyfills__WEBPACK_IMPORTED_MODULE_6__.polyfillGlobalThis)(); // Make \"globalThis\" available\r\nconst DEFAULT_OPTIONS = {\r\n    url: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.GOTRUE_URL,\r\n    storageKey: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.STORAGE_KEY,\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS,\r\n    flowType: 'implicit',\r\n};\r\n/** Current session will be checked for refresh at this interval. */\r\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000;\r\n/**\r\n * A token refresh will be attempted this many ticks before the current session expires. */\r\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\r\nclass GoTrueClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     */\r\n    constructor(options) {\r\n        var _a;\r\n        this.stateChangeEmitters = new Map();\r\n        this.autoRefreshTicker = null;\r\n        this.visibilityChangedCallback = null;\r\n        this.refreshingDeferred = null;\r\n        /**\r\n         * Keeps track of the async client initialization.\r\n         * When null or not yet resolved the auth state is `unknown`\r\n         * Once resolved the the auth state is known and it's save to call any further client methods.\r\n         * Keep extra care to never reject or throw uncaught errors\r\n         */\r\n        this.initializePromise = null;\r\n        this.detectSessionInUrl = true;\r\n        /**\r\n         * Used to broadcast state change events to other tabs listening.\r\n         */\r\n        this.broadcastChannel = null;\r\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\r\n        this.inMemorySession = null;\r\n        this.storageKey = settings.storageKey;\r\n        this.autoRefreshToken = settings.autoRefreshToken;\r\n        this.persistSession = settings.persistSession;\r\n        this.storage = settings.storage || _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\r\n        this.admin = new _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            url: settings.url,\r\n            headers: settings.headers,\r\n            fetch: settings.fetch,\r\n        });\r\n        this.url = settings.url;\r\n        this.headers = settings.headers;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.resolveFetch)(settings.fetch);\r\n        this.detectSessionInUrl = settings.detectSessionInUrl;\r\n        this.flowType = settings.flowType;\r\n        this.mfa = {\r\n            verify: this._verify.bind(this),\r\n            enroll: this._enroll.bind(this),\r\n            unenroll: this._unenroll.bind(this),\r\n            challenge: this._challenge.bind(this),\r\n            listFactors: this._listFactors.bind(this),\r\n            challengeAndVerify: this._challengeAndVerify.bind(this),\r\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\r\n        };\r\n        if (this.persistSession && this.storage === _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__[\"default\"] && !(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.supportsLocalStorage)()) {\r\n            console.warn(`No storage option exists to persist the session, which may result in unexpected behavior when using auth.\r\n        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.`);\r\n        }\r\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\r\n            try {\r\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\r\n            }\r\n            catch (e) {\r\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\r\n            }\r\n            (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', (event) => __awaiter(this, void 0, void 0, function* () {\r\n                yield this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\r\n            }));\r\n        }\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Initializes the client session either from the url or from storage.\r\n     * This method is automatically called when instantiating the client, but should also be called\r\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\r\n     */\r\n    initialize() {\r\n        if (!this.initializePromise) {\r\n            this.initializePromise = this._initialize();\r\n        }\r\n        return this.initializePromise;\r\n    }\r\n    /**\r\n     * IMPORTANT:\r\n     * 1. Never throw in this method, as it is called from the constructor\r\n     * 2. Never return a session from this method as it would be cached over\r\n     *    the whole lifetime of the client\r\n     */\r\n    _initialize() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.initializePromise) {\r\n                return this.initializePromise;\r\n            }\r\n            try {\r\n                const isPKCEFlow = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() ? yield this._isPKCEFlow() : false;\r\n                if (isPKCEFlow || (this.detectSessionInUrl && this._isImplicitGrantFlow())) {\r\n                    const { data, error } = yield this._getSessionFromUrl(isPKCEFlow);\r\n                    if (error) {\r\n                        // failed login attempt via url,\r\n                        // remove old session as in verifyOtp, signUp and signInWith*\r\n                        yield this._removeSession();\r\n                        return { error };\r\n                    }\r\n                    const { session, redirectType } = data;\r\n                    yield this._saveSession(session);\r\n                    setTimeout(() => __awaiter(this, void 0, void 0, function* () {\r\n                        if (redirectType === 'recovery') {\r\n                            yield this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\r\n                        }\r\n                        else {\r\n                            yield this._notifyAllSubscribers('SIGNED_IN', session);\r\n                        }\r\n                    }), 0);\r\n                    return { error: null };\r\n                }\r\n                // no login attempt via callback url try to recover session from storage\r\n                yield this._recoverAndRefresh();\r\n                return { error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { error };\r\n                }\r\n                return {\r\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError('Unexpected error during initialization', error),\r\n                };\r\n            }\r\n            finally {\r\n                yield this._handleVisibilityChange();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a new user.\r\n     *\r\n     * Be aware that if a user account exists in the system you may get back an\r\n     * error message that attempts to hide this information from the user.\r\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\r\n     *\r\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\r\n     * @returns A user if the server has \"autoconfirm\" OFF\r\n     */\r\n    signUp(credentials) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this._removeSession();\r\n                let res;\r\n                if ('email' in credentials) {\r\n                    const { email, password, options } = credentials;\r\n                    let codeChallenge = null;\r\n                    let codeChallengeMethod = null;\r\n                    if (this.flowType === 'pkce') {\r\n                        const codeVerifier = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEVerifier)();\r\n                        yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\r\n                        codeChallenge = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEChallenge)(codeVerifier);\r\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n                    }\r\n                    res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                        headers: this.headers,\r\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                        body: {\r\n                            email,\r\n                            password,\r\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                            code_challenge: codeChallenge,\r\n                            code_challenge_method: codeChallengeMethod,\r\n                        },\r\n                        xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                    });\r\n                }\r\n                else if ('phone' in credentials) {\r\n                    const { phone, password, options } = credentials;\r\n                    res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            phone,\r\n                            password,\r\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\r\n                            channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        },\r\n                        xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                    });\r\n                }\r\n                else {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n                }\r\n                const { data, error } = res;\r\n                if (error || !data) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                const session = data.session;\r\n                const user = data.user;\r\n                if (data.session) {\r\n                    yield this._saveSession(data.session);\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', session);\r\n                }\r\n                return { data: { user, session }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Log in an existing user with an email and password or phone and password.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or that the\r\n     * email/phone and password combination is wrong or that the account can only\r\n     * be accessed via social login.\r\n     */\r\n    signInWithPassword(credentials) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this._removeSession();\r\n                let res;\r\n                if ('email' in credentials) {\r\n                    const { email, password, options } = credentials;\r\n                    res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            email,\r\n                            password,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        },\r\n                        xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                    });\r\n                }\r\n                else if ('phone' in credentials) {\r\n                    const { phone, password, options } = credentials;\r\n                    res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            phone,\r\n                            password,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        },\r\n                        xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                    });\r\n                }\r\n                else {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\r\n                }\r\n                const { data, error } = res;\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                else if (!data || !data.session || !data.user) {\r\n                    return { data: { user: null, session: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError() };\r\n                }\r\n                if (data.session) {\r\n                    yield this._saveSession(data.session);\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n                }\r\n                return { data: { user: data.user, session: data.session }, error };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Log in an existing user via a third-party provider.\r\n     * This method supports the PKCE flow.\r\n     */\r\n    signInWithOAuth(credentials) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._removeSession();\r\n            return yield this._handleProviderSignIn(credentials.provider, {\r\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\r\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\r\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\r\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\r\n     */\r\n    exchangeCodeForSession(authCode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const codeVerifier = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            const { data, error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\r\n                headers: this.headers,\r\n                body: {\r\n                    auth_code: authCode,\r\n                    code_verifier: codeVerifier,\r\n                },\r\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n            });\r\n            yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            if (error) {\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            else if (!data || !data.session || !data.user) {\r\n                return { data: { user: null, session: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError() };\r\n            }\r\n            if (data.session) {\r\n                yield this._saveSession(data.session);\r\n                yield this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n            }\r\n            return { data, error };\r\n        });\r\n    }\r\n    /**\r\n     * Allows signing in with an ID token issued by certain supported providers.\r\n     * The ID token is verified for validity and a new session is established.\r\n     *\r\n     * @experimental\r\n     */\r\n    signInWithIdToken(credentials) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._removeSession();\r\n            try {\r\n                const { options, provider, token, nonce } = credentials;\r\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\r\n                    headers: this.headers,\r\n                    body: {\r\n                        provider,\r\n                        id_token: token,\r\n                        nonce,\r\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                    },\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n                const { data, error } = res;\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                else if (!data || !data.session || !data.user) {\r\n                    return {\r\n                        data: { user: null, session: null },\r\n                        error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\r\n                    };\r\n                }\r\n                if (data.session) {\r\n                    yield this._saveSession(data.session);\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', data.session);\r\n                }\r\n                return { data, error };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Log in a user using magiclink or a one-time password (OTP).\r\n     *\r\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\r\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\r\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\r\n     *\r\n     * Be aware that you may get back an error message that will not distinguish\r\n     * between the cases where the account does not exist or, that the account\r\n     * can only be accessed via social login.\r\n     *\r\n     * Do note that you will need to configure a Whatsapp sender on Twilio\r\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\r\n     * channel is not supported on other providers\r\n     * at this time.\r\n     * This method supports PKCE when an email is passed.\r\n     */\r\n    signInWithOtp(credentials) {\r\n        var _a, _b, _c, _d, _e;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this._removeSession();\r\n                if ('email' in credentials) {\r\n                    const { email, options } = credentials;\r\n                    let codeChallenge = null;\r\n                    let codeChallengeMethod = null;\r\n                    if (this.flowType === 'pkce') {\r\n                        const codeVerifier = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEVerifier)();\r\n                        yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\r\n                        codeChallenge = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEChallenge)(codeVerifier);\r\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n                    }\r\n                    const { error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            email,\r\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\r\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                            code_challenge: codeChallenge,\r\n                            code_challenge_method: codeChallengeMethod,\r\n                        },\r\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    });\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                if ('phone' in credentials) {\r\n                    const { phone, options } = credentials;\r\n                    const { error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            phone,\r\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\r\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                            channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\r\n                        },\r\n                    });\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number.');\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Log in a user given a User supplied OTP received via mobile.\r\n     */\r\n    verifyOtp(params) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (params.type !== 'email_change' && params.type !== 'phone_change') {\r\n                    // we don't want to remove the authenticated session if the user is performing an email_change or phone_change verification\r\n                    yield this._removeSession();\r\n                }\r\n                const { data, error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/verify`, {\r\n                    headers: this.headers,\r\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\r\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                });\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n                if (!data) {\r\n                    throw new Error('An error occurred on token verification.');\r\n                }\r\n                const session = data.session;\r\n                const user = data.user;\r\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\r\n                    yield this._saveSession(session);\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', session);\r\n                }\r\n                return { data: { user, session }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Attempts a single-sign on using an enterprise Identity Provider. A\r\n     * successful SSO attempt will redirect the current page to the identity\r\n     * provider authorization page. The redirect URL is implementation and SSO\r\n     * protocol specific.\r\n     *\r\n     * You can use it by providing a SSO domain. Typically you can extract this\r\n     * domain by asking users for their email address. If this domain is\r\n     * registered on the Auth instance the redirect will use that organization's\r\n     * currently active SSO Identity Provider for the login.\r\n     *\r\n     * If you have built an organization-specific login page, you can use the\r\n     * organization's SSO Identity Provider UUID directly instead.\r\n     */\r\n    signInWithSSO(params) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this._removeSession();\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/sso`, {\r\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\r\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\r\n                        : null)), { skip_http_redirect: true }),\r\n                    headers: this.headers,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._ssoResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sends a reauthentication OTP to the user's email or phone number.\r\n     * Requires the user to be signed-in.\r\n     */\r\n    reauthenticate() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: { session }, error: sessionError, } = yield this.getSession();\r\n                if (sessionError)\r\n                    throw sessionError;\r\n                if (!session)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                const { error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\r\n                    headers: this.headers,\r\n                    jwt: session.access_token,\r\n                });\r\n                return { data: { user: null, session: null }, error };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\r\n     */\r\n    resend(credentials) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this._removeSession();\r\n                const endpoint = `${this.url}/resend`;\r\n                if ('email' in credentials) {\r\n                    const { email, type, options } = credentials;\r\n                    const { error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            email,\r\n                            type,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        },\r\n                    });\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                else if ('phone' in credentials) {\r\n                    const { phone, type, options } = credentials;\r\n                    const { error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\r\n                        headers: this.headers,\r\n                        body: {\r\n                            phone,\r\n                            type,\r\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\r\n                        },\r\n                    });\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns the session, refreshing it if necessary.\r\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\r\n     */\r\n    getSession() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // make sure we've read the session from the url if there is one\r\n            // save to just await, as long we make sure _initialize() never throws\r\n            yield this.initializePromise;\r\n            let currentSession = null;\r\n            if (this.persistSession) {\r\n                const maybeSession = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n                if (maybeSession !== null) {\r\n                    if (this._isValidSession(maybeSession)) {\r\n                        currentSession = maybeSession;\r\n                    }\r\n                    else {\r\n                        yield this._removeSession();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                currentSession = this.inMemorySession;\r\n            }\r\n            if (!currentSession) {\r\n                return { data: { session: null }, error: null };\r\n            }\r\n            const hasExpired = currentSession.expires_at\r\n                ? currentSession.expires_at <= Date.now() / 1000\r\n                : false;\r\n            if (!hasExpired) {\r\n                return { data: { session: currentSession }, error: null };\r\n            }\r\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\r\n            if (error) {\r\n                return { data: { session: null }, error };\r\n            }\r\n            return { data: { session }, error: null };\r\n        });\r\n    }\r\n    /**\r\n     * Gets the current user details if there is an existing session.\r\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\r\n     */\r\n    getUser(jwt) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (!jwt) {\r\n                    const { data, error } = yield this.getSession();\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n                    // Default to Authorization header if there is no existing session\r\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\r\n                }\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    jwt: jwt,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Updates user data for a logged in user.\r\n     */\r\n    updateUser(attributes, options = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: sessionData, error: sessionError } = yield this.getSession();\r\n                if (sessionError) {\r\n                    throw sessionError;\r\n                }\r\n                if (!sessionData.session) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const session = sessionData.session;\r\n                const { data, error: userError } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'PUT', `${this.url}/user`, {\r\n                    headers: this.headers,\r\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\r\n                    body: attributes,\r\n                    jwt: session.access_token,\r\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\r\n                });\r\n                if (userError)\r\n                    throw userError;\r\n                session.user = data.user;\r\n                yield this._saveSession(session);\r\n                yield this._notifyAllSubscribers('USER_UPDATED', session);\r\n                return { data: { user: session.user }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Decodes a JWT (without performing any validation).\r\n     */\r\n    _decodeJWT(jwt) {\r\n        return (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWTPayload)(jwt);\r\n    }\r\n    /**\r\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\r\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\r\n     * @param currentSession The current session that minimally contains an access token and refresh token.\r\n     */\r\n    setSession(currentSession) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (!currentSession.access_token || !currentSession.refresh_token) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const timeNow = Date.now() / 1000;\r\n                let expiresAt = timeNow;\r\n                let hasExpired = true;\r\n                let session = null;\r\n                const payload = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWTPayload)(currentSession.access_token);\r\n                if (payload.exp) {\r\n                    expiresAt = payload.exp;\r\n                    hasExpired = expiresAt <= timeNow;\r\n                }\r\n                if (hasExpired) {\r\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\r\n                    if (error) {\r\n                        return { data: { user: null, session: null }, error: error };\r\n                    }\r\n                    if (!refreshedSession) {\r\n                        return { data: { user: null, session: null }, error: null };\r\n                    }\r\n                    session = refreshedSession;\r\n                }\r\n                else {\r\n                    const { data, error } = yield this.getUser(currentSession.access_token);\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n                    session = {\r\n                        access_token: currentSession.access_token,\r\n                        refresh_token: currentSession.refresh_token,\r\n                        user: data.user,\r\n                        token_type: 'bearer',\r\n                        expires_in: expiresAt - timeNow,\r\n                        expires_at: expiresAt,\r\n                    };\r\n                    yield this._saveSession(session);\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', session);\r\n                }\r\n                return { data: { user: session.user, session }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { session: null, user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns a new session, regardless of expiry status.\r\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\r\n     * If the current session's refresh token is invalid, an error will be thrown.\r\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\r\n     */\r\n    refreshSession(currentSession) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (!currentSession) {\r\n                    const { data, error } = yield this.getSession();\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\r\n                }\r\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\r\n                if (error) {\r\n                    return { data: { user: null, session: null }, error: error };\r\n                }\r\n                if (!session) {\r\n                    return { data: { user: null, session: null }, error: null };\r\n                }\r\n                return { data: { user: session.user, session }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { user: null, session: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Gets the session data from a URL string\r\n     */\r\n    _getSessionFromUrl(isPKCEFlow) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)())\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No browser detected.');\r\n                if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\r\n                }\r\n                else if (this.flowType == 'pkce' && !isPKCEFlow) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\r\n                }\r\n                if (isPKCEFlow) {\r\n                    const authCode = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('code');\r\n                    if (!authCode)\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('No code detected.');\r\n                    const { data, error } = yield this.exchangeCodeForSession(authCode);\r\n                    if (error)\r\n                        throw error;\r\n                    if (!data.session)\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('No session detected.');\r\n                    let url = new URL(window.location.href);\r\n                    url.searchParams.delete('code');\r\n                    window.history.replaceState(window.history.state, '', url.toString());\r\n                    return { data: { session: data.session, redirectType: null }, error: null };\r\n                }\r\n                const error_description = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('error_description');\r\n                if (error_description) {\r\n                    const error_code = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('error_code');\r\n                    if (!error_code)\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No error_code detected.');\r\n                    const error = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('error');\r\n                    if (!error)\r\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No error detected.');\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\r\n                }\r\n                const provider_token = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('provider_token');\r\n                const provider_refresh_token = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('provider_refresh_token');\r\n                const access_token = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('access_token');\r\n                if (!access_token)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No access_token detected.');\r\n                const expires_in = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('expires_in');\r\n                if (!expires_in)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No expires_in detected.');\r\n                const refresh_token = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('refresh_token');\r\n                if (!refresh_token)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No refresh_token detected.');\r\n                const token_type = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('token_type');\r\n                if (!token_type)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No token_type detected.');\r\n                const timeNow = Math.round(Date.now() / 1000);\r\n                const expires_at = timeNow + parseInt(expires_in);\r\n                const { data, error } = yield this.getUser(access_token);\r\n                if (error)\r\n                    throw error;\r\n                const user = data.user;\r\n                const session = {\r\n                    provider_token,\r\n                    provider_refresh_token,\r\n                    access_token,\r\n                    expires_in: parseInt(expires_in),\r\n                    expires_at,\r\n                    refresh_token,\r\n                    token_type,\r\n                    user,\r\n                };\r\n                const redirectType = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('type');\r\n                // Remove tokens from URL\r\n                window.location.hash = '';\r\n                return { data: { session, redirectType }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { session: null, redirectType: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\r\n     */\r\n    _isImplicitGrantFlow() {\r\n        return ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() &&\r\n            (Boolean((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('access_token')) ||\r\n                Boolean((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('error_description'))));\r\n    }\r\n    /**\r\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\r\n     */\r\n    _isPKCEFlow() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const currentStorageContent = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            return Boolean((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getParameterByName)('code')) && Boolean(currentStorageContent);\r\n        });\r\n    }\r\n    /**\r\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\r\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\r\n     *\r\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\r\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\r\n     */\r\n    signOut() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data, error: sessionError } = yield this.getSession();\r\n            if (sessionError) {\r\n                return { error: sessionError };\r\n            }\r\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\r\n            if (accessToken) {\r\n                const { error } = yield this.admin.signOut(accessToken);\r\n                if (error) {\r\n                    // ignore 404s since user might not exist anymore\r\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\r\n                    if (!((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthApiError)(error) && (error.status === 404 || error.status === 401))) {\r\n                        return { error };\r\n                    }\r\n                }\r\n            }\r\n            yield this._removeSession();\r\n            yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\r\n            yield this._notifyAllSubscribers('SIGNED_OUT', null);\r\n            return { error: null };\r\n        });\r\n    }\r\n    /**\r\n     * Receive a notification every time an auth event happens.\r\n     * @param callback A callback function to be invoked when an auth event happens.\r\n     */\r\n    onAuthStateChange(callback) {\r\n        const id = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.uuid)();\r\n        const subscription = {\r\n            id,\r\n            callback,\r\n            unsubscribe: () => {\r\n                this.stateChangeEmitters.delete(id);\r\n            },\r\n        };\r\n        this.stateChangeEmitters.set(id, subscription);\r\n        this.emitInitialSession(id);\r\n        return { data: { subscription } };\r\n    }\r\n    emitInitialSession(id) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: { session }, error, } = yield this.getSession();\r\n                if (error)\r\n                    throw error;\r\n                yield ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\r\n            }\r\n            catch (err) {\r\n                yield ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sends a password reset request to an email address.\r\n     * This method supports the PKCE flow.\r\n     * @param email The email address of the user.\r\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\r\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\r\n     */\r\n    resetPasswordForEmail(email, options = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let codeChallenge = null;\r\n            let codeChallengeMethod = null;\r\n            if (this.flowType === 'pkce') {\r\n                const codeVerifier = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEVerifier)();\r\n                yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\r\n                codeChallenge = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEChallenge)(codeVerifier);\r\n                codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n            }\r\n            try {\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/recover`, {\r\n                    body: {\r\n                        email,\r\n                        code_challenge: codeChallenge,\r\n                        code_challenge_method: codeChallengeMethod,\r\n                        gotrue_meta_security: { captcha_token: options.captchaToken },\r\n                    },\r\n                    headers: this.headers,\r\n                    redirectTo: options.redirectTo,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Generates a new JWT.\r\n     * @param refreshToken A valid refresh token that was returned on login.\r\n     */\r\n    _refreshAccessToken(refreshToken) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const startedAt = Date.now();\r\n                // will attempt to refresh the token with exponential backoff\r\n                return yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.retryable)((attempt) => __awaiter(this, void 0, void 0, function* () {\r\n                    yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.sleep)(attempt * 200); // 0, 200, 400, 800, ...\r\n                    return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\r\n                        body: { refresh_token: refreshToken },\r\n                        headers: this.headers,\r\n                        xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\r\n                    });\r\n                }), (attempt, _, result) => result &&\r\n                    result.error &&\r\n                    result.error instanceof _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError &&\r\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\r\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: { session: null, user: null }, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    _isValidSession(maybeSession) {\r\n        const isValidSession = typeof maybeSession === 'object' &&\r\n            maybeSession !== null &&\r\n            'access_token' in maybeSession &&\r\n            'refresh_token' in maybeSession &&\r\n            'expires_at' in maybeSession;\r\n        return isValidSession;\r\n    }\r\n    _handleProviderSignIn(provider, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const url = yield this._getUrlForProvider(provider, {\r\n                redirectTo: options.redirectTo,\r\n                scopes: options.scopes,\r\n                queryParams: options.queryParams,\r\n            });\r\n            // try to open on the browser\r\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !options.skipBrowserRedirect) {\r\n                window.location.assign(url);\r\n            }\r\n            return { data: { provider, url }, error: null };\r\n        });\r\n    }\r\n    /**\r\n     * Recovers the session from LocalStorage and refreshes\r\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\r\n     */\r\n    _recoverAndRefresh() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const currentSession = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\r\n                if (!this._isValidSession(currentSession)) {\r\n                    if (currentSession !== null) {\r\n                        yield this._removeSession();\r\n                    }\r\n                    return;\r\n                }\r\n                const timeNow = Math.round(Date.now() / 1000);\r\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN) {\r\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\r\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\r\n                        if (error) {\r\n                            console.log(error.message);\r\n                            yield this._removeSession();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.persistSession) {\r\n                        yield this._saveSession(currentSession);\r\n                    }\r\n                    yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    _callRefreshToken(refreshToken) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // refreshing is already in progress\r\n            if (this.refreshingDeferred) {\r\n                return this.refreshingDeferred.promise;\r\n            }\r\n            try {\r\n                this.refreshingDeferred = new _lib_helpers__WEBPACK_IMPORTED_MODULE_4__.Deferred();\r\n                if (!refreshToken) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                }\r\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\r\n                if (error)\r\n                    throw error;\r\n                if (!data.session)\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\r\n                yield this._saveSession(data.session);\r\n                yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\r\n                const result = { session: data.session, error: null };\r\n                this.refreshingDeferred.resolve(result);\r\n                return result;\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    const result = { session: null, error };\r\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\r\n                    return result;\r\n                }\r\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\r\n                throw error;\r\n            }\r\n            finally {\r\n                this.refreshingDeferred = null;\r\n            }\r\n        });\r\n    }\r\n    _notifyAllSubscribers(event, session, broadcast = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.broadcastChannel && broadcast) {\r\n                this.broadcastChannel.postMessage({ event, session });\r\n            }\r\n            const errors = [];\r\n            const promises = Array.from(this.stateChangeEmitters.values()).map((x) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    yield x.callback(event, session);\r\n                }\r\n                catch (e) {\r\n                    errors.push(e);\r\n                }\r\n            }));\r\n            yield Promise.all(promises);\r\n            if (errors.length > 0) {\r\n                for (let i = 0; i < errors.length; i += 1) {\r\n                    console.error(errors[i]);\r\n                }\r\n                throw errors[0];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * set currentSession and currentUser\r\n     * process to _startAutoRefreshToken if possible\r\n     */\r\n    _saveSession(session) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.persistSession) {\r\n                this.inMemorySession = session;\r\n            }\r\n            if (this.persistSession && session.expires_at) {\r\n                yield this._persistSession(session);\r\n            }\r\n        });\r\n    }\r\n    _persistSession(currentSession) {\r\n        return (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, currentSession);\r\n    }\r\n    _removeSession() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.persistSession) {\r\n                yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey);\r\n            }\r\n            else {\r\n                this.inMemorySession = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes any registered visibilitychange callback.\r\n     *\r\n     * {@see #startAutoRefresh}\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    _removeVisibilityChangedCallback() {\r\n        const callback = this.visibilityChangedCallback;\r\n        this.visibilityChangedCallback = null;\r\n        try {\r\n            if (callback && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\r\n                window.removeEventListener('visibilitychange', callback);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('removing visibilitychange callback failed', e);\r\n        }\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    _startAutoRefresh() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._stopAutoRefresh();\r\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\r\n            this.autoRefreshTicker = ticker;\r\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\r\n                // ticker is a NodeJS Timeout object that has an `unref` method\r\n                // https://nodejs.org/api/timers.html#timeoutunref\r\n                // When auto refresh is used in NodeJS (like for testing) the\r\n                // `setInterval` is preventing the process from being marked as\r\n                // finished and tests run endlessly. This can be prevented by calling\r\n                // `unref()` on the returned object.\r\n                ticker.unref();\r\n                // @ts-ignore\r\n            }\r\n            else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\r\n                // similar like for NodeJS, but with the Deno API\r\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\r\n                // @ts-ignore\r\n                Deno.unrefTimer(ticker);\r\n            }\r\n            // run the tick immediately\r\n            yield this._autoRefreshTokenTick();\r\n        });\r\n    }\r\n    /**\r\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\r\n     * within the library.\r\n     */\r\n    _stopAutoRefresh() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const ticker = this.autoRefreshTicker;\r\n            this.autoRefreshTicker = null;\r\n            if (ticker) {\r\n                clearInterval(ticker);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Starts an auto-refresh process in the background. The session is checked\r\n     * every few seconds. Close to the time of expiration a process is started to\r\n     * refresh the session. If refreshing fails it will be retried for as long as\r\n     * necessary.\r\n     *\r\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\r\n     * to call this function, it will be called for you.\r\n     *\r\n     * On browsers the refresh process works only when the tab/window is in the\r\n     * foreground to conserve resources as well as prevent race conditions and\r\n     * flooding auth with requests. If you call this method any managed\r\n     * visibility change callback will be removed and you must manage visibility\r\n     * changes on your own.\r\n     *\r\n     * On non-browser platforms the refresh process works *continuously* in the\r\n     * background, which may not be desirable. You should hook into your\r\n     * platform's foreground indication mechanism and call these methods\r\n     * appropriately to conserve resources.\r\n     *\r\n     * {@see #stopAutoRefresh}\r\n     */\r\n    startAutoRefresh() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._removeVisibilityChangedCallback();\r\n            yield this._startAutoRefresh();\r\n        });\r\n    }\r\n    /**\r\n     * Stops an active auto refresh process running in the background (if any).\r\n     *\r\n     * If you call this method any managed visibility change callback will be\r\n     * removed and you must manage visibility changes on your own.\r\n     *\r\n     * See {@link #startAutoRefresh} for more details.\r\n     */\r\n    stopAutoRefresh() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._removeVisibilityChangedCallback();\r\n            yield this._stopAutoRefresh();\r\n        });\r\n    }\r\n    /**\r\n     * Runs the auto refresh token tick.\r\n     */\r\n    _autoRefreshTokenTick() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const now = Date.now();\r\n            try {\r\n                const { data: { session }, } = yield this.getSession();\r\n                if (!session || !session.refresh_token || !session.expires_at) {\r\n                    return;\r\n                }\r\n                // session will expire in this many ticks (or has already expired if <= 0)\r\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\r\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\r\n                    yield this._callRefreshToken(session.refresh_token);\r\n                }\r\n            }\r\n            catch (e) {\r\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Registers callbacks on the browser / platform, which in-turn run\r\n     * algorithms when the browser window/tab are in foreground. On non-browser\r\n     * platforms it assumes always foreground.\r\n     */\r\n    _handleVisibilityChange() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\r\n                if (this.autoRefreshToken) {\r\n                    // in non-browser environments the refresh token ticker runs always\r\n                    this.startAutoRefresh();\r\n                }\r\n                return false;\r\n            }\r\n            try {\r\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\r\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\r\n                // now immediately call the visbility changed callback to setup with the\r\n                // current visbility state\r\n                yield this._onVisibilityChanged(true); // initial call\r\n            }\r\n            catch (error) {\r\n                console.error('_handleVisibilityChange', error);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Callback registered with `window.addEventListener('visibilitychange')`.\r\n     */\r\n    _onVisibilityChanged(isInitial) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (document.visibilityState === 'visible') {\r\n                if (!isInitial) {\r\n                    // initial visibility change setup is handled in another flow under #initialize()\r\n                    yield this.initializePromise;\r\n                    yield this._recoverAndRefresh();\r\n                }\r\n                if (this.autoRefreshToken) {\r\n                    // in browser environments the refresh token ticker runs only on focused tabs\r\n                    // which prevents race conditions\r\n                    this._startAutoRefresh();\r\n                }\r\n            }\r\n            else if (document.visibilityState === 'hidden') {\r\n                if (this.autoRefreshToken) {\r\n                    this._stopAutoRefresh();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Generates the relevant login URL for a third-party provider.\r\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\r\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\r\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\r\n     */\r\n    _getUrlForProvider(provider, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const urlParams = [`provider=${encodeURIComponent(provider)}`];\r\n            if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n                urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\r\n            }\r\n            if (options === null || options === void 0 ? void 0 : options.scopes) {\r\n                urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\r\n            }\r\n            if (this.flowType === 'pkce') {\r\n                const codeVerifier = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEVerifier)();\r\n                yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\r\n                const codeChallenge = yield (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.generatePKCEChallenge)(codeVerifier);\r\n                const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\r\n                const flowParams = new URLSearchParams({\r\n                    code_challenge: `${encodeURIComponent(codeChallenge)}`,\r\n                    code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\r\n                });\r\n                urlParams.push(flowParams.toString());\r\n            }\r\n            if (options === null || options === void 0 ? void 0 : options.queryParams) {\r\n                const query = new URLSearchParams(options.queryParams);\r\n                urlParams.push(query.toString());\r\n            }\r\n            return `${this.url}/authorize?${urlParams.join('&')}`;\r\n        });\r\n    }\r\n    _unenroll(params) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: sessionData, error: sessionError } = yield this.getSession();\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#enroll}\r\n     */\r\n    _enroll(params) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: sessionData, error: sessionError } = yield this.getSession();\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                const { data, error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors`, {\r\n                    body: {\r\n                        friendly_name: params.friendlyName,\r\n                        factor_type: params.factorType,\r\n                        issuer: params.issuer,\r\n                    },\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n                if (error) {\r\n                    return { data: null, error };\r\n                }\r\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\r\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\r\n                }\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#verify}\r\n     */\r\n    _verify(params) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: sessionData, error: sessionError } = yield this.getSession();\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                const { data, error } = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\r\n                    body: { code: params.code, challenge_id: params.challengeId },\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n                if (error) {\r\n                    return { data: null, error };\r\n                }\r\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\r\n                yield this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\r\n                return { data, error };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challenge}\r\n     */\r\n    _challenge(params) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const { data: sessionData, error: sessionError } = yield this.getSession();\r\n                if (sessionError) {\r\n                    return { data: null, error: sessionError };\r\n                }\r\n                return yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\r\n                    headers: this.headers,\r\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#challengeAndVerify}\r\n     */\r\n    _challengeAndVerify(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data: challengeData, error: challengeError } = yield this._challenge({\r\n                factorId: params.factorId,\r\n            });\r\n            if (challengeError) {\r\n                return { data: null, error: challengeError };\r\n            }\r\n            return yield this._verify({\r\n                factorId: params.factorId,\r\n                challengeId: challengeData.id,\r\n                code: params.code,\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#listFactors}\r\n     */\r\n    _listFactors() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data: { user }, error: userError, } = yield this.getUser();\r\n            if (userError) {\r\n                return { data: null, error: userError };\r\n            }\r\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\r\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\r\n            return {\r\n                data: {\r\n                    all: factors,\r\n                    totp,\r\n                },\r\n                error: null,\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\r\n     */\r\n    _getAuthenticatorAssuranceLevel() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data: { session }, error: sessionError, } = yield this.getSession();\r\n            if (sessionError) {\r\n                return { data: null, error: sessionError };\r\n            }\r\n            if (!session) {\r\n                return {\r\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\r\n                    error: null,\r\n                };\r\n            }\r\n            const payload = this._decodeJWT(session.access_token);\r\n            let currentLevel = null;\r\n            if (payload.aal) {\r\n                currentLevel = payload.aal;\r\n            }\r\n            let nextLevel = currentLevel;\r\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\r\n            if (verifiedFactors.length > 0) {\r\n                nextLevel = 'aal2';\r\n            }\r\n            const currentAuthenticationMethods = payload.amr || [];\r\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=GoTrueClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GoTrueAdminApi\": function() { return /* reexport safe */ _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"GoTrueClient\": function() { return /* reexport safe */ _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoTrueClient */ \"./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/types */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"GoTrueAdminApi\",\"GoTrueClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_types__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_errors__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"GoTrueAdminApi\",\"GoTrueClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_errors__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDSjtBQUNGO0FBQ1o7QUFDQztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz9lYjEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHb1RydWVBZG1pbkFwaSBmcm9tICcuL0dvVHJ1ZUFkbWluQXBpJztcclxuaW1wb3J0IEdvVHJ1ZUNsaWVudCBmcm9tICcuL0dvVHJ1ZUNsaWVudCc7XHJcbmV4cG9ydCB7IEdvVHJ1ZUFkbWluQXBpLCBHb1RydWVDbGllbnQgfTtcclxuZXhwb3J0ICogZnJvbSAnLi9saWIvdHlwZXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2xpYi9lcnJvcnMnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AUDIENCE\": function() { return /* binding */ AUDIENCE; },\n/* harmony export */   \"DEFAULT_HEADERS\": function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   \"EXPIRY_MARGIN\": function() { return /* binding */ EXPIRY_MARGIN; },\n/* harmony export */   \"GOTRUE_URL\": function() { return /* binding */ GOTRUE_URL; },\n/* harmony export */   \"NETWORK_FAILURE\": function() { return /* binding */ NETWORK_FAILURE; },\n/* harmony export */   \"STORAGE_KEY\": function() { return /* binding */ STORAGE_KEY; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/version.js\");\n\r\nconst GOTRUE_URL = 'http://localhost:9999';\r\nconst STORAGE_KEY = 'supabase.auth.token';\r\nconst AUDIENCE = '';\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst EXPIRY_MARGIN = 10; // in seconds\r\nconst NETWORK_FAILURE = {\r\n    MAX_RETRIES: 10,\r\n    RETRY_INTERVAL: 2, // in deciseconds\r\n};\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhCQUE4Qiw2Q0FBTyxDQUFDO0FBQ2hFLDBCQUEwQjtBQUMxQjtBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZ290cnVlLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanM/ZWY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxuZXhwb3J0IGNvbnN0IEdPVFJVRV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo5OTk5JztcclxuZXhwb3J0IGNvbnN0IFNUT1JBR0VfS0VZID0gJ3N1cGFiYXNlLmF1dGgudG9rZW4nO1xyXG5leHBvcnQgY29uc3QgQVVESUVOQ0UgPSAnJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgZ290cnVlLWpzLyR7dmVyc2lvbn1gIH07XHJcbmV4cG9ydCBjb25zdCBFWFBJUllfTUFSR0lOID0gMTA7IC8vIGluIHNlY29uZHNcclxuZXhwb3J0IGNvbnN0IE5FVFdPUktfRkFJTFVSRSA9IHtcclxuICAgIE1BWF9SRVRSSUVTOiAxMCxcclxuICAgIFJFVFJZX0lOVEVSVkFMOiAyLCAvLyBpbiBkZWNpc2Vjb25kc1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthApiError\": function() { return /* binding */ AuthApiError; },\n/* harmony export */   \"AuthError\": function() { return /* binding */ AuthError; },\n/* harmony export */   \"AuthImplicitGrantRedirectError\": function() { return /* binding */ AuthImplicitGrantRedirectError; },\n/* harmony export */   \"AuthInvalidCredentialsError\": function() { return /* binding */ AuthInvalidCredentialsError; },\n/* harmony export */   \"AuthInvalidTokenResponseError\": function() { return /* binding */ AuthInvalidTokenResponseError; },\n/* harmony export */   \"AuthPKCEGrantCodeExchangeError\": function() { return /* binding */ AuthPKCEGrantCodeExchangeError; },\n/* harmony export */   \"AuthRetryableFetchError\": function() { return /* binding */ AuthRetryableFetchError; },\n/* harmony export */   \"AuthSessionMissingError\": function() { return /* binding */ AuthSessionMissingError; },\n/* harmony export */   \"AuthUnknownError\": function() { return /* binding */ AuthUnknownError; },\n/* harmony export */   \"CustomAuthError\": function() { return /* binding */ CustomAuthError; },\n/* harmony export */   \"isAuthApiError\": function() { return /* binding */ isAuthApiError; },\n/* harmony export */   \"isAuthError\": function() { return /* binding */ isAuthError; }\n/* harmony export */ });\nclass AuthError extends Error {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.__isAuthError = true;\r\n        this.name = 'AuthError';\r\n        this.status = status;\r\n    }\r\n}\r\nfunction isAuthError(error) {\r\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\r\n}\r\nclass AuthApiError extends AuthError {\r\n    constructor(message, status) {\r\n        super(message, status);\r\n        this.name = 'AuthApiError';\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n        };\r\n    }\r\n}\r\nfunction isAuthApiError(error) {\r\n    return isAuthError(error) && error.name === 'AuthApiError';\r\n}\r\nclass AuthUnknownError extends AuthError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'AuthUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\nclass CustomAuthError extends AuthError {\r\n    constructor(message, name, status) {\r\n        super(message);\r\n        this.name = name;\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n        };\r\n    }\r\n}\r\nclass AuthSessionMissingError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\r\n    }\r\n}\r\nclass AuthInvalidTokenResponseError extends CustomAuthError {\r\n    constructor() {\r\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500);\r\n    }\r\n}\r\nclass AuthInvalidCredentialsError extends CustomAuthError {\r\n    constructor(message) {\r\n        super(message, 'AuthInvalidCredentialsError', 400);\r\n    }\r\n}\r\nclass AuthImplicitGrantRedirectError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthImplicitGrantRedirectError', 500);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nclass AuthPKCEGrantCodeExchangeError extends CustomAuthError {\r\n    constructor(message, details = null) {\r\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500);\r\n        this.details = null;\r\n        this.details = details;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n            details: this.details,\r\n        };\r\n    }\r\n}\r\nclass AuthRetryableFetchError extends CustomAuthError {\r\n    constructor(message, status) {\r\n        super(message, 'AuthRetryableFetchError', status);\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZ290cnVlLWpzL2Rpc3QvbW9kdWxlL2xpYi9lcnJvcnMuanM/MjkxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5fX2lzQXV0aEVycm9yID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSAnQXV0aEVycm9yJztcclxuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmIGVycm9yICE9PSBudWxsICYmICdfX2lzQXV0aEVycm9yJyBpbiBlcnJvcjtcclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEFwaUVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cykge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHN0YXR1cyk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhBcGlFcnJvcic7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoQXBpRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhBcGlFcnJvcic7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEF1dGhVbmtub3duRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdBdXRoVW5rbm93bkVycm9yJztcclxuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBDdXN0b21BdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgbmFtZSwgc3RhdHVzKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcclxuICAgIH1cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcclxuICAgICAgICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoU2Vzc2lvbk1pc3NpbmdFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcignQXV0aCBzZXNzaW9uIG1pc3NpbmchJywgJ0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yJywgNDAwKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgQXV0aEludmFsaWRUb2tlblJlc3BvbnNlRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoJ0F1dGggc2Vzc2lvbiBvciB1c2VyIG1pc3NpbmcnLCAnQXV0aEludmFsaWRUb2tlblJlc3BvbnNlRXJyb3InLCA1MDApO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoSW52YWxpZENyZWRlbnRpYWxzRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoSW52YWxpZENyZWRlbnRpYWxzRXJyb3InLCA0MDApO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoSW1wbGljaXRHcmFudFJlZGlyZWN0RXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgZGV0YWlscyA9IG51bGwpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aEltcGxpY2l0R3JhbnRSZWRpcmVjdEVycm9yJywgNTAwKTtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgICAgIGRldGFpbHM6IHRoaXMuZGV0YWlscyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoUEtDRUdyYW50Q29kZUV4Y2hhbmdlRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgZGV0YWlscyA9IG51bGwpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aFBLQ0VHcmFudENvZGVFeGNoYW5nZUVycm9yJywgNTAwKTtcclxuICAgICAgICB0aGlzLmRldGFpbHMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XHJcbiAgICB9XHJcbiAgICB0b0pTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXHJcbiAgICAgICAgICAgIGRldGFpbHM6IHRoaXMuZGV0YWlscyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBBdXRoUmV0cnlhYmxlRmV0Y2hFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aFJldHJ5YWJsZUZldGNoRXJyb3InLCBzdGF0dXMpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_generateLinkResponse\": function() { return /* binding */ _generateLinkResponse; },\n/* harmony export */   \"_noResolveJsonResponse\": function() { return /* binding */ _noResolveJsonResponse; },\n/* harmony export */   \"_request\": function() { return /* binding */ _request; },\n/* harmony export */   \"_sessionResponse\": function() { return /* binding */ _sessionResponse; },\n/* harmony export */   \"_ssoResponse\": function() { return /* binding */ _ssoResponse; },\n/* harmony export */   \"_userResponse\": function() { return /* binding */ _userResponse; }\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const NETWORK_ERROR_CODES = [502, 503, 504];\r\n    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.looksLikeFetchResponse)(error)) {\r\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthRetryableFetchError(_getErrorMessage(error), 0));\r\n    }\r\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\r\n        // status in 500...599 range - server had an error, request might be retryed.\r\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthRetryableFetchError(_getErrorMessage(error), error.status));\r\n    }\r\n    else {\r\n        // got a response from server that is not in the 500...599 range - should not retry\r\n        error\r\n            .json()\r\n            .then((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthApiError(_getErrorMessage(err), error.status || 500));\r\n        })\r\n            .catch((e) => {\r\n            // not a valid json response\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthUnknownError(_getErrorMessage(e), e));\r\n        });\r\n    }\r\n});\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    params.body = JSON.stringify(body);\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nfunction _request(fetcher, method, url, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\r\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\r\n            headers['Authorization'] = `Bearer ${options.jwt}`;\r\n        }\r\n        const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\r\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\r\n            qs['redirect_to'] = options.redirectTo;\r\n        }\r\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\r\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\r\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\r\n    });\r\n}\r\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => {\r\n            fetcher(url, _getRequestParams(method, options, parameters, body))\r\n                .then((result) => {\r\n                if (!result.ok)\r\n                    throw result;\r\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\r\n                    return result;\r\n                return result.json();\r\n            })\r\n                .then((data) => resolve(data))\r\n                .catch((error) => handleError(error, reject));\r\n        });\r\n    });\r\n}\r\nfunction _sessionResponse(data) {\r\n    var _a;\r\n    let session = null;\r\n    if (hasSession(data)) {\r\n        session = Object.assign({}, data);\r\n        session.expires_at = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.expiresAt)(data.expires_in);\r\n    }\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { session, user }, error: null };\r\n}\r\nfunction _userResponse(data) {\r\n    var _a;\r\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\r\n    return { data: { user }, error: null };\r\n}\r\nfunction _ssoResponse(data) {\r\n    return { data, error: null };\r\n}\r\nfunction _generateLinkResponse(data) {\r\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\r\n    const properties = {\r\n        action_link,\r\n        email_otp,\r\n        hashed_token,\r\n        redirect_to,\r\n        verification_type,\r\n    };\r\n    const user = Object.assign({}, rest);\r\n    return {\r\n        data: {\r\n            properties,\r\n            user,\r\n        },\r\n        error: null,\r\n    };\r\n}\r\nfunction _noResolveJsonResponse(data) {\r\n    return data;\r\n}\r\n/**\r\n * hasSession checks if the response object contains a valid session\r\n * @param data A response object\r\n * @returns true if a session is in the response\r\n */\r\nfunction hasSession(data) {\r\n    return data.access_token && data.refresh_token && data.expires_in;\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Deferred\": function() { return /* binding */ Deferred; },\n/* harmony export */   \"decodeBase64URL\": function() { return /* binding */ decodeBase64URL; },\n/* harmony export */   \"decodeJWTPayload\": function() { return /* binding */ decodeJWTPayload; },\n/* harmony export */   \"expiresAt\": function() { return /* binding */ expiresAt; },\n/* harmony export */   \"generatePKCEChallenge\": function() { return /* binding */ generatePKCEChallenge; },\n/* harmony export */   \"generatePKCEVerifier\": function() { return /* binding */ generatePKCEVerifier; },\n/* harmony export */   \"getItemAsync\": function() { return /* binding */ getItemAsync; },\n/* harmony export */   \"getParameterByName\": function() { return /* binding */ getParameterByName; },\n/* harmony export */   \"isBrowser\": function() { return /* binding */ isBrowser; },\n/* harmony export */   \"looksLikeFetchResponse\": function() { return /* binding */ looksLikeFetchResponse; },\n/* harmony export */   \"removeItemAsync\": function() { return /* binding */ removeItemAsync; },\n/* harmony export */   \"resolveFetch\": function() { return /* binding */ resolveFetch; },\n/* harmony export */   \"retryable\": function() { return /* binding */ retryable; },\n/* harmony export */   \"setItemAsync\": function() { return /* binding */ setItemAsync; },\n/* harmony export */   \"sleep\": function() { return /* binding */ sleep; },\n/* harmony export */   \"supportsLocalStorage\": function() { return /* binding */ supportsLocalStorage; },\n/* harmony export */   \"uuid\": function() { return /* binding */ uuid; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nfunction expiresAt(expiresIn) {\r\n    const timeNow = Math.round(Date.now() / 1000);\r\n    return timeNow + expiresIn;\r\n}\r\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nconst isBrowser = () => typeof document !== 'undefined';\r\nconst localStorageWriteTests = {\r\n    tested: false,\r\n    writable: false,\r\n};\r\n/**\r\n * Checks whether localStorage is supported on this browser.\r\n */\r\nconst supportsLocalStorage = () => {\r\n    if (!isBrowser()) {\r\n        return false;\r\n    }\r\n    try {\r\n        if (typeof globalThis.localStorage !== 'object') {\r\n            return false;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // DOM exception when accessing `localStorage`\r\n        return false;\r\n    }\r\n    if (localStorageWriteTests.tested) {\r\n        return localStorageWriteTests.writable;\r\n    }\r\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\r\n    try {\r\n        globalThis.localStorage.setItem(randomKey, randomKey);\r\n        globalThis.localStorage.removeItem(randomKey);\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = true;\r\n    }\r\n    catch (e) {\r\n        // localStorage can't be written to\r\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\r\n        localStorageWriteTests.tested = true;\r\n        localStorageWriteTests.writable = false;\r\n    }\r\n    return localStorageWriteTests.writable;\r\n};\r\nfunction getParameterByName(name, url) {\r\n    var _a;\r\n    if (!url)\r\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\r\n    // eslint-disable-next-line no-useless-escape\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\r\n    if (!results)\r\n        return null;\r\n    if (!results[2])\r\n        return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\", 23))).fetch(...args); });\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst looksLikeFetchResponse = (maybeResponse) => {\r\n    return (typeof maybeResponse === 'object' &&\r\n        maybeResponse !== null &&\r\n        'status' in maybeResponse &&\r\n        'ok' in maybeResponse &&\r\n        'json' in maybeResponse &&\r\n        typeof maybeResponse.json === 'function');\r\n};\r\n// Storage helpers\r\nconst setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\r\n    yield storage.setItem(key, JSON.stringify(data));\r\n});\r\nconst getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const value = yield storage.getItem(key);\r\n    if (!value) {\r\n        return null;\r\n    }\r\n    try {\r\n        return JSON.parse(value);\r\n    }\r\n    catch (_a) {\r\n        return value;\r\n    }\r\n});\r\nconst removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\r\n    yield storage.removeItem(key);\r\n});\r\nfunction decodeBase64URL(value) {\r\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let base64 = '';\r\n    let chr1, chr2, chr3;\r\n    let enc1, enc2, enc3, enc4;\r\n    let i = 0;\r\n    value = value.replace('-', '+').replace('_', '/');\r\n    while (i < value.length) {\r\n        enc1 = key.indexOf(value.charAt(i++));\r\n        enc2 = key.indexOf(value.charAt(i++));\r\n        enc3 = key.indexOf(value.charAt(i++));\r\n        enc4 = key.indexOf(value.charAt(i++));\r\n        chr1 = (enc1 << 2) | (enc2 >> 4);\r\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n        chr3 = ((enc3 & 3) << 6) | enc4;\r\n        base64 = base64 + String.fromCharCode(chr1);\r\n        if (enc3 != 64 && chr2 != 0) {\r\n            base64 = base64 + String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 != 64 && chr3 != 0) {\r\n            base64 = base64 + String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    return base64;\r\n}\r\n/**\r\n * A deferred represents some asynchronous work that is not yet finished, which\r\n * may or may not culminate in a value.\r\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n            ;\r\n            this.resolve = res;\r\n            this.reject = rej;\r\n        });\r\n    }\r\n}\r\nDeferred.promiseConstructor = Promise;\r\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\r\nfunction decodeJWTPayload(token) {\r\n    // Regex checks for base64url format\r\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\r\n    const parts = token.split('.');\r\n    if (parts.length !== 3) {\r\n        throw new Error('JWT is not valid: not a JWT structure');\r\n    }\r\n    if (!base64UrlRegex.test(parts[1])) {\r\n        throw new Error('JWT is not valid: payload is not in base64url format');\r\n    }\r\n    const base64Url = parts[1];\r\n    return JSON.parse(decodeBase64URL(base64Url));\r\n}\r\n/**\r\n * Creates a promise that resolves to null after some time.\r\n */\r\nfunction sleep(time) {\r\n    return new Promise((accept) => {\r\n        setTimeout(() => accept(null), time);\r\n    });\r\n}\r\n/**\r\n * Converts the provided async function into a retryable function. Each result\r\n * or thrown error is sent to the isRetryable function which should return true\r\n * if the function should run again.\r\n */\r\nfunction retryable(fn, isRetryable) {\r\n    const promise = new Promise((accept, reject) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;\r\n        (() => __awaiter(this, void 0, void 0, function* () {\r\n            for (let attempt = 0; attempt < Infinity; attempt++) {\r\n                try {\r\n                    const result = yield fn(attempt);\r\n                    if (!isRetryable(attempt, null, result)) {\r\n                        accept(result);\r\n                        return;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!isRetryable(attempt, e)) {\r\n                        reject(e);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }))();\r\n    });\r\n    return promise;\r\n}\r\nfunction dec2hex(dec) {\r\n    return ('0' + dec.toString(16)).substr(-2);\r\n}\r\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\r\nfunction generatePKCEVerifier() {\r\n    const verifierLength = 56;\r\n    const array = new Uint32Array(verifierLength);\r\n    if (typeof crypto === 'undefined') {\r\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n        const charSetLen = charSet.length;\r\n        let verifier = '';\r\n        for (let i = 0; i < verifierLength; i++) {\r\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\r\n        }\r\n        return verifier;\r\n    }\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, dec2hex).join('');\r\n}\r\nfunction sha256(randomString) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const encoder = new TextEncoder();\r\n        const encodedData = encoder.encode(randomString);\r\n        const hash = yield crypto.subtle.digest('SHA-256', encodedData);\r\n        const bytes = new Uint8Array(hash);\r\n        return Array.from(bytes)\r\n            .map((c) => String.fromCharCode(c))\r\n            .join('');\r\n    });\r\n}\r\nfunction base64urlencode(str) {\r\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n}\r\nfunction generatePKCEChallenge(verifier) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (typeof crypto === 'undefined') {\r\n            console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\r\n            return verifier;\r\n        }\r\n        const hashed = yield sha256(verifier);\r\n        return base64urlencode(hashed);\r\n    });\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js\");\n\r\nconst localStorageAdapter = {\r\n    getItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return null;\r\n        }\r\n        return globalThis.localStorage.getItem(key);\r\n    },\r\n    setItem: (key, value) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.setItem(key, value);\r\n    },\r\n    removeItem: (key) => {\r\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\r\n            return;\r\n        }\r\n        globalThis.localStorage.removeItem(key);\r\n    },\r\n};\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (localStorageAdapter);\r\n//# sourceMappingURL=local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvbG9jYWwtc3RvcmFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUFpRDtBQUNqRDtBQUNBO0FBQ0EsYUFBYSw4REFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSw4REFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsYUFBYSw4REFBb0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0RBQWUsbUJBQW1CLEVBQUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9nb3RydWUtanMvZGlzdC9tb2R1bGUvbGliL2xvY2FsLXN0b3JhZ2UuanM/MWJhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBwb3J0c0xvY2FsU3RvcmFnZSB9IGZyb20gJy4vaGVscGVycyc7XHJcbmNvbnN0IGxvY2FsU3RvcmFnZUFkYXB0ZXIgPSB7XHJcbiAgICBnZXRJdGVtOiAoa2V5KSA9PiB7XHJcbiAgICAgICAgaWYgKCFzdXBwb3J0c0xvY2FsU3RvcmFnZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gICAgfSxcclxuICAgIHNldEl0ZW06IChrZXksIHZhbHVlKSA9PiB7XHJcbiAgICAgICAgaWYgKCFzdXBwb3J0c0xvY2FsU3RvcmFnZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2xvYmFsVGhpcy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICAgIH0sXHJcbiAgICByZW1vdmVJdGVtOiAoa2V5KSA9PiB7XHJcbiAgICAgICAgaWYgKCFzdXBwb3J0c0xvY2FsU3RvcmFnZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2xvYmFsVGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfSxcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgbG9jYWxTdG9yYWdlQWRhcHRlcjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"polyfillGlobalThis\": function() { return /* binding */ polyfillGlobalThis; }\n/* harmony export */ });\n/**\r\n * https://mathiasbynens.be/notes/globalthis\r\n */\r\nfunction polyfillGlobalThis() {\r\n    if (typeof globalThis === 'object')\r\n        return;\r\n    try {\r\n        Object.defineProperty(Object.prototype, '__magic__', {\r\n            get: function () {\r\n                return this;\r\n            },\r\n            configurable: true,\r\n        });\r\n        // @ts-expect-error 'Allow access to magic'\r\n        __magic__.globalThis = __magic__;\r\n        // @ts-expect-error 'Allow access to magic'\r\n        delete Object.prototype.__magic__;\r\n    }\r\n    catch (e) {\r\n        if (typeof self !== 'undefined') {\r\n            // @ts-expect-error 'Allow access to globals'\r\n            self.globalThis = self;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=polyfills.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzP2Y3MDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9nbG9iYWx0aGlzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcG9seWZpbGxHbG9iYWxUaGlzKCkge1xyXG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JylcclxuICAgICAgICByZXR1cm47XHJcbiAgICB0cnkge1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPYmplY3QucHJvdG90eXBlLCAnX19tYWdpY19fJywge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAnQWxsb3cgYWNjZXNzIHRvIG1hZ2ljJ1xyXG4gICAgICAgIF9fbWFnaWNfXy5nbG9iYWxUaGlzID0gX19tYWdpY19fO1xyXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBtYWdpYydcclxuICAgICAgICBkZWxldGUgT2JqZWN0LnByb3RvdHlwZS5fX21hZ2ljX187XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAnQWxsb3cgYWNjZXNzIHRvIGdsb2JhbHMnXHJcbiAgICAgICAgICAgIHNlbGYuZ2xvYmFsVGhpcyA9IHNlbGY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvbHlmaWxscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/types.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9nb3RydWUtanMvZGlzdC9tb2R1bGUvbGliL3R5cGVzLmpzPzY2MTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/gotrue-js/dist/module/lib/version.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/gotrue-js/dist/module/lib/version.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\n// Generated by genversion.\r\nconst version = '2.30.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2dvdHJ1ZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZ290cnVlLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzPzQ3MjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IGdlbnZlcnNpb24uXHJcbmV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuMzAuMCc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/gotrue-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PostgrestBuilder; }\n/* harmony export */ });\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\n\r\nclass PostgrestBuilder {\r\n    constructor(builder) {\r\n        this.shouldThrowOnError = false;\r\n        this.method = builder.method;\r\n        this.url = builder.url;\r\n        this.headers = builder.headers;\r\n        this.schema = builder.schema;\r\n        this.body = builder.body;\r\n        this.shouldThrowOnError = builder.shouldThrowOnError;\r\n        this.signal = builder.signal;\r\n        this.isMaybeSingle = builder.isMaybeSingle;\r\n        if (builder.fetch) {\r\n            this.fetch = builder.fetch;\r\n        }\r\n        else if (typeof fetch === 'undefined') {\r\n            this.fetch = (cross_fetch__WEBPACK_IMPORTED_MODULE_0___default());\r\n        }\r\n        else {\r\n            this.fetch = fetch;\r\n        }\r\n    }\r\n    /**\r\n     * If there's an error with the query, throwOnError will reject the promise by\r\n     * throwing the error instead of returning it as part of a successful response.\r\n     *\r\n     * {@link https://github.com/supabase/supabase-js/issues/92}\r\n     */\r\n    throwOnError() {\r\n        this.shouldThrowOnError = true;\r\n        return this;\r\n    }\r\n    then(onfulfilled, onrejected) {\r\n        // https://postgrest.org/en/stable/api.html#switching-schemas\r\n        if (this.schema === undefined) {\r\n            // skip\r\n        }\r\n        else if (['GET', 'HEAD'].includes(this.method)) {\r\n            this.headers['Accept-Profile'] = this.schema;\r\n        }\r\n        else {\r\n            this.headers['Content-Profile'] = this.schema;\r\n        }\r\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\r\n            this.headers['Content-Type'] = 'application/json';\r\n        }\r\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\r\n        // https://github.com/supabase/postgrest-js/pull/247\r\n        const _fetch = this.fetch;\r\n        let res = _fetch(this.url.toString(), {\r\n            method: this.method,\r\n            headers: this.headers,\r\n            body: JSON.stringify(this.body),\r\n            signal: this.signal,\r\n        }).then(async (res) => {\r\n            var _a, _b, _c;\r\n            let error = null;\r\n            let data = null;\r\n            let count = null;\r\n            let status = res.status;\r\n            let statusText = res.statusText;\r\n            if (res.ok) {\r\n                if (this.method !== 'HEAD') {\r\n                    const body = await res.text();\r\n                    if (body === '') {\r\n                        // Prefer: return=minimal\r\n                    }\r\n                    else if (this.headers['Accept'] === 'text/csv') {\r\n                        data = body;\r\n                    }\r\n                    else if (this.headers['Accept'] &&\r\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\r\n                        data = body;\r\n                    }\r\n                    else {\r\n                        data = JSON.parse(body);\r\n                    }\r\n                }\r\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\r\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\r\n                if (countHeader && contentRange && contentRange.length > 1) {\r\n                    count = parseInt(contentRange[1]);\r\n                }\r\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\r\n                    if (data.length > 1) {\r\n                        error = {\r\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\r\n                            code: 'PGRST116',\r\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\r\n                            hint: null,\r\n                            message: 'JSON object requested, multiple (or no) rows returned',\r\n                        };\r\n                        data = null;\r\n                        count = null;\r\n                        status = 406;\r\n                        statusText = 'Not Acceptable';\r\n                    }\r\n                    else if (data.length === 1) {\r\n                        data = data[0];\r\n                    }\r\n                    else {\r\n                        data = null;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                const body = await res.text();\r\n                try {\r\n                    error = JSON.parse(body);\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (Array.isArray(error) && res.status === 404) {\r\n                        data = [];\r\n                        error = null;\r\n                        status = 200;\r\n                        statusText = 'OK';\r\n                    }\r\n                }\r\n                catch (_d) {\r\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\r\n                    if (res.status === 404 && body === '') {\r\n                        status = 204;\r\n                        statusText = 'No Content';\r\n                    }\r\n                    else {\r\n                        error = {\r\n                            message: body,\r\n                        };\r\n                    }\r\n                }\r\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\r\n                    error = null;\r\n                    status = 200;\r\n                    statusText = 'OK';\r\n                }\r\n                if (error && this.shouldThrowOnError) {\r\n                    throw error;\r\n                }\r\n            }\r\n            const postgrestResponse = {\r\n                error,\r\n                data,\r\n                count,\r\n                status,\r\n                statusText,\r\n            };\r\n            return postgrestResponse;\r\n        });\r\n        if (!this.shouldThrowOnError) {\r\n            res = res.catch((fetchError) => {\r\n                var _a, _b, _c;\r\n                return ({\r\n                    error: {\r\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\r\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\r\n                        hint: '',\r\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\r\n                    },\r\n                    data: null,\r\n                    count: null,\r\n                    status: 0,\r\n                    statusText: '',\r\n                });\r\n            });\r\n        }\r\n        return res.then(onfulfilled, onrejected);\r\n    }\r\n}\r\n//# sourceMappingURL=PostgrestBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9Qb3N0Z3Jlc3RCdWlsZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUN0QjtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsb0RBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGFBQWE7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNkhBQTZILElBQUksMkVBQTJFO0FBQ2hQLG9DQUFvQyxvSEFBb0g7QUFDeEo7QUFDQSxpQ0FBaUMsbUhBQW1IO0FBQ3BKLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9Qb3N0Z3Jlc3RCdWlsZGVyLmpzP2Y3NGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyb3NzRmV0Y2ggZnJvbSAnY3Jvc3MtZmV0Y2gnO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3N0Z3Jlc3RCdWlsZGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGJ1aWxkZXIpIHtcclxuICAgICAgICB0aGlzLnNob3VsZFRocm93T25FcnJvciA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubWV0aG9kID0gYnVpbGRlci5tZXRob2Q7XHJcbiAgICAgICAgdGhpcy51cmwgPSBidWlsZGVyLnVybDtcclxuICAgICAgICB0aGlzLmhlYWRlcnMgPSBidWlsZGVyLmhlYWRlcnM7XHJcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBidWlsZGVyLnNjaGVtYTtcclxuICAgICAgICB0aGlzLmJvZHkgPSBidWlsZGVyLmJvZHk7XHJcbiAgICAgICAgdGhpcy5zaG91bGRUaHJvd09uRXJyb3IgPSBidWlsZGVyLnNob3VsZFRocm93T25FcnJvcjtcclxuICAgICAgICB0aGlzLnNpZ25hbCA9IGJ1aWxkZXIuc2lnbmFsO1xyXG4gICAgICAgIHRoaXMuaXNNYXliZVNpbmdsZSA9IGJ1aWxkZXIuaXNNYXliZVNpbmdsZTtcclxuICAgICAgICBpZiAoYnVpbGRlci5mZXRjaCkge1xyXG4gICAgICAgICAgICB0aGlzLmZldGNoID0gYnVpbGRlci5mZXRjaDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGZldGNoID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICB0aGlzLmZldGNoID0gY3Jvc3NGZXRjaDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmV0Y2ggPSBmZXRjaDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIElmIHRoZXJlJ3MgYW4gZXJyb3Igd2l0aCB0aGUgcXVlcnksIHRocm93T25FcnJvciB3aWxsIHJlamVjdCB0aGUgcHJvbWlzZSBieVxyXG4gICAgICogdGhyb3dpbmcgdGhlIGVycm9yIGluc3RlYWQgb2YgcmV0dXJuaW5nIGl0IGFzIHBhcnQgb2YgYSBzdWNjZXNzZnVsIHJlc3BvbnNlLlxyXG4gICAgICpcclxuICAgICAqIHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vc3VwYWJhc2Uvc3VwYWJhc2UtanMvaXNzdWVzLzkyfVxyXG4gICAgICovXHJcbiAgICB0aHJvd09uRXJyb3IoKSB7XHJcbiAgICAgICAgdGhpcy5zaG91bGRUaHJvd09uRXJyb3IgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgdGhlbihvbmZ1bGZpbGxlZCwgb25yZWplY3RlZCkge1xyXG4gICAgICAgIC8vIGh0dHBzOi8vcG9zdGdyZXN0Lm9yZy9lbi9zdGFibGUvYXBpLmh0bWwjc3dpdGNoaW5nLXNjaGVtYXNcclxuICAgICAgICBpZiAodGhpcy5zY2hlbWEgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAvLyBza2lwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFsnR0VUJywgJ0hFQUQnXS5pbmNsdWRlcyh0aGlzLm1ldGhvZCkpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWFkZXJzWydBY2NlcHQtUHJvZmlsZSddID0gdGhpcy5zY2hlbWE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmhlYWRlcnNbJ0NvbnRlbnQtUHJvZmlsZSddID0gdGhpcy5zY2hlbWE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm1ldGhvZCAhPT0gJ0dFVCcgJiYgdGhpcy5tZXRob2QgIT09ICdIRUFEJykge1xyXG4gICAgICAgICAgICB0aGlzLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBOT1RFOiBJbnZva2Ugdy9vIGB0aGlzYCB0byBhdm9pZCBpbGxlZ2FsIGludm9jYXRpb24gZXJyb3IuXHJcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3N1cGFiYXNlL3Bvc3RncmVzdC1qcy9wdWxsLzI0N1xyXG4gICAgICAgIGNvbnN0IF9mZXRjaCA9IHRoaXMuZmV0Y2g7XHJcbiAgICAgICAgbGV0IHJlcyA9IF9mZXRjaCh0aGlzLnVybC50b1N0cmluZygpLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogdGhpcy5tZXRob2QsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodGhpcy5ib2R5KSxcclxuICAgICAgICAgICAgc2lnbmFsOiB0aGlzLnNpZ25hbCxcclxuICAgICAgICB9KS50aGVuKGFzeW5jIChyZXMpID0+IHtcclxuICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2M7XHJcbiAgICAgICAgICAgIGxldCBlcnJvciA9IG51bGw7XHJcbiAgICAgICAgICAgIGxldCBkYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgbGV0IGNvdW50ID0gbnVsbDtcclxuICAgICAgICAgICAgbGV0IHN0YXR1cyA9IHJlcy5zdGF0dXM7XHJcbiAgICAgICAgICAgIGxldCBzdGF0dXNUZXh0ID0gcmVzLnN0YXR1c1RleHQ7XHJcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1ldGhvZCAhPT0gJ0hFQUQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcy50ZXh0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJvZHkgPT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByZWZlcjogcmV0dXJuPW1pbmltYWxcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5oZWFkZXJzWydBY2NlcHQnXSA9PT0gJ3RleHQvY3N2Jykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gYm9keTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5oZWFkZXJzWydBY2NlcHQnXSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnNbJ0FjY2VwdCddLmluY2x1ZGVzKCdhcHBsaWNhdGlvbi92bmQucGdyc3QucGxhbit0ZXh0JykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGJvZHk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShib2R5KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb3VudEhlYWRlciA9IChfYSA9IHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5tYXRjaCgvY291bnQ9KGV4YWN0fHBsYW5uZWR8ZXN0aW1hdGVkKS8pO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudFJhbmdlID0gKF9iID0gcmVzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXJhbmdlJykpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5zcGxpdCgnLycpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvdW50SGVhZGVyICYmIGNvbnRlbnRSYW5nZSAmJiBjb250ZW50UmFuZ2UubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvdW50ID0gcGFyc2VJbnQoY29udGVudFJhbmdlWzFdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIFRlbXBvcmFyeSBwYXJ0aWFsIGZpeCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL3N1cGFiYXNlL3Bvc3RncmVzdC1qcy9pc3N1ZXMvMzYxXHJcbiAgICAgICAgICAgICAgICAvLyBJc3N1ZSBwZXJzaXN0cyBlLmcuIGZvciBgLmluc2VydChbLi4uXSkuc2VsZWN0KCkubWF5YmVTaW5nbGUoKWBcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTWF5YmVTaW5nbGUgJiYgdGhpcy5tZXRob2QgPT09ICdHRVQnICYmIEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL1Bvc3RnUkVTVC9wb3N0Z3Jlc3QvYmxvYi9hODY3ZDc5YzQyNDE5YWYxNmMxOGMzZmIwMTllYmE4ZGY5OTI2MjZmL3NyYy9Qb3N0Z1JFU1QvRXJyb3IuaHMjTDU1M1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogJ1BHUlNUMTE2JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM6IGBSZXN1bHRzIGNvbnRhaW4gJHtkYXRhLmxlbmd0aH0gcm93cywgYXBwbGljYXRpb24vdm5kLnBncnN0Lm9iamVjdCtqc29uIHJlcXVpcmVzIDEgcm93YCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpbnQ6IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnSlNPTiBvYmplY3QgcmVxdWVzdGVkLCBtdWx0aXBsZSAob3Igbm8pIHJvd3MgcmV0dXJuZWQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY291bnQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXMgPSA0MDY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQgPSAnTm90IEFjY2VwdGFibGUnO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gZGF0YVswXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXMudGV4dCgpO1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9IEpTT04ucGFyc2UoYm9keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gV29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL3N1cGFiYXNlL3Bvc3RncmVzdC1qcy9pc3N1ZXMvMjk1XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXJyb3IpICYmIHJlcy5zdGF0dXMgPT09IDQwNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzID0gMjAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0ID0gJ09LJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoX2QpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBXb3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vc3VwYWJhc2UvcG9zdGdyZXN0LWpzL2lzc3Vlcy8yOTVcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gNDA0ICYmIGJvZHkgPT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1cyA9IDIwNDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICdObyBDb250ZW50JztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogYm9keSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IgJiYgdGhpcy5pc01heWJlU2luZ2xlICYmICgoX2MgPSBlcnJvciA9PT0gbnVsbCB8fCBlcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3IuZGV0YWlscykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmluY2x1ZGVzKCdSZXN1bHRzIGNvbnRhaW4gMCByb3dzJykpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1cyA9IDIwMDtcclxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0ID0gJ09LJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChlcnJvciAmJiB0aGlzLnNob3VsZFRocm93T25FcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHBvc3RncmVzdFJlc3BvbnNlID0ge1xyXG4gICAgICAgICAgICAgICAgZXJyb3IsXHJcbiAgICAgICAgICAgICAgICBkYXRhLFxyXG4gICAgICAgICAgICAgICAgY291bnQsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXMsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXNUZXh0LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXR1cm4gcG9zdGdyZXN0UmVzcG9uc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZFRocm93T25FcnJvcikge1xyXG4gICAgICAgICAgICByZXMgPSByZXMuY2F0Y2goKGZldGNoRXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgIHZhciBfYSwgX2IsIF9jO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICh7XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogYCR7KF9hID0gZmV0Y2hFcnJvciA9PT0gbnVsbCB8fCBmZXRjaEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZXRjaEVycm9yLm5hbWUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICdGZXRjaEVycm9yJ306ICR7ZmV0Y2hFcnJvciA9PT0gbnVsbCB8fCBmZXRjaEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZXRjaEVycm9yLm1lc3NhZ2V9YCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsczogYCR7KF9iID0gZmV0Y2hFcnJvciA9PT0gbnVsbCB8fCBmZXRjaEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZXRjaEVycm9yLnN0YWNrKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAnJ31gLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoaW50OiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogYCR7KF9jID0gZmV0Y2hFcnJvciA9PT0gbnVsbCB8fCBmZXRjaEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZXRjaEVycm9yLmNvZGUpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6ICcnfWAsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvdW50OiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogMCxcclxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiAnJyxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcy50aGVuKG9uZnVsZmlsbGVkLCBvbnJlamVjdGVkKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qb3N0Z3Jlc3RCdWlsZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PostgrestClient; }\n/* harmony export */ });\n/* harmony import */ var _PostgrestQueryBuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PostgrestQueryBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js\");\n/* harmony import */ var _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./node_modules/@supabase/postgrest-js/dist/module/constants.js\");\n\r\n\r\n\r\n/**\r\n * PostgREST client.\r\n *\r\n * @typeParam Database - Types for the schema from the [type\r\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\r\n *\r\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\r\n * literal, the same one passed to the constructor. If the schema is not\r\n * `\"public\"`, this must be supplied manually.\r\n */\r\nclass PostgrestClient {\r\n    // TODO: Add back shouldThrowOnError once we figure out the typings\r\n    /**\r\n     * Creates a PostgREST client.\r\n     *\r\n     * @param url - URL of the PostgREST endpoint\r\n     * @param options - Named parameters\r\n     * @param options.headers - Custom headers\r\n     * @param options.schema - Postgres schema to switch to\r\n     * @param options.fetch - Custom fetch\r\n     */\r\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, _constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_HEADERS), headers);\r\n        this.schema = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        const url = new URL(`${this.url}/${relation}`);\r\n        return new _PostgrestQueryBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"](url, {\r\n            headers: Object.assign({}, this.headers),\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, { head = false, count, } = {}) {\r\n        let method;\r\n        const url = new URL(`${this.url}/rpc/${fn}`);\r\n        let body;\r\n        if (head) {\r\n            method = 'HEAD';\r\n            Object.entries(args).forEach(([name, value]) => {\r\n                url.searchParams.append(name, `${value}`);\r\n            });\r\n        }\r\n        else {\r\n            method = 'POST';\r\n            body = args;\r\n        }\r\n        const headers = Object.assign({}, this.headers);\r\n        if (count) {\r\n            headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n            method,\r\n            url,\r\n            headers,\r\n            schema: this.schema,\r\n            body,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=PostgrestClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9Qb3N0Z3Jlc3RDbGllbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0RDtBQUNFO0FBQ2hCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixZQUFZLG1CQUFtQixJQUFJO0FBQzFEO0FBQ0EscURBQXFELEVBQUUsdURBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFNBQVMsR0FBRyxTQUFTO0FBQ3BELG1CQUFtQiw4REFBcUI7QUFDeEMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsSUFBSSx1QkFBdUIsSUFBSTtBQUNwRDtBQUNBLCtCQUErQixTQUFTLE9BQU8sR0FBRztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxNQUFNO0FBQ3ZELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0EseUNBQXlDLE1BQU07QUFDL0M7QUFDQSxtQkFBbUIsK0RBQXNCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9Qb3N0Z3Jlc3RDbGllbnQuanM/MmVmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUG9zdGdyZXN0UXVlcnlCdWlsZGVyIGZyb20gJy4vUG9zdGdyZXN0UXVlcnlCdWlsZGVyJztcclxuaW1wb3J0IFBvc3RncmVzdEZpbHRlckJ1aWxkZXIgZnJvbSAnLi9Qb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyJztcclxuaW1wb3J0IHsgREVGQVVMVF9IRUFERVJTIH0gZnJvbSAnLi9jb25zdGFudHMnO1xyXG4vKipcclxuICogUG9zdGdSRVNUIGNsaWVudC5cclxuICpcclxuICogQHR5cGVQYXJhbSBEYXRhYmFzZSAtIFR5cGVzIGZvciB0aGUgc2NoZW1hIGZyb20gdGhlIFt0eXBlXHJcbiAqIGdlbmVyYXRvcl0oaHR0cHM6Ly9zdXBhYmFzZS5jb20vZG9jcy9yZWZlcmVuY2UvamF2YXNjcmlwdC9uZXh0L3R5cGVzY3JpcHQtc3VwcG9ydClcclxuICpcclxuICogQHR5cGVQYXJhbSBTY2hlbWFOYW1lIC0gUG9zdGdyZXMgc2NoZW1hIHRvIHN3aXRjaCB0by4gTXVzdCBiZSBhIHN0cmluZ1xyXG4gKiBsaXRlcmFsLCB0aGUgc2FtZSBvbmUgcGFzc2VkIHRvIHRoZSBjb25zdHJ1Y3Rvci4gSWYgdGhlIHNjaGVtYSBpcyBub3RcclxuICogYFwicHVibGljXCJgLCB0aGlzIG11c3QgYmUgc3VwcGxpZWQgbWFudWFsbHkuXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3N0Z3Jlc3RDbGllbnQge1xyXG4gICAgLy8gVE9ETzogQWRkIGJhY2sgc2hvdWxkVGhyb3dPbkVycm9yIG9uY2Ugd2UgZmlndXJlIG91dCB0aGUgdHlwaW5nc1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgUG9zdGdSRVNUIGNsaWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdXJsIC0gVVJMIG9mIHRoZSBQb3N0Z1JFU1QgZW5kcG9pbnRcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xyXG4gICAgICogQHBhcmFtIG9wdGlvbnMuaGVhZGVycyAtIEN1c3RvbSBoZWFkZXJzXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5zY2hlbWEgLSBQb3N0Z3JlcyBzY2hlbWEgdG8gc3dpdGNoIHRvXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5mZXRjaCAtIEN1c3RvbSBmZXRjaFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHsgaGVhZGVycyA9IHt9LCBzY2hlbWEsIGZldGNoLCB9ID0ge30pIHtcclxuICAgICAgICB0aGlzLnVybCA9IHVybDtcclxuICAgICAgICB0aGlzLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfSEVBREVSUyksIGhlYWRlcnMpO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hID0gc2NoZW1hO1xyXG4gICAgICAgIHRoaXMuZmV0Y2ggPSBmZXRjaDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVyZm9ybSBhIHF1ZXJ5IG9uIGEgdGFibGUgb3IgYSB2aWV3LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSByZWxhdGlvbiAtIFRoZSB0YWJsZSBvciB2aWV3IG5hbWUgdG8gcXVlcnlcclxuICAgICAqL1xyXG4gICAgZnJvbShyZWxhdGlvbikge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoYCR7dGhpcy51cmx9LyR7cmVsYXRpb259YCk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIodXJsLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaGVhZGVycyksXHJcbiAgICAgICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWEsXHJcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtIGEgZnVuY3Rpb24gY2FsbC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZm4gLSBUaGUgZnVuY3Rpb24gbmFtZSB0byBjYWxsXHJcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGUgZnVuY3Rpb24gY2FsbFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBOYW1lZCBwYXJhbWV0ZXJzXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5oZWFkIC0gV2hlbiBzZXQgdG8gYHRydWVgLCBgZGF0YWAgd2lsbCBub3QgYmUgcmV0dXJuZWQuXHJcbiAgICAgKiBVc2VmdWwgaWYgeW91IG9ubHkgbmVlZCB0aGUgY291bnQuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb3VudCAtIENvdW50IGFsZ29yaXRobSB0byB1c2UgdG8gY291bnQgcm93cyByZXR1cm5lZCBieSB0aGVcclxuICAgICAqIGZ1bmN0aW9uLiBPbmx5IGFwcGxpY2FibGUgZm9yIFtzZXQtcmV0dXJuaW5nXHJcbiAgICAgKiBmdW5jdGlvbnNdKGh0dHBzOi8vd3d3LnBvc3RncmVzcWwub3JnL2RvY3MvY3VycmVudC9mdW5jdGlvbnMtc3JmLmh0bWwpLlxyXG4gICAgICpcclxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcclxuICAgICAqIGhvb2QuXHJcbiAgICAgKlxyXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcclxuICAgICAqIHN0YXRpc3RpY3MgdW5kZXIgdGhlIGhvb2QuXHJcbiAgICAgKlxyXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxyXG4gICAgICogbnVtYmVycy5cclxuICAgICAqL1xyXG4gICAgcnBjKGZuLCBhcmdzID0ge30sIHsgaGVhZCA9IGZhbHNlLCBjb3VudCwgfSA9IHt9KSB7XHJcbiAgICAgICAgbGV0IG1ldGhvZDtcclxuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGAke3RoaXMudXJsfS9ycGMvJHtmbn1gKTtcclxuICAgICAgICBsZXQgYm9keTtcclxuICAgICAgICBpZiAoaGVhZCkge1xyXG4gICAgICAgICAgICBtZXRob2QgPSAnSEVBRCc7XHJcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGFyZ3MpLmZvckVhY2goKFtuYW1lLCB2YWx1ZV0pID0+IHtcclxuICAgICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKG5hbWUsIGAke3ZhbHVlfWApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG1ldGhvZCA9ICdQT1NUJztcclxuICAgICAgICAgICAgYm9keSA9IGFyZ3M7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmhlYWRlcnMpO1xyXG4gICAgICAgIGlmIChjb3VudCkge1xyXG4gICAgICAgICAgICBoZWFkZXJzWydQcmVmZXInXSA9IGBjb3VudD0ke2NvdW50fWA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcih7XHJcbiAgICAgICAgICAgIG1ldGhvZCxcclxuICAgICAgICAgICAgdXJsLFxyXG4gICAgICAgICAgICBoZWFkZXJzLFxyXG4gICAgICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hLFxyXG4gICAgICAgICAgICBib2R5LFxyXG4gICAgICAgICAgICBmZXRjaDogdGhpcy5mZXRjaCxcclxuICAgICAgICAgICAgYWxsb3dFbXB0eTogZmFsc2UsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9zdGdyZXN0Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PostgrestFilterBuilder; }\n/* harmony export */ });\n/* harmony import */ var _PostgrestTransformBuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PostgrestTransformBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js\");\n\r\nclass PostgrestFilterBuilder extends _PostgrestTransformBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    /**\r\n     * Match only rows where `column` is equal to `value`.\r\n     *\r\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    eq(column, value) {\r\n        this.url.searchParams.append(column, `eq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is not equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    neq(column, value) {\r\n        this.url.searchParams.append(column, `neq.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gt(column, value) {\r\n        this.url.searchParams.append(column, `gt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is greater than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    gte(column, value) {\r\n        this.url.searchParams.append(column, `gte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lt(column, value) {\r\n        this.url.searchParams.append(column, `lt.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is less than or equal to `value`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    lte(column, value) {\r\n        this.url.searchParams.append(column, `lte.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    like(column, pattern) {\r\n        this.url.searchParams.append(column, `like.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    likeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches `pattern` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param pattern - The pattern to match with\r\n     */\r\n    ilike(column, pattern) {\r\n        this.url.searchParams.append(column, `ilike.${pattern}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAllOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param patterns - The patterns to match with\r\n     */\r\n    ilikeAnyOf(column, patterns) {\r\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` IS `value`.\r\n     *\r\n     * For non-boolean columns, this is only relevant for checking if the value of\r\n     * `column` is NULL by setting `value` to `null`.\r\n     *\r\n     * For boolean columns, you can also set `value` to `true` or `false` and it\r\n     * will behave the same way as `.eq()`.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param value - The value to filter with\r\n     */\r\n    is(column, value) {\r\n        this.url.searchParams.append(column, `is.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where `column` is included in the `values` array.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param values - The values array to filter with\r\n     */\r\n    in(column, values) {\r\n        const cleanedValues = values\r\n            .map((s) => {\r\n            // handle postgrest reserved characters\r\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\r\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\r\n                return `\"${s}\"`;\r\n            else\r\n                return `${s}`;\r\n        })\r\n            .join(',');\r\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * `column` contains every element appearing in `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    contains(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\r\n            // keep it simple and accept a string\r\n            this.url.searchParams.append(column, `cs.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for jsonb, array, and range columns. Match only rows where\r\n     * every element appearing in `column` is contained by `value`.\r\n     *\r\n     * @param column - The jsonb, array, or range column to filter on\r\n     * @param value - The jsonb, array, or range value to filter with\r\n     */\r\n    containedBy(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `cd.${value}`);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            // array\r\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\r\n        }\r\n        else {\r\n            // json\r\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is greater than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGt(column, range) {\r\n        this.url.searchParams.append(column, `sr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or greater than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeGte(column, range) {\r\n        this.url.searchParams.append(column, `nxl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is less than any element in `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLt(column, range) {\r\n        this.url.searchParams.append(column, `sl.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where every element in\r\n     * `column` is either contained in `range` or less than any element in\r\n     * `range`.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeLte(column, range) {\r\n        this.url.searchParams.append(column, `nxr.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for range columns. Match only rows where `column` is\r\n     * mutually exclusive to `range` and there can be no element between the two\r\n     * ranges.\r\n     *\r\n     * @param column - The range column to filter on\r\n     * @param range - The range to filter with\r\n     */\r\n    rangeAdjacent(column, range) {\r\n        this.url.searchParams.append(column, `adj.${range}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for array and range columns. Match only rows where\r\n     * `column` and `value` have an element in common.\r\n     *\r\n     * @param column - The array or range column to filter on\r\n     * @param value - The array or range value to filter with\r\n     */\r\n    overlaps(column, value) {\r\n        if (typeof value === 'string') {\r\n            // range\r\n            this.url.searchParams.append(column, `ov.${value}`);\r\n        }\r\n        else {\r\n            // array\r\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Only relevant for text and tsvector columns. Match only rows where\r\n     * `column` matches the query string in `query`.\r\n     *\r\n     * @param column - The text or tsvector column to filter on\r\n     * @param query - The query text to match with\r\n     * @param options - Named parameters\r\n     * @param options.config - The text search configuration to use\r\n     * @param options.type - Change how the `query` text is interpreted\r\n     */\r\n    textSearch(column, query, { config, type } = {}) {\r\n        let typePart = '';\r\n        if (type === 'plain') {\r\n            typePart = 'pl';\r\n        }\r\n        else if (type === 'phrase') {\r\n            typePart = 'ph';\r\n        }\r\n        else if (type === 'websearch') {\r\n            typePart = 'w';\r\n        }\r\n        const configPart = config === undefined ? '' : `(${config})`;\r\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows where each column in `query` keys is equal to its\r\n     * associated value. Shorthand for multiple `.eq()`s.\r\n     *\r\n     * @param query - The object to filter with, with column names as keys mapped\r\n     * to their filter values\r\n     */\r\n    match(query) {\r\n        Object.entries(query).forEach(([column, value]) => {\r\n            this.url.searchParams.append(column, `eq.${value}`);\r\n        });\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which doesn't satisfy the filter.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to be negated to filter with, following\r\n     * PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    not(column, operator, value) {\r\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy at least one of the filters.\r\n     *\r\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure it's properly sanitized.\r\n     *\r\n     * It's currently not possible to do an `.or()` filter across multiple tables.\r\n     *\r\n     * @param filters - The filters to use, following PostgREST syntax\r\n     * @param foreignTable - Set this to filter on foreign tables instead of the\r\n     * current table\r\n     */\r\n    or(filters, { foreignTable } = {}) {\r\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\r\n        this.url.searchParams.append(key, `(${filters})`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Match only rows which satisfy the filter. This is an escape hatch - you\r\n     * should use the specific filter methods wherever possible.\r\n     *\r\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\r\n     * follow [PostgREST\r\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\r\n     * to make sure they are properly sanitized.\r\n     *\r\n     * @param column - The column to filter on\r\n     * @param operator - The operator to filter with, following PostgREST syntax\r\n     * @param value - The value to filter with, following PostgREST syntax\r\n     */\r\n    filter(column, operator, value) {\r\n        this.url.searchParams.append(column, `${operator}.${value}`);\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=PostgrestFilterBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PostgrestQueryBuilder; }\n/* harmony export */ });\n/* harmony import */ var _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js\");\n\r\nclass PostgrestQueryBuilder {\r\n    constructor(url, { headers = {}, schema, fetch, }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.schema = schema;\r\n        this.fetch = fetch;\r\n    }\r\n    /**\r\n     * Perform a SELECT query on the table or view.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     *\r\n     * @param options.count - Count algorithm to use to count rows in the table or view.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    select(columns, { head = false, count, } = {}) {\r\n        const method = head ? 'HEAD' : 'GET';\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (count) {\r\n            this.headers['Prefer'] = `count=${count}`;\r\n        }\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an INSERT into the table or view.\r\n     *\r\n     * By default, inserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to insert. Pass an object to insert a single row\r\n     * or an array to insert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count inserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column.\r\n     */\r\n    insert(values, { count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\r\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\r\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\r\n     * exist, or if it does exist, perform an alternative action depending on\r\n     * `ignoreDuplicates`.\r\n     *\r\n     * By default, upserted rows are not returned. To return it, chain the call\r\n     * with `.select()`.\r\n     *\r\n     * @param values - The values to upsert with. Pass an object to upsert a\r\n     * single row or an array to upsert multiple rows.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\r\n     * duplicate rows are determined. Two rows are duplicates if all the\r\n     * `onConflict` columns are equal.\r\n     *\r\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\r\n     * `false`, duplicate rows are merged with existing rows.\r\n     *\r\n     * @param options.count - Count algorithm to use to count upserted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     *\r\n     * @param options.defaultToNull - Make missing fields default to `null`.\r\n     * Otherwise, use the default value for the column. This only applies when\r\n     * inserting new rows, not when merging with existing rows under\r\n     * `ignoreDuplicates: false`.\r\n     */\r\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\r\n        const method = 'POST';\r\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\r\n        if (onConflict !== undefined)\r\n            this.url.searchParams.set('on_conflict', onConflict);\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (!defaultToNull) {\r\n            prefersHeaders.push('missing=default');\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        if (Array.isArray(values)) {\r\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\r\n            if (columns.length > 0) {\r\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\r\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\r\n            }\r\n        }\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform an UPDATE on the table or view.\r\n     *\r\n     * By default, updated rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param values - The values to update with\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count updated rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    update(values, { count, } = {}) {\r\n        const method = 'PATCH';\r\n        const prefersHeaders = [];\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.push(this.headers['Prefer']);\r\n        }\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            body: values,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n    /**\r\n     * Perform a DELETE on the table or view.\r\n     *\r\n     * By default, deleted rows are not returned. To return it, chain the call\r\n     * with `.select()` after filters.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.count - Count algorithm to use to count deleted rows.\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    delete({ count, } = {}) {\r\n        const method = 'DELETE';\r\n        const prefersHeaders = [];\r\n        if (count) {\r\n            prefersHeaders.push(`count=${count}`);\r\n        }\r\n        if (this.headers['Prefer']) {\r\n            prefersHeaders.unshift(this.headers['Prefer']);\r\n        }\r\n        this.headers['Prefer'] = prefersHeaders.join(',');\r\n        return new _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            method,\r\n            url: this.url,\r\n            headers: this.headers,\r\n            schema: this.schema,\r\n            fetch: this.fetch,\r\n            allowEmpty: false,\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=PostgrestQueryBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PostgrestTransformBuilder; }\n/* harmony export */ });\n/* harmony import */ var _PostgrestBuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PostgrestBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js\");\n\r\nclass PostgrestTransformBuilder extends _PostgrestBuilder__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    /**\r\n     * Perform a SELECT on the query result.\r\n     *\r\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\r\n     * return modified rows. By calling this method, modified rows are returned in\r\n     * `data`.\r\n     *\r\n     * @param columns - The columns to retrieve, separated by commas\r\n     */\r\n    select(columns) {\r\n        // Remove whitespaces except when quoted\r\n        let quoted = false;\r\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\r\n            .split('')\r\n            .map((c) => {\r\n            if (/\\s/.test(c) && !quoted) {\r\n                return '';\r\n            }\r\n            if (c === '\"') {\r\n                quoted = !quoted;\r\n            }\r\n            return c;\r\n        })\r\n            .join('');\r\n        this.url.searchParams.set('select', cleanedColumns);\r\n        if (this.headers['Prefer']) {\r\n            this.headers['Prefer'] += ',';\r\n        }\r\n        this.headers['Prefer'] += 'return=representation';\r\n        return this;\r\n    }\r\n    /**\r\n     * Order the query result by `column`.\r\n     *\r\n     * You can call this method multiple times to order by multiple columns.\r\n     *\r\n     * You can order foreign tables, but it doesn't affect the ordering of the\r\n     * current table.\r\n     *\r\n     * @param column - The column to order by\r\n     * @param options - Named parameters\r\n     * @param options.ascending - If `true`, the result will be in ascending order\r\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\r\n     * `null`s appear last.\r\n     * @param options.foreignTable - Set this to order a foreign table by foreign\r\n     * columns\r\n     */\r\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\r\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\r\n        const existingOrder = this.url.searchParams.get(key);\r\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by `count`.\r\n     *\r\n     * @param count - The maximum number of rows to return\r\n     * @param options - Named parameters\r\n     * @param options.foreignTable - Set this to limit rows of foreign tables\r\n     * instead of the current table\r\n     */\r\n    limit(count, { foreignTable } = {}) {\r\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\r\n        this.url.searchParams.set(key, `${count}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Limit the query result by `from` and `to` inclusively.\r\n     *\r\n     * @param from - The starting index from which to limit the result\r\n     * @param to - The last index to which to limit the result\r\n     * @param options - Named parameters\r\n     * @param options.foreignTable - Set this to limit rows of foreign tables\r\n     * instead of the current table\r\n     */\r\n    range(from, to, { foreignTable } = {}) {\r\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\r\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\r\n        this.url.searchParams.set(keyOffset, `${from}`);\r\n        // Range is inclusive, so add 1\r\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the AbortSignal for the fetch request.\r\n     *\r\n     * @param signal - The AbortSignal to use for the fetch request\r\n     */\r\n    abortSignal(signal) {\r\n        this.signal = signal;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\r\n     * returns an error.\r\n     */\r\n    single() {\r\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a single object instead of an array of objects.\r\n     *\r\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\r\n     * this returns an error.\r\n     */\r\n    maybeSingle() {\r\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\r\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\r\n        if (this.method === 'GET') {\r\n            this.headers['Accept'] = 'application/json';\r\n        }\r\n        else {\r\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\r\n        }\r\n        this.isMaybeSingle = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as a string in CSV format.\r\n     */\r\n    csv() {\r\n        this.headers['Accept'] = 'text/csv';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\r\n     */\r\n    geojson() {\r\n        this.headers['Accept'] = 'application/geo+json';\r\n        return this;\r\n    }\r\n    /**\r\n     * Return `data` as the EXPLAIN plan for the query.\r\n     *\r\n     * @param options - Named parameters\r\n     *\r\n     * @param options.analyze - If `true`, the query will be executed and the\r\n     * actual run time will be returned\r\n     *\r\n     * @param options.verbose - If `true`, the query identifier will be returned\r\n     * and `data` will include the output columns of the query\r\n     *\r\n     * @param options.settings - If `true`, include information on configuration\r\n     * parameters that affect query planning\r\n     *\r\n     * @param options.buffers - If `true`, include information on buffer usage\r\n     *\r\n     * @param options.wal - If `true`, include information on WAL record generation\r\n     *\r\n     * @param options.format - The format of the output, can be `\"text\"` (default)\r\n     * or `\"json\"`\r\n     */\r\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\r\n        const options = [\r\n            analyze ? 'analyze' : null,\r\n            verbose ? 'verbose' : null,\r\n            settings ? 'settings' : null,\r\n            buffers ? 'buffers' : null,\r\n            wal ? 'wal' : null,\r\n        ]\r\n            .filter(Boolean)\r\n            .join('|');\r\n        // An Accept header can carry multiple media types but postgrest-js always sends one\r\n        const forMediatype = this.headers['Accept'];\r\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\r\n        if (format === 'json')\r\n            return this;\r\n        else\r\n            return this;\r\n    }\r\n    /**\r\n     * Rollback the query.\r\n     *\r\n     * `data` will still be returned, but the query is not committed.\r\n     */\r\n    rollback() {\r\n        var _a;\r\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\r\n            this.headers['Prefer'] += ',tx=rollback';\r\n        }\r\n        else {\r\n            this.headers['Prefer'] = 'tx=rollback';\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Override the type of the returned `data`.\r\n     *\r\n     * @typeParam NewResult - The new result type to override with\r\n     */\r\n    returns() {\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=PostgrestTransformBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/constants.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_HEADERS\": function() { return /* binding */ DEFAULT_HEADERS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/postgrest-js/dist/module/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsMEJBQTBCLGlDQUFpQyw2Q0FBTyxDQUFDO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvbW9kdWxlL2NvbnN0YW50cy5qcz8wNmY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9IRUFERVJTID0geyAnWC1DbGllbnQtSW5mbyc6IGBwb3N0Z3Jlc3QtanMvJHt2ZXJzaW9ufWAgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PostgrestBuilder\": function() { return /* reexport safe */ _PostgrestBuilder__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   \"PostgrestClient\": function() { return /* reexport safe */ _PostgrestClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"PostgrestFilterBuilder\": function() { return /* reexport safe */ _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   \"PostgrestQueryBuilder\": function() { return /* reexport safe */ _PostgrestQueryBuilder__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"PostgrestTransformBuilder\": function() { return /* reexport safe */ _PostgrestTransformBuilder__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _PostgrestClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PostgrestClient */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js\");\n/* harmony import */ var _PostgrestQueryBuilder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PostgrestQueryBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js\");\n/* harmony import */ var _PostgrestFilterBuilder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js\");\n/* harmony import */ var _PostgrestTransformBuilder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PostgrestTransformBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js\");\n/* harmony import */ var _PostgrestBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PostgrestBuilder */ \"./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js\");\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQStEO0FBQ1k7QUFDRTtBQUNNO0FBQ2xCO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzPzY2NGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBQb3N0Z3Jlc3RDbGllbnQgfSBmcm9tICcuL1Bvc3RncmVzdENsaWVudCc7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUG9zdGdyZXN0UXVlcnlCdWlsZGVyIH0gZnJvbSAnLi9Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXInO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIgfSBmcm9tICcuL1Bvc3RncmVzdEZpbHRlckJ1aWxkZXInO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXIgfSBmcm9tICcuL1Bvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXInO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFBvc3RncmVzdEJ1aWxkZXIgfSBmcm9tICcuL1Bvc3RncmVzdEJ1aWxkZXInO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/module/version.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/module/version.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '1.7.1';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L21vZHVsZS92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvbW9kdWxlL3ZlcnNpb24uanM/YmUwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcxLjcuMSc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/module/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"REALTIME_LISTEN_TYPES\": function() { return /* binding */ REALTIME_LISTEN_TYPES; },\n/* harmony export */   \"REALTIME_POSTGRES_CHANGES_LISTEN_EVENT\": function() { return /* binding */ REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   \"REALTIME_SUBSCRIBE_STATES\": function() { return /* binding */ REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeChannel; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_push__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/push */ \"./node_modules/@supabase/realtime-js/dist/module/lib/push.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RealtimePresence */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\r\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\r\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\r\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\r\nvar REALTIME_LISTEN_TYPES;\r\n(function (REALTIME_LISTEN_TYPES) {\r\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\r\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\r\n    /**\r\n     * listen to Postgres changes.\r\n     */\r\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\r\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\r\nvar REALTIME_SUBSCRIBE_STATES;\r\n(function (REALTIME_SUBSCRIBE_STATES) {\r\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\r\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\r\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\r\n/** A channel is the basic building block of Realtime\r\n * and narrows the scope of data flow to subscribed clients.\r\n * You can think of a channel as a chatroom where participants are able to see who's online\r\n * and send and receive messages.\r\n **/\r\nclass RealtimeChannel {\r\n    constructor(\r\n    /** Topic name can be any string. */\r\n    topic, params = { config: {} }, socket) {\r\n        this.topic = topic;\r\n        this.params = params;\r\n        this.socket = socket;\r\n        this.bindings = {};\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n        this.joinedOnce = false;\r\n        this.pushBuffer = [];\r\n        this.params.config = Object.assign({\r\n            broadcast: { ack: false, self: false },\r\n            presence: { key: '' },\r\n        }, params.config);\r\n        this.timeout = this.socket.timeout;\r\n        this.joinPush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.join, this.params, this.timeout);\r\n        this.rejoinTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\r\n        this.joinPush.receive('ok', () => {\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n            this.rejoinTimer.reset();\r\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\r\n            this.pushBuffer = [];\r\n        });\r\n        this._onClose(() => {\r\n            this.rejoinTimer.reset();\r\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n            this.socket._remove(this);\r\n        });\r\n        this._onError((reason) => {\r\n            if (this._isLeaving() || this._isClosed()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `error ${this.topic}`, reason);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this.joinPush.receive('timeout', () => {\r\n            if (!this._isJoining()) {\r\n                return;\r\n            }\r\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\r\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\r\n            this.rejoinTimer.scheduleTimeout();\r\n        });\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.reply, {}, (payload, ref) => {\r\n            this._trigger(this._replyEventName(ref), payload);\r\n        });\r\n        this.presence = new _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\r\n    }\r\n    /** Subscribe registers your client with the server */\r\n    subscribe(callback, timeout = this.timeout) {\r\n        var _a, _b;\r\n        if (this.joinedOnce) {\r\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\r\n        }\r\n        else {\r\n            const { config: { broadcast, presence }, } = this.params;\r\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\r\n            this._onClose(() => callback && callback('CLOSED'));\r\n            const accessTokenPayload = {};\r\n            const config = {\r\n                broadcast,\r\n                presence,\r\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\r\n            };\r\n            if (this.socket.accessToken) {\r\n                accessTokenPayload.access_token = this.socket.accessToken;\r\n            }\r\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\r\n            this.joinedOnce = true;\r\n            this._rejoin(timeout);\r\n            this.joinPush\r\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\r\n                var _a;\r\n                this.socket.accessToken &&\r\n                    this.socket.setAuth(this.socket.accessToken);\r\n                if (serverPostgresFilters === undefined) {\r\n                    callback && callback('SUBSCRIBED');\r\n                    return;\r\n                }\r\n                else {\r\n                    const clientPostgresBindings = this.bindings.postgres_changes;\r\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\r\n                    const newPostgresBindings = [];\r\n                    for (let i = 0; i < bindingsLen; i++) {\r\n                        const clientPostgresBinding = clientPostgresBindings[i];\r\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\r\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\r\n                        if (serverPostgresFilter &&\r\n                            serverPostgresFilter.event === event &&\r\n                            serverPostgresFilter.schema === schema &&\r\n                            serverPostgresFilter.table === table &&\r\n                            serverPostgresFilter.filter === filter) {\r\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\r\n                        }\r\n                        else {\r\n                            this.unsubscribe();\r\n                            callback &&\r\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.bindings.postgres_changes = newPostgresBindings;\r\n                    callback && callback('SUBSCRIBED');\r\n                    return;\r\n                }\r\n            })\r\n                .receive('error', (error) => {\r\n                callback &&\r\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\r\n                return;\r\n            })\r\n                .receive('timeout', () => {\r\n                callback && callback('TIMED_OUT');\r\n                return;\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    presenceState() {\r\n        return this.presence.state;\r\n    }\r\n    track(payload, opts = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.send({\r\n                type: 'presence',\r\n                event: 'track',\r\n                payload,\r\n            }, opts.timeout || this.timeout);\r\n        });\r\n    }\r\n    untrack(opts = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.send({\r\n                type: 'presence',\r\n                event: 'untrack',\r\n            }, opts);\r\n        });\r\n    }\r\n    on(type, filter, callback) {\r\n        return this._on(type, filter, callback);\r\n    }\r\n    send(payload, opts = {}) {\r\n        return new Promise((resolve) => {\r\n            var _a, _b, _c;\r\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\r\n            if (push.rateLimited) {\r\n                resolve('rate limited');\r\n            }\r\n            if (payload.type === 'broadcast' &&\r\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\r\n                resolve('ok');\r\n            }\r\n            push.receive('ok', () => resolve('ok'));\r\n            push.receive('timeout', () => resolve('timed out'));\r\n        });\r\n    }\r\n    updateJoinPayload(payload) {\r\n        this.joinPush.updatePayload(payload);\r\n    }\r\n    /**\r\n     * Leaves the channel.\r\n     *\r\n     * Unsubscribes from server events, and instructs channel to terminate on server.\r\n     * Triggers onClose() hooks.\r\n     *\r\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\r\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\r\n     */\r\n    unsubscribe(timeout = this.timeout) {\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n        const onClose = () => {\r\n            this.socket.log('channel', `leave ${this.topic}`);\r\n            this._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, 'leave', this._joinRef());\r\n        };\r\n        this.rejoinTimer.reset();\r\n        // Destroy joinPush to avoid connection timeouts during unscription phase\r\n        this.joinPush.destroy();\r\n        return new Promise((resolve) => {\r\n            const leavePush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.leave, {}, timeout);\r\n            leavePush\r\n                .receive('ok', () => {\r\n                onClose();\r\n                resolve('ok');\r\n            })\r\n                .receive('timeout', () => {\r\n                onClose();\r\n                resolve('timed out');\r\n            })\r\n                .receive('error', () => {\r\n                resolve('error');\r\n            });\r\n            leavePush.send();\r\n            if (!this._canPush()) {\r\n                leavePush.trigger('ok', {});\r\n            }\r\n        });\r\n    }\r\n    /** @internal */\r\n    _push(event, payload, timeout = this.timeout) {\r\n        if (!this.joinedOnce) {\r\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\r\n        }\r\n        let pushEvent = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, event, payload, timeout);\r\n        if (this._canPush()) {\r\n            pushEvent.send();\r\n        }\r\n        else {\r\n            pushEvent.startTimeout();\r\n            this.pushBuffer.push(pushEvent);\r\n        }\r\n        return pushEvent;\r\n    }\r\n    /**\r\n     * Overridable message hook\r\n     *\r\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\r\n     * Must return the payload, modified or unmodified.\r\n     *\r\n     * @internal\r\n     */\r\n    _onMessage(_event, payload, _ref) {\r\n        return payload;\r\n    }\r\n    /** @internal */\r\n    _isMember(topic) {\r\n        return this.topic === topic;\r\n    }\r\n    /** @internal */\r\n    _joinRef() {\r\n        return this.joinPush.ref;\r\n    }\r\n    /** @internal */\r\n    _trigger(type, payload, ref) {\r\n        var _a, _b;\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const { close, error, leave, join } = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS;\r\n        const events = [close, error, leave, join];\r\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\r\n            return;\r\n        }\r\n        let handledPayload = this._onMessage(typeLower, payload, ref);\r\n        if (payload && !handledPayload) {\r\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\r\n        }\r\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\r\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\r\n                var _a, _b, _c;\r\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\r\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\r\n            }).map((bind) => bind.callback(handledPayload, ref));\r\n        }\r\n        else {\r\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\r\n                var _a, _b, _c, _d, _e, _f;\r\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\r\n                    if ('id' in bind) {\r\n                        const bindId = bind.id;\r\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\r\n                        return (bindId &&\r\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\r\n                            (bindEvent === '*' ||\r\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\r\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\r\n                    }\r\n                    else {\r\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\r\n                        return (bindEvent === '*' ||\r\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\r\n                    }\r\n                }\r\n                else {\r\n                    return bind.type.toLocaleLowerCase() === typeLower;\r\n                }\r\n            }).map((bind) => {\r\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\r\n                    const postgresChanges = handledPayload.data;\r\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\r\n                    const enrichedPayload = {\r\n                        schema: schema,\r\n                        table: table,\r\n                        commit_timestamp: commit_timestamp,\r\n                        eventType: type,\r\n                        new: {},\r\n                        old: {},\r\n                        errors: errors,\r\n                    };\r\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\r\n                }\r\n                bind.callback(handledPayload, ref);\r\n            });\r\n        }\r\n    }\r\n    /** @internal */\r\n    _isClosed() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\r\n    }\r\n    /** @internal */\r\n    _isJoined() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\r\n    }\r\n    /** @internal */\r\n    _isJoining() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n    }\r\n    /** @internal */\r\n    _isLeaving() {\r\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\r\n    }\r\n    /** @internal */\r\n    _replyEventName(ref) {\r\n        return `chan_reply_${ref}`;\r\n    }\r\n    /** @internal */\r\n    _on(type, filter, callback) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        const binding = {\r\n            type: typeLower,\r\n            filter: filter,\r\n            callback: callback,\r\n        };\r\n        if (this.bindings[typeLower]) {\r\n            this.bindings[typeLower].push(binding);\r\n        }\r\n        else {\r\n            this.bindings[typeLower] = [binding];\r\n        }\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    _off(type, filter) {\r\n        const typeLower = type.toLocaleLowerCase();\r\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\r\n            var _a;\r\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\r\n                RealtimeChannel.isEqual(bind.filter, filter));\r\n        });\r\n        return this;\r\n    }\r\n    /** @internal */\r\n    static isEqual(obj1, obj2) {\r\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n            return false;\r\n        }\r\n        for (const k in obj1) {\r\n            if (obj1[k] !== obj2[k]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /** @internal */\r\n    _rejoinUntilConnected() {\r\n        this.rejoinTimer.scheduleTimeout();\r\n        if (this.socket.isConnected()) {\r\n            this._rejoin();\r\n        }\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel closes.\r\n     *\r\n     * @internal\r\n     */\r\n    _onClose(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, {}, callback);\r\n    }\r\n    /**\r\n     * Registers a callback that will be executed when the channel encounteres an error.\r\n     *\r\n     * @internal\r\n     */\r\n    _onError(callback) {\r\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\r\n    }\r\n    /**\r\n     * Returns `true` if the socket is connected and the channel has been joined.\r\n     *\r\n     * @internal\r\n     */\r\n    _canPush() {\r\n        return this.socket.isConnected() && this._isJoined();\r\n    }\r\n    /** @internal */\r\n    _rejoin(timeout = this.timeout) {\r\n        if (this._isLeaving()) {\r\n            return;\r\n        }\r\n        this.socket._leaveOpenTopic(this.topic);\r\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\r\n        this.joinPush.resend(timeout);\r\n    }\r\n    /** @internal */\r\n    _getPayloadRecords(payload) {\r\n        const records = {\r\n            new: {},\r\n            old: {},\r\n        };\r\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\r\n            records.new = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.record);\r\n        }\r\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\r\n            records.old = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.old_record);\r\n        }\r\n        return records;\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeChannel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeClient; }\n/* harmony export */ });\n/* harmony import */ var websocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! websocket */ \"./node_modules/websocket/lib/browser.js\");\n/* harmony import */ var websocket__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(websocket__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _lib_serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/serializer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RealtimeChannel */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst noop = () => { };\r\nclass RealtimeClient {\r\n    /**\r\n     * Initializes the Socket.\r\n     *\r\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\r\n     * @param options.transport The Websocket Transport, for example WebSocket.\r\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\r\n     * @param options.params The optional params to pass when connecting.\r\n     * @param options.headers The optional headers to pass when connecting.\r\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\r\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\r\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\r\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\r\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\r\n     */\r\n    constructor(endPoint, options) {\r\n        var _a;\r\n        this.accessToken = null;\r\n        this.channels = [];\r\n        this.endPoint = '';\r\n        this.headers = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS;\r\n        this.params = {};\r\n        this.timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TIMEOUT;\r\n        this.transport = websocket__WEBPACK_IMPORTED_MODULE_0__.w3cwebsocket;\r\n        this.heartbeatIntervalMs = 30000;\r\n        this.heartbeatTimer = undefined;\r\n        this.pendingHeartbeatRef = null;\r\n        this.ref = 0;\r\n        this.logger = noop;\r\n        this.conn = null;\r\n        this.sendBuffer = [];\r\n        this.serializer = new _lib_serializer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n        this.stateChangeCallbacks = {\r\n            open: [],\r\n            close: [],\r\n            error: [],\r\n            message: [],\r\n        };\r\n        this.eventsPerSecondLimitMs = 100;\r\n        this.inThrottle = false;\r\n        this.endPoint = `${endPoint}/${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.TRANSPORTS.websocket}`;\r\n        if (options === null || options === void 0 ? void 0 : options.params)\r\n            this.params = options.params;\r\n        if (options === null || options === void 0 ? void 0 : options.headers)\r\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\r\n        if (options === null || options === void 0 ? void 0 : options.timeout)\r\n            this.timeout = options.timeout;\r\n        if (options === null || options === void 0 ? void 0 : options.logger)\r\n            this.logger = options.logger;\r\n        if (options === null || options === void 0 ? void 0 : options.transport)\r\n            this.transport = options.transport;\r\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\r\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\r\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\r\n        if (eventsPerSecond)\r\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\r\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\r\n            ? options.reconnectAfterMs\r\n            : (tries) => {\r\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\r\n            };\r\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\r\n            ? options.encode\r\n            : (payload, callback) => {\r\n                return callback(JSON.stringify(payload));\r\n            };\r\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\r\n            ? options.decode\r\n            : this.serializer.decode.bind(this.serializer);\r\n        this.reconnectTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](() => __awaiter(this, void 0, void 0, function* () {\r\n            this.disconnect();\r\n            this.connect();\r\n        }), this.reconnectAfterMs);\r\n    }\r\n    /**\r\n     * Connects the socket, unless already connected.\r\n     */\r\n    connect() {\r\n        if (this.conn) {\r\n            return;\r\n        }\r\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\r\n        if (this.conn) {\r\n            this.conn.binaryType = 'arraybuffer';\r\n            this.conn.onopen = () => this._onConnOpen();\r\n            this.conn.onerror = (error) => this._onConnError(error);\r\n            this.conn.onmessage = (event) => this._onConnMessage(event);\r\n            this.conn.onclose = (event) => this._onConnClose(event);\r\n        }\r\n    }\r\n    /**\r\n     * Disconnects the socket.\r\n     *\r\n     * @param code A numeric status code to send on disconnect.\r\n     * @param reason A custom reason for the disconnect.\r\n     */\r\n    disconnect(code, reason) {\r\n        if (this.conn) {\r\n            this.conn.onclose = function () { }; // noop\r\n            if (code) {\r\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\r\n            }\r\n            else {\r\n                this.conn.close();\r\n            }\r\n            this.conn = null;\r\n            // remove open handles\r\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n            this.reconnectTimer.reset();\r\n        }\r\n    }\r\n    /**\r\n     * Returns all created channels\r\n     */\r\n    getChannels() {\r\n        return this.channels;\r\n    }\r\n    /**\r\n     * Unsubscribes and removes a single channel\r\n     * @param channel A RealtimeChannel instance\r\n     */\r\n    removeChannel(channel) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const status = yield channel.unsubscribe();\r\n            if (this.channels.length === 0) {\r\n                this.disconnect();\r\n            }\r\n            return status;\r\n        });\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all channels\r\n     */\r\n    removeAllChannels() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));\r\n            this.disconnect();\r\n            return values_1;\r\n        });\r\n    }\r\n    /**\r\n     * Logs the message.\r\n     *\r\n     * For customized logging, `this.logger` can be overridden.\r\n     */\r\n    log(kind, msg, data) {\r\n        this.logger(kind, msg, data);\r\n    }\r\n    /**\r\n     * Returns the current state of the socket.\r\n     */\r\n    connectionState() {\r\n        switch (this.conn && this.conn.readyState) {\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Connecting;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.open:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.closing:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closing;\r\n            default:\r\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closed;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` is the connection is open.\r\n     */\r\n    isConnected() {\r\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\r\n    }\r\n    channel(topic, params = { config: {} }) {\r\n        if (!this.isConnected()) {\r\n            this.connect();\r\n        }\r\n        const chan = new _RealtimeChannel__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`realtime:${topic}`, params, this);\r\n        this.channels.push(chan);\r\n        return chan;\r\n    }\r\n    /**\r\n     * Push out a message if the socket is connected.\r\n     *\r\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\r\n     */\r\n    push(data) {\r\n        const { topic, event, payload, ref } = data;\r\n        let callback = () => {\r\n            this.encode(data, (result) => {\r\n                var _a;\r\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\r\n            });\r\n        };\r\n        this.log('push', `${topic} ${event} (${ref})`, payload);\r\n        if (this.isConnected()) {\r\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\r\n                const isThrottled = this._throttle(callback)();\r\n                if (isThrottled) {\r\n                    return 'rate limited';\r\n                }\r\n            }\r\n            else {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            this.sendBuffer.push(callback);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\r\n     *\r\n     * @param token A JWT string.\r\n     */\r\n    setAuth(token) {\r\n        this.accessToken = token;\r\n        this.channels.forEach((channel) => {\r\n            token && channel.updateJoinPayload({ access_token: token });\r\n            if (channel.joinedOnce && channel._isJoined()) {\r\n                channel._push(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.access_token, { access_token: token });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Return the next message ref, accounting for overflows\r\n     *\r\n     * @internal\r\n     */\r\n    _makeRef() {\r\n        let newRef = this.ref + 1;\r\n        if (newRef === this.ref) {\r\n            this.ref = 0;\r\n        }\r\n        else {\r\n            this.ref = newRef;\r\n        }\r\n        return this.ref.toString();\r\n    }\r\n    /**\r\n     * Unsubscribe from channels with the specified topic.\r\n     *\r\n     * @internal\r\n     */\r\n    _leaveOpenTopic(topic) {\r\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\r\n        if (dupChannel) {\r\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\r\n            dupChannel.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Removes a subscription from the socket.\r\n     *\r\n     * @param channel An open subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    _remove(channel) {\r\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\r\n    }\r\n    /**\r\n     * Returns the URL of the websocket.\r\n     *\r\n     * @internal\r\n     */\r\n    _endPointURL() {\r\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.VSN }));\r\n    }\r\n    /** @internal */\r\n    _onConnMessage(rawMessage) {\r\n        this.decode(rawMessage.data, (msg) => {\r\n            let { topic, event, payload, ref } = msg;\r\n            if ((ref && ref === this.pendingHeartbeatRef) ||\r\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\r\n                this.pendingHeartbeatRef = null;\r\n            }\r\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\r\n            this.channels\r\n                .filter((channel) => channel._isMember(topic))\r\n                .forEach((channel) => channel._trigger(event, payload, ref));\r\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\r\n        });\r\n    }\r\n    /** @internal */\r\n    _onConnOpen() {\r\n        this.log('transport', `connected to ${this._endPointURL()}`);\r\n        this._flushSendBuffer();\r\n        this.reconnectTimer.reset();\r\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\r\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\r\n    }\r\n    /** @internal */\r\n    _onConnClose(event) {\r\n        this.log('transport', 'close', event);\r\n        this._triggerChanError();\r\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\r\n        this.reconnectTimer.scheduleTimeout();\r\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\r\n    }\r\n    /** @internal */\r\n    _onConnError(error) {\r\n        this.log('transport', error.message);\r\n        this._triggerChanError();\r\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\r\n    }\r\n    /** @internal */\r\n    _triggerChanError() {\r\n        this.channels.forEach((channel) => channel._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.error));\r\n    }\r\n    /** @internal */\r\n    _appendParams(url, params) {\r\n        if (Object.keys(params).length === 0) {\r\n            return url;\r\n        }\r\n        const prefix = url.match(/\\?/) ? '&' : '?';\r\n        const query = new URLSearchParams(params);\r\n        return `${url}${prefix}${query}`;\r\n    }\r\n    /** @internal */\r\n    _flushSendBuffer() {\r\n        if (this.isConnected() && this.sendBuffer.length > 0) {\r\n            this.sendBuffer.forEach((callback) => callback());\r\n            this.sendBuffer = [];\r\n        }\r\n    }\r\n    /** @internal */\r\n    _sendHeartbeat() {\r\n        var _a;\r\n        if (!this.isConnected()) {\r\n            return;\r\n        }\r\n        if (this.pendingHeartbeatRef) {\r\n            this.pendingHeartbeatRef = null;\r\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\r\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.WS_CLOSE_NORMAL, 'hearbeat timeout');\r\n            return;\r\n        }\r\n        this.pendingHeartbeatRef = this._makeRef();\r\n        this.push({\r\n            topic: 'phoenix',\r\n            event: 'heartbeat',\r\n            payload: {},\r\n            ref: this.pendingHeartbeatRef,\r\n        });\r\n        this.setAuth(this.accessToken);\r\n    }\r\n    /** @internal */\r\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\r\n        return () => {\r\n            if (this.inThrottle)\r\n                return true;\r\n            callback();\r\n            if (eventsPerSecondLimitMs > 0) {\r\n                this.inThrottle = true;\r\n                setTimeout(() => {\r\n                    this.inThrottle = false;\r\n                }, eventsPerSecondLimitMs);\r\n            }\r\n            return false;\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimeClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"REALTIME_PRESENCE_LISTEN_EVENTS\": function() { return /* binding */ REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimePresence; }\n/* harmony export */ });\n/*\r\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\r\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\r\n*/\r\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\r\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\r\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\r\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\r\nclass RealtimePresence {\r\n    /**\r\n     * Initializes the Presence.\r\n     *\r\n     * @param channel - The RealtimeChannel\r\n     * @param opts - The options,\r\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\r\n     */\r\n    constructor(channel, opts) {\r\n        this.channel = channel;\r\n        this.state = {};\r\n        this.pendingDiffs = [];\r\n        this.joinRef = null;\r\n        this.caller = {\r\n            onJoin: () => { },\r\n            onLeave: () => { },\r\n            onSync: () => { },\r\n        };\r\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\r\n            state: 'presence_state',\r\n            diff: 'presence_diff',\r\n        };\r\n        this.channel._on(events.state, {}, (newState) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            this.joinRef = this.channel._joinRef();\r\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\r\n            this.pendingDiffs.forEach((diff) => {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n            });\r\n            this.pendingDiffs = [];\r\n            onSync();\r\n        });\r\n        this.channel._on(events.diff, {}, (diff) => {\r\n            const { onJoin, onLeave, onSync } = this.caller;\r\n            if (this.inPendingSyncState()) {\r\n                this.pendingDiffs.push(diff);\r\n            }\r\n            else {\r\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\r\n                onSync();\r\n            }\r\n        });\r\n        this.onJoin((key, currentPresences, newPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'join',\r\n                key,\r\n                currentPresences,\r\n                newPresences,\r\n            });\r\n        });\r\n        this.onLeave((key, currentPresences, leftPresences) => {\r\n            this.channel._trigger('presence', {\r\n                event: 'leave',\r\n                key,\r\n                currentPresences,\r\n                leftPresences,\r\n            });\r\n        });\r\n        this.onSync(() => {\r\n            this.channel._trigger('presence', { event: 'sync' });\r\n        });\r\n    }\r\n    /**\r\n     * Used to sync the list of presences on the server with the\r\n     * client's state.\r\n     *\r\n     * An optional `onJoin` and `onLeave` callback can be provided to\r\n     * react to changes in the client's local presences across\r\n     * disconnects and reconnects with the server.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncState(currentState, newState, onJoin, onLeave) {\r\n        const state = this.cloneDeep(currentState);\r\n        const transformedState = this.transformState(newState);\r\n        const joins = {};\r\n        const leaves = {};\r\n        this.map(state, (key, presences) => {\r\n            if (!transformedState[key]) {\r\n                leaves[key] = presences;\r\n            }\r\n        });\r\n        this.map(transformedState, (key, newPresences) => {\r\n            const currentPresences = state[key];\r\n            if (currentPresences) {\r\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\r\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\r\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                if (joinedPresences.length > 0) {\r\n                    joins[key] = joinedPresences;\r\n                }\r\n                if (leftPresences.length > 0) {\r\n                    leaves[key] = leftPresences;\r\n                }\r\n            }\r\n            else {\r\n                joins[key] = newPresences;\r\n            }\r\n        });\r\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\r\n    }\r\n    /**\r\n     * Used to sync a diff of presence join and leave events from the\r\n     * server, as they happen.\r\n     *\r\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\r\n     * `onLeave` callbacks to react to a user joining or leaving from a\r\n     * device.\r\n     *\r\n     * @internal\r\n     */\r\n    static syncDiff(state, diff, onJoin, onLeave) {\r\n        const { joins, leaves } = {\r\n            joins: this.transformState(diff.joins),\r\n            leaves: this.transformState(diff.leaves),\r\n        };\r\n        if (!onJoin) {\r\n            onJoin = () => { };\r\n        }\r\n        if (!onLeave) {\r\n            onLeave = () => { };\r\n        }\r\n        this.map(joins, (key, newPresences) => {\r\n            var _a;\r\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\r\n            state[key] = this.cloneDeep(newPresences);\r\n            if (currentPresences.length > 0) {\r\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\r\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\r\n                state[key].unshift(...curPresences);\r\n            }\r\n            onJoin(key, currentPresences, newPresences);\r\n        });\r\n        this.map(leaves, (key, leftPresences) => {\r\n            let currentPresences = state[key];\r\n            if (!currentPresences)\r\n                return;\r\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\r\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\r\n            state[key] = currentPresences;\r\n            onLeave(key, currentPresences, leftPresences);\r\n            if (currentPresences.length === 0)\r\n                delete state[key];\r\n        });\r\n        return state;\r\n    }\r\n    /** @internal */\r\n    static map(obj, func) {\r\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\r\n    }\r\n    /**\r\n     * Remove 'metas' key\r\n     * Change 'phx_ref' to 'presence_ref'\r\n     * Remove 'phx_ref' and 'phx_ref_prev'\r\n     *\r\n     * @example\r\n     * // returns {\r\n     *  abc123: [\r\n     *    { presence_ref: '2', user_id: 1 },\r\n     *    { presence_ref: '3', user_id: 2 }\r\n     *  ]\r\n     * }\r\n     * RealtimePresence.transformState({\r\n     *  abc123: {\r\n     *    metas: [\r\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\r\n     *      { phx_ref: '3', user_id: 2 }\r\n     *    ]\r\n     *  }\r\n     * })\r\n     *\r\n     * @internal\r\n     */\r\n    static transformState(state) {\r\n        state = this.cloneDeep(state);\r\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\r\n            const presences = state[key];\r\n            if ('metas' in presences) {\r\n                newState[key] = presences.metas.map((presence) => {\r\n                    presence['presence_ref'] = presence['phx_ref'];\r\n                    delete presence['phx_ref'];\r\n                    delete presence['phx_ref_prev'];\r\n                    return presence;\r\n                });\r\n            }\r\n            else {\r\n                newState[key] = presences;\r\n            }\r\n            return newState;\r\n        }, {});\r\n    }\r\n    /** @internal */\r\n    static cloneDeep(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n    /** @internal */\r\n    onJoin(callback) {\r\n        this.caller.onJoin = callback;\r\n    }\r\n    /** @internal */\r\n    onLeave(callback) {\r\n        this.caller.onLeave = callback;\r\n    }\r\n    /** @internal */\r\n    onSync(callback) {\r\n        this.caller.onSync = callback;\r\n    }\r\n    /** @internal */\r\n    inPendingSyncState() {\r\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\r\n    }\r\n}\r\n//# sourceMappingURL=RealtimePresence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"REALTIME_LISTEN_TYPES\": function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_LISTEN_TYPES; },\n/* harmony export */   \"REALTIME_POSTGRES_CHANGES_LISTEN_EVENT\": function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   \"REALTIME_PRESENCE_LISTEN_EVENTS\": function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__.REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   \"REALTIME_SUBSCRIBE_STATES\": function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   \"RealtimeChannel\": function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"RealtimeClient\": function() { return /* reexport safe */ _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"RealtimePresence\": function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RealtimeClient */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeChannel */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealtimePresence */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDaUc7QUFDdkQ7QUFDaUc7QUFDekwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz81NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFsdGltZUNsaWVudCBmcm9tICcuL1JlYWx0aW1lQ2xpZW50JztcclxuaW1wb3J0IFJlYWx0aW1lQ2hhbm5lbCwgeyBSRUFMVElNRV9MSVNURU5fVFlQRVMsIFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5ULCBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTLCB9IGZyb20gJy4vUmVhbHRpbWVDaGFubmVsJztcclxuaW1wb3J0IFJlYWx0aW1lUHJlc2VuY2UsIHsgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUywgfSBmcm9tICcuL1JlYWx0aW1lUHJlc2VuY2UnO1xyXG5leHBvcnQgeyBSZWFsdGltZVByZXNlbmNlLCBSZWFsdGltZUNoYW5uZWwsIFJlYWx0aW1lQ2xpZW50LCBSRUFMVElNRV9MSVNURU5fVFlQRVMsIFJFQUxUSU1FX1BPU1RHUkVTX0NIQU5HRVNfTElTVEVOX0VWRU5ULCBSRUFMVElNRV9QUkVTRU5DRV9MSVNURU5fRVZFTlRTLCBSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTLCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CHANNEL_EVENTS\": function() { return /* binding */ CHANNEL_EVENTS; },\n/* harmony export */   \"CHANNEL_STATES\": function() { return /* binding */ CHANNEL_STATES; },\n/* harmony export */   \"CONNECTION_STATE\": function() { return /* binding */ CONNECTION_STATE; },\n/* harmony export */   \"DEFAULT_HEADERS\": function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   \"DEFAULT_TIMEOUT\": function() { return /* binding */ DEFAULT_TIMEOUT; },\n/* harmony export */   \"SOCKET_STATES\": function() { return /* binding */ SOCKET_STATES; },\n/* harmony export */   \"TRANSPORTS\": function() { return /* binding */ TRANSPORTS; },\n/* harmony export */   \"VSN\": function() { return /* binding */ VSN; },\n/* harmony export */   \"WS_CLOSE_NORMAL\": function() { return /* binding */ WS_CLOSE_NORMAL; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/realtime-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\nconst VSN = '1.0.0';\r\nconst DEFAULT_TIMEOUT = 10000;\r\nconst WS_CLOSE_NORMAL = 1000;\r\nvar SOCKET_STATES;\r\n(function (SOCKET_STATES) {\r\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\r\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\r\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\r\n})(SOCKET_STATES || (SOCKET_STATES = {}));\r\nvar CHANNEL_STATES;\r\n(function (CHANNEL_STATES) {\r\n    CHANNEL_STATES[\"closed\"] = \"closed\";\r\n    CHANNEL_STATES[\"errored\"] = \"errored\";\r\n    CHANNEL_STATES[\"joined\"] = \"joined\";\r\n    CHANNEL_STATES[\"joining\"] = \"joining\";\r\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\r\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\r\nvar CHANNEL_EVENTS;\r\n(function (CHANNEL_EVENTS) {\r\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\r\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\r\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\r\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\r\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\r\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\r\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\r\nvar TRANSPORTS;\r\n(function (TRANSPORTS) {\r\n    TRANSPORTS[\"websocket\"] = \"websocket\";\r\n})(TRANSPORTS || (TRANSPORTS = {}));\r\nvar CONNECTION_STATE;\r\n(function (CONNECTION_STATE) {\r\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\r\n    CONNECTION_STATE[\"Open\"] = \"open\";\r\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\r\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\r\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQztBQUM3QiwwQkFBMEIsZ0NBQWdDLDZDQUFPLENBQUM7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDaEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUNsQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDbEM7QUFDUDtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDMUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzP2FjMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHJlYWx0aW1lLWpzLyR7dmVyc2lvbn1gIH07XHJcbmV4cG9ydCBjb25zdCBWU04gPSAnMS4wLjAnO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTAwMDA7XHJcbmV4cG9ydCBjb25zdCBXU19DTE9TRV9OT1JNQUwgPSAxMDAwO1xyXG5leHBvcnQgdmFyIFNPQ0tFVF9TVEFURVM7XHJcbihmdW5jdGlvbiAoU09DS0VUX1NUQVRFUykge1xyXG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY29ubmVjdGluZ1wiXSA9IDBdID0gXCJjb25uZWN0aW5nXCI7XHJcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJvcGVuXCJdID0gMV0gPSBcIm9wZW5cIjtcclxuICAgIFNPQ0tFVF9TVEFURVNbU09DS0VUX1NUQVRFU1tcImNsb3NpbmdcIl0gPSAyXSA9IFwiY2xvc2luZ1wiO1xyXG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY2xvc2VkXCJdID0gM10gPSBcImNsb3NlZFwiO1xyXG59KShTT0NLRVRfU1RBVEVTIHx8IChTT0NLRVRfU1RBVEVTID0ge30pKTtcclxuZXhwb3J0IHZhciBDSEFOTkVMX1NUQVRFUztcclxuKGZ1bmN0aW9uIChDSEFOTkVMX1NUQVRFUykge1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJjbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xyXG4gICAgQ0hBTk5FTF9TVEFURVNbXCJlcnJvcmVkXCJdID0gXCJlcnJvcmVkXCI7XHJcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5lZFwiXSA9IFwiam9pbmVkXCI7XHJcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5pbmdcIl0gPSBcImpvaW5pbmdcIjtcclxuICAgIENIQU5ORUxfU1RBVEVTW1wibGVhdmluZ1wiXSA9IFwibGVhdmluZ1wiO1xyXG59KShDSEFOTkVMX1NUQVRFUyB8fCAoQ0hBTk5FTF9TVEFURVMgPSB7fSkpO1xyXG5leHBvcnQgdmFyIENIQU5ORUxfRVZFTlRTO1xyXG4oZnVuY3Rpb24gKENIQU5ORUxfRVZFTlRTKSB7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImNsb3NlXCJdID0gXCJwaHhfY2xvc2VcIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wiZXJyb3JcIl0gPSBcInBoeF9lcnJvclwiO1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJqb2luXCJdID0gXCJwaHhfam9pblwiO1xyXG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJyZXBseVwiXSA9IFwicGh4X3JlcGx5XCI7XHJcbiAgICBDSEFOTkVMX0VWRU5UU1tcImxlYXZlXCJdID0gXCJwaHhfbGVhdmVcIjtcclxuICAgIENIQU5ORUxfRVZFTlRTW1wiYWNjZXNzX3Rva2VuXCJdID0gXCJhY2Nlc3NfdG9rZW5cIjtcclxufSkoQ0hBTk5FTF9FVkVOVFMgfHwgKENIQU5ORUxfRVZFTlRTID0ge30pKTtcclxuZXhwb3J0IHZhciBUUkFOU1BPUlRTO1xyXG4oZnVuY3Rpb24gKFRSQU5TUE9SVFMpIHtcclxuICAgIFRSQU5TUE9SVFNbXCJ3ZWJzb2NrZXRcIl0gPSBcIndlYnNvY2tldFwiO1xyXG59KShUUkFOU1BPUlRTIHx8IChUUkFOU1BPUlRTID0ge30pKTtcclxuZXhwb3J0IHZhciBDT05ORUNUSU9OX1NUQVRFO1xyXG4oZnVuY3Rpb24gKENPTk5FQ1RJT05fU1RBVEUpIHtcclxuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDb25uZWN0aW5nXCJdID0gXCJjb25uZWN0aW5nXCI7XHJcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiT3BlblwiXSA9IFwib3BlblwiO1xyXG4gICAgQ09OTkVDVElPTl9TVEFURVtcIkNsb3NpbmdcIl0gPSBcImNsb3NpbmdcIjtcclxuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xyXG59KShDT05ORUNUSU9OX1NUQVRFIHx8IChDT05ORUNUSU9OX1NUQVRFID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/push.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/push.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Push; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n\r\nclass Push {\r\n    /**\r\n     * Initializes the Push\r\n     *\r\n     * @param channel The Channel\r\n     * @param event The event, for example `\"phx_join\"`\r\n     * @param payload The payload, for example `{user_id: 123}`\r\n     * @param timeout The push timeout in milliseconds\r\n     */\r\n    constructor(channel, event, payload = {}, timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT) {\r\n        this.channel = channel;\r\n        this.event = event;\r\n        this.payload = payload;\r\n        this.timeout = timeout;\r\n        this.sent = false;\r\n        this.timeoutTimer = undefined;\r\n        this.ref = '';\r\n        this.receivedResp = null;\r\n        this.recHooks = [];\r\n        this.refEvent = null;\r\n        this.rateLimited = false;\r\n    }\r\n    resend(timeout) {\r\n        this.timeout = timeout;\r\n        this._cancelRefEvent();\r\n        this.ref = '';\r\n        this.refEvent = null;\r\n        this.receivedResp = null;\r\n        this.sent = false;\r\n        this.send();\r\n    }\r\n    send() {\r\n        if (this._hasReceived('timeout')) {\r\n            return;\r\n        }\r\n        this.startTimeout();\r\n        this.sent = true;\r\n        const status = this.channel.socket.push({\r\n            topic: this.channel.topic,\r\n            event: this.event,\r\n            payload: this.payload,\r\n            ref: this.ref,\r\n            join_ref: this.channel._joinRef(),\r\n        });\r\n        if (status === 'rate limited') {\r\n            this.rateLimited = true;\r\n        }\r\n    }\r\n    updatePayload(payload) {\r\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\r\n    }\r\n    receive(status, callback) {\r\n        var _a;\r\n        if (this._hasReceived(status)) {\r\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\r\n        }\r\n        this.recHooks.push({ status, callback });\r\n        return this;\r\n    }\r\n    startTimeout() {\r\n        if (this.timeoutTimer) {\r\n            return;\r\n        }\r\n        this.ref = this.channel.socket._makeRef();\r\n        this.refEvent = this.channel._replyEventName(this.ref);\r\n        const callback = (payload) => {\r\n            this._cancelRefEvent();\r\n            this._cancelTimeout();\r\n            this.receivedResp = payload;\r\n            this._matchReceive(payload);\r\n        };\r\n        this.channel._on(this.refEvent, {}, callback);\r\n        this.timeoutTimer = setTimeout(() => {\r\n            this.trigger('timeout', {});\r\n        }, this.timeout);\r\n    }\r\n    trigger(status, response) {\r\n        if (this.refEvent)\r\n            this.channel._trigger(this.refEvent, { status, response });\r\n    }\r\n    destroy() {\r\n        this._cancelRefEvent();\r\n        this._cancelTimeout();\r\n    }\r\n    _cancelRefEvent() {\r\n        if (!this.refEvent) {\r\n            return;\r\n        }\r\n        this.channel._off(this.refEvent, {});\r\n    }\r\n    _cancelTimeout() {\r\n        clearTimeout(this.timeoutTimer);\r\n        this.timeoutTimer = undefined;\r\n    }\r\n    _matchReceive({ status, response, }) {\r\n        this.recHooks\r\n            .filter((h) => h.status === status)\r\n            .forEach((h) => h.callback(response));\r\n    }\r\n    _hasReceived(status) {\r\n        return this.receivedResp && this.receivedResp.status === status;\r\n    }\r\n}\r\n//# sourceMappingURL=push.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9wdXNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQ3BDO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxhQUFhO0FBQzlEO0FBQ0E7QUFDQSw0Q0FBNEMsWUFBWSwyREFBZTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0JBQWtCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxzQ0FBc0M7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxrQkFBa0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9wdXNoLmpzPzQ0OGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVGQVVMVF9USU1FT1VUIH0gZnJvbSAnLi4vbGliL2NvbnN0YW50cyc7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB1c2gge1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgUHVzaFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjaGFubmVsIFRoZSBDaGFubmVsXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgVGhlIGV2ZW50LCBmb3IgZXhhbXBsZSBgXCJwaHhfam9pblwiYFxyXG4gICAgICogQHBhcmFtIHBheWxvYWQgVGhlIHBheWxvYWQsIGZvciBleGFtcGxlIGB7dXNlcl9pZDogMTIzfWBcclxuICAgICAqIEBwYXJhbSB0aW1lb3V0IFRoZSBwdXNoIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKGNoYW5uZWwsIGV2ZW50LCBwYXlsb2FkID0ge30sIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQpIHtcclxuICAgICAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xyXG4gICAgICAgIHRoaXMuZXZlbnQgPSBldmVudDtcclxuICAgICAgICB0aGlzLnBheWxvYWQgPSBwYXlsb2FkO1xyXG4gICAgICAgIHRoaXMudGltZW91dCA9IHRpbWVvdXQ7XHJcbiAgICAgICAgdGhpcy5zZW50ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0VGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5yZWYgPSAnJztcclxuICAgICAgICB0aGlzLnJlY2VpdmVkUmVzcCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZWNIb29rcyA9IFtdO1xyXG4gICAgICAgIHRoaXMucmVmRXZlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucmF0ZUxpbWl0ZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHJlc2VuZCh0aW1lb3V0KSB7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gdGltZW91dDtcclxuICAgICAgICB0aGlzLl9jYW5jZWxSZWZFdmVudCgpO1xyXG4gICAgICAgIHRoaXMucmVmID0gJyc7XHJcbiAgICAgICAgdGhpcy5yZWZFdmVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2VudCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc2VuZCgpO1xyXG4gICAgfVxyXG4gICAgc2VuZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5faGFzUmVjZWl2ZWQoJ3RpbWVvdXQnKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lb3V0KCk7XHJcbiAgICAgICAgdGhpcy5zZW50ID0gdHJ1ZTtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSB0aGlzLmNoYW5uZWwuc29ja2V0LnB1c2goe1xyXG4gICAgICAgICAgICB0b3BpYzogdGhpcy5jaGFubmVsLnRvcGljLFxyXG4gICAgICAgICAgICBldmVudDogdGhpcy5ldmVudCxcclxuICAgICAgICAgICAgcGF5bG9hZDogdGhpcy5wYXlsb2FkLFxyXG4gICAgICAgICAgICByZWY6IHRoaXMucmVmLFxyXG4gICAgICAgICAgICBqb2luX3JlZjogdGhpcy5jaGFubmVsLl9qb2luUmVmKCksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ3JhdGUgbGltaXRlZCcpIHtcclxuICAgICAgICAgICAgdGhpcy5yYXRlTGltaXRlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdXBkYXRlUGF5bG9hZChwYXlsb2FkKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBheWxvYWQpLCBwYXlsb2FkKTtcclxuICAgIH1cclxuICAgIHJlY2VpdmUoc3RhdHVzLCBjYWxsYmFjaykge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICBpZiAodGhpcy5faGFzUmVjZWl2ZWQoc3RhdHVzKSkge1xyXG4gICAgICAgICAgICBjYWxsYmFjaygoX2EgPSB0aGlzLnJlY2VpdmVkUmVzcCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlc3BvbnNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZWNIb29rcy5wdXNoKHsgc3RhdHVzLCBjYWxsYmFjayB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIHN0YXJ0VGltZW91dCgpIHtcclxuICAgICAgICBpZiAodGhpcy50aW1lb3V0VGltZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlZiA9IHRoaXMuY2hhbm5lbC5zb2NrZXQuX21ha2VSZWYoKTtcclxuICAgICAgICB0aGlzLnJlZkV2ZW50ID0gdGhpcy5jaGFubmVsLl9yZXBseUV2ZW50TmFtZSh0aGlzLnJlZik7XHJcbiAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAocGF5bG9hZCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jYW5jZWxSZWZFdmVudCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9jYW5jZWxUaW1lb3V0KCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVjZWl2ZWRSZXNwID0gcGF5bG9hZDtcclxuICAgICAgICAgICAgdGhpcy5fbWF0Y2hSZWNlaXZlKHBheWxvYWQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5jaGFubmVsLl9vbih0aGlzLnJlZkV2ZW50LCB7fSwgY2FsbGJhY2spO1xyXG4gICAgICAgIHRoaXMudGltZW91dFRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcigndGltZW91dCcsIHt9KTtcclxuICAgICAgICB9LCB0aGlzLnRpbWVvdXQpO1xyXG4gICAgfVxyXG4gICAgdHJpZ2dlcihzdGF0dXMsIHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucmVmRXZlbnQpXHJcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbC5fdHJpZ2dlcih0aGlzLnJlZkV2ZW50LCB7IHN0YXR1cywgcmVzcG9uc2UgfSk7XHJcbiAgICB9XHJcbiAgICBkZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuX2NhbmNlbFJlZkV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5fY2FuY2VsVGltZW91dCgpO1xyXG4gICAgfVxyXG4gICAgX2NhbmNlbFJlZkV2ZW50KCkge1xyXG4gICAgICAgIGlmICghdGhpcy5yZWZFdmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2hhbm5lbC5fb2ZmKHRoaXMucmVmRXZlbnQsIHt9KTtcclxuICAgIH1cclxuICAgIF9jYW5jZWxUaW1lb3V0KCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRUaW1lcik7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0VGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbiAgICBfbWF0Y2hSZWNlaXZlKHsgc3RhdHVzLCByZXNwb25zZSwgfSkge1xyXG4gICAgICAgIHRoaXMucmVjSG9va3NcclxuICAgICAgICAgICAgLmZpbHRlcigoaCkgPT4gaC5zdGF0dXMgPT09IHN0YXR1cylcclxuICAgICAgICAgICAgLmZvckVhY2goKGgpID0+IGguY2FsbGJhY2socmVzcG9uc2UpKTtcclxuICAgIH1cclxuICAgIF9oYXNSZWNlaXZlZChzdGF0dXMpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZWNlaXZlZFJlc3AgJiYgdGhpcy5yZWNlaXZlZFJlc3Auc3RhdHVzID09PSBzdGF0dXM7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/push.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Serializer; }\n/* harmony export */ });\n// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\r\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\r\nclass Serializer {\r\n    constructor() {\r\n        this.HEADER_LENGTH = 1;\r\n    }\r\n    decode(rawPayload, callback) {\r\n        if (rawPayload.constructor === ArrayBuffer) {\r\n            return callback(this._binaryDecode(rawPayload));\r\n        }\r\n        if (typeof rawPayload === 'string') {\r\n            return callback(JSON.parse(rawPayload));\r\n        }\r\n        return callback({});\r\n    }\r\n    _binaryDecode(buffer) {\r\n        const view = new DataView(buffer);\r\n        const decoder = new TextDecoder();\r\n        return this._decodeBroadcast(buffer, view, decoder);\r\n    }\r\n    _decodeBroadcast(buffer, view, decoder) {\r\n        const topicSize = view.getUint8(1);\r\n        const eventSize = view.getUint8(2);\r\n        let offset = this.HEADER_LENGTH + 2;\r\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\r\n        offset = offset + topicSize;\r\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\r\n        offset = offset + eventSize;\r\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\r\n        return { ref: null, topic: topic, event: event, payload: data };\r\n    }\r\n}\r\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9zZXJpYWxpemVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanM/ODFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgZHJhd3MgaGVhdmlseSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvY29tbWl0L2NmMDk4ZTljZjdhNDRlZTY0NzlkMzFkOTExYTk3ZDNjNzQzMGM2ZmVcclxuLy8gTGljZW5zZTogaHR0cHM6Ly9naXRodWIuY29tL3Bob2VuaXhmcmFtZXdvcmsvcGhvZW5peC9ibG9iL21hc3Rlci9MSUNFTlNFLm1kXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlcmlhbGl6ZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5IRUFERVJfTEVOR1RIID0gMTtcclxuICAgIH1cclxuICAgIGRlY29kZShyYXdQYXlsb2FkLCBjYWxsYmFjaykge1xyXG4gICAgICAgIGlmIChyYXdQYXlsb2FkLmNvbnN0cnVjdG9yID09PSBBcnJheUJ1ZmZlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sodGhpcy5fYmluYXJ5RGVjb2RlKHJhd1BheWxvYWQpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiByYXdQYXlsb2FkID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soSlNPTi5wYXJzZShyYXdQYXlsb2FkKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayh7fSk7XHJcbiAgICB9XHJcbiAgICBfYmluYXJ5RGVjb2RlKGJ1ZmZlcikge1xyXG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcclxuICAgICAgICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpO1xyXG4gICAgfVxyXG4gICAgX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpIHtcclxuICAgICAgICBjb25zdCB0b3BpY1NpemUgPSB2aWV3LmdldFVpbnQ4KDEpO1xyXG4gICAgICAgIGNvbnN0IGV2ZW50U2l6ZSA9IHZpZXcuZ2V0VWludDgoMik7XHJcbiAgICAgICAgbGV0IG9mZnNldCA9IHRoaXMuSEVBREVSX0xFTkdUSCArIDI7XHJcbiAgICAgICAgY29uc3QgdG9waWMgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyB0b3BpY1NpemUpKTtcclxuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyB0b3BpY1NpemU7XHJcbiAgICAgICAgY29uc3QgZXZlbnQgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBldmVudFNpemUpKTtcclxuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyBldmVudFNpemU7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGVjb2Rlci5kZWNvZGUoYnVmZmVyLnNsaWNlKG9mZnNldCwgYnVmZmVyLmJ5dGVMZW5ndGgpKSk7XHJcbiAgICAgICAgcmV0dXJuIHsgcmVmOiBudWxsLCB0b3BpYzogdG9waWMsIGV2ZW50OiBldmVudCwgcGF5bG9hZDogZGF0YSB9O1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/timer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/timer.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Timer; }\n/* harmony export */ });\n/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\r\nclass Timer {\r\n    constructor(callback, timerCalc) {\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n        this.timer = undefined;\r\n        this.tries = 0;\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n    }\r\n    reset() {\r\n        this.tries = 0;\r\n        clearTimeout(this.timer);\r\n    }\r\n    // Cancels any previous scheduleTimeout and schedules callback\r\n    scheduleTimeout() {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            this.tries = this.tries + 1;\r\n            this.callback();\r\n        }, this.timerCalc(this.tries + 1));\r\n    }\r\n}\r\n//# sourceMappingURL=timer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9saWIvdGltZXIuanM/MTE1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlcyBhIHRpbWVyIHRoYXQgYWNjZXB0cyBhIGB0aW1lckNhbGNgIGZ1bmN0aW9uIHRvIHBlcmZvcm0gY2FsY3VsYXRlZCB0aW1lb3V0IHJldHJpZXMsIHN1Y2ggYXMgZXhwb25lbnRpYWwgYmFja29mZi5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogICAgbGV0IHJlY29ubmVjdFRpbWVyID0gbmV3IFRpbWVyKCgpID0+IHRoaXMuY29ubmVjdCgpLCBmdW5jdGlvbih0cmllcyl7XHJcbiAqICAgICAgcmV0dXJuIFsxMDAwLCA1MDAwLCAxMDAwMF1bdHJpZXMgLSAxXSB8fCAxMDAwMFxyXG4gKiAgICB9KVxyXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXHJcbiAqICAgIHJlY29ubmVjdFRpbWVyLnNjaGVkdWxlVGltZW91dCgpIC8vIGZpcmVzIGFmdGVyIDUwMDBcclxuICogICAgcmVjb25uZWN0VGltZXIucmVzZXQoKVxyXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaW1lciB7XHJcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFjaywgdGltZXJDYWxjKSB7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xyXG4gICAgICAgIHRoaXMudGltZXIgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xyXG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xyXG4gICAgfVxyXG4gICAgcmVzZXQoKSB7XHJcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xyXG4gICAgfVxyXG4gICAgLy8gQ2FuY2VscyBhbnkgcHJldmlvdXMgc2NoZWR1bGVUaW1lb3V0IGFuZCBzY2hlZHVsZXMgY2FsbGJhY2tcclxuICAgIHNjaGVkdWxlVGltZW91dCgpIHtcclxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XHJcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnRyaWVzID0gdGhpcy50cmllcyArIDE7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soKTtcclxuICAgICAgICB9LCB0aGlzLnRpbWVyQ2FsYyh0aGlzLnRyaWVzICsgMSkpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PostgresTypes\": function() { return /* binding */ PostgresTypes; },\n/* harmony export */   \"convertCell\": function() { return /* binding */ convertCell; },\n/* harmony export */   \"convertChangeData\": function() { return /* binding */ convertChangeData; },\n/* harmony export */   \"convertColumn\": function() { return /* binding */ convertColumn; },\n/* harmony export */   \"toArray\": function() { return /* binding */ toArray; },\n/* harmony export */   \"toBoolean\": function() { return /* binding */ toBoolean; },\n/* harmony export */   \"toJson\": function() { return /* binding */ toJson; },\n/* harmony export */   \"toNumber\": function() { return /* binding */ toNumber; },\n/* harmony export */   \"toTimestampString\": function() { return /* binding */ toTimestampString; }\n/* harmony export */ });\n/**\r\n * Helpers to convert the change Payload into native JS types.\r\n */\r\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\r\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\r\nvar PostgresTypes;\r\n(function (PostgresTypes) {\r\n    PostgresTypes[\"abstime\"] = \"abstime\";\r\n    PostgresTypes[\"bool\"] = \"bool\";\r\n    PostgresTypes[\"date\"] = \"date\";\r\n    PostgresTypes[\"daterange\"] = \"daterange\";\r\n    PostgresTypes[\"float4\"] = \"float4\";\r\n    PostgresTypes[\"float8\"] = \"float8\";\r\n    PostgresTypes[\"int2\"] = \"int2\";\r\n    PostgresTypes[\"int4\"] = \"int4\";\r\n    PostgresTypes[\"int4range\"] = \"int4range\";\r\n    PostgresTypes[\"int8\"] = \"int8\";\r\n    PostgresTypes[\"int8range\"] = \"int8range\";\r\n    PostgresTypes[\"json\"] = \"json\";\r\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\r\n    PostgresTypes[\"money\"] = \"money\";\r\n    PostgresTypes[\"numeric\"] = \"numeric\";\r\n    PostgresTypes[\"oid\"] = \"oid\";\r\n    PostgresTypes[\"reltime\"] = \"reltime\";\r\n    PostgresTypes[\"text\"] = \"text\";\r\n    PostgresTypes[\"time\"] = \"time\";\r\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\r\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\r\n    PostgresTypes[\"timetz\"] = \"timetz\";\r\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\r\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\r\n})(PostgresTypes || (PostgresTypes = {}));\r\n/**\r\n * Takes an array of columns and an object of string values then converts each string value\r\n * to its mapped type.\r\n *\r\n * @param {{name: String, type: String}[]} columns\r\n * @param {Object} record\r\n * @param {Object} options The map of various options that can be applied to the mapper\r\n * @param {Array} options.skipTypes The array of types that should not be converted\r\n *\r\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\r\n * //=>{ first_name: 'Paul', age: 33 }\r\n */\r\nconst convertChangeData = (columns, record, options = {}) => {\r\n    var _a;\r\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\r\n    return Object.keys(record).reduce((acc, rec_key) => {\r\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\r\n        return acc;\r\n    }, {});\r\n};\r\n/**\r\n * Converts the value of an individual column.\r\n *\r\n * @param {String} columnName The column that you want to convert\r\n * @param {{name: String, type: String}[]} columns All of the columns\r\n * @param {Object} record The map of string values\r\n * @param {Array} skipTypes An array of types that should not be converted\r\n * @return {object} Useless information\r\n *\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\r\n * //=> 33\r\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\r\n * //=> \"33\"\r\n */\r\nconst convertColumn = (columnName, columns, record, skipTypes) => {\r\n    const column = columns.find((x) => x.name === columnName);\r\n    const colType = column === null || column === void 0 ? void 0 : column.type;\r\n    const value = record[columnName];\r\n    if (colType && !skipTypes.includes(colType)) {\r\n        return convertCell(colType, value);\r\n    }\r\n    return noop(value);\r\n};\r\n/**\r\n * If the value of the cell is `null`, returns null.\r\n * Otherwise converts the string value to the correct type.\r\n * @param {String} type A postgres column type\r\n * @param {String} value The cell value\r\n *\r\n * @example convertCell('bool', 't')\r\n * //=> true\r\n * @example convertCell('int8', '10')\r\n * //=> 10\r\n * @example convertCell('_int4', '{1,2,3,4}')\r\n * //=> [1,2,3,4]\r\n */\r\nconst convertCell = (type, value) => {\r\n    // if data type is an array\r\n    if (type.charAt(0) === '_') {\r\n        const dataType = type.slice(1, type.length);\r\n        return toArray(value, dataType);\r\n    }\r\n    // If not null, convert to correct type.\r\n    switch (type) {\r\n        case PostgresTypes.bool:\r\n            return toBoolean(value);\r\n        case PostgresTypes.float4:\r\n        case PostgresTypes.float8:\r\n        case PostgresTypes.int2:\r\n        case PostgresTypes.int4:\r\n        case PostgresTypes.int8:\r\n        case PostgresTypes.numeric:\r\n        case PostgresTypes.oid:\r\n            return toNumber(value);\r\n        case PostgresTypes.json:\r\n        case PostgresTypes.jsonb:\r\n            return toJson(value);\r\n        case PostgresTypes.timestamp:\r\n            return toTimestampString(value); // Format to be consistent with PostgREST\r\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.daterange:\r\n        case PostgresTypes.int4range:\r\n        case PostgresTypes.int8range:\r\n        case PostgresTypes.money:\r\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.text:\r\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\r\n        case PostgresTypes.tsrange:\r\n        case PostgresTypes.tstzrange:\r\n            return noop(value);\r\n        default:\r\n            // Return the value for remaining types\r\n            return noop(value);\r\n    }\r\n};\r\nconst noop = (value) => {\r\n    return value;\r\n};\r\nconst toBoolean = (value) => {\r\n    switch (value) {\r\n        case 't':\r\n            return true;\r\n        case 'f':\r\n            return false;\r\n        default:\r\n            return value;\r\n    }\r\n};\r\nconst toNumber = (value) => {\r\n    if (typeof value === 'string') {\r\n        const parsedValue = parseFloat(value);\r\n        if (!Number.isNaN(parsedValue)) {\r\n            return parsedValue;\r\n        }\r\n    }\r\n    return value;\r\n};\r\nconst toJson = (value) => {\r\n    if (typeof value === 'string') {\r\n        try {\r\n            return JSON.parse(value);\r\n        }\r\n        catch (error) {\r\n            console.log(`JSON parse error: ${error}`);\r\n            return value;\r\n        }\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Converts a Postgres Array into a native JS array\r\n *\r\n * @example toArray('{}', 'int4')\r\n * //=> []\r\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\r\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\r\n * @example toArray([1,2,3,4], 'int4')\r\n * //=> [1,2,3,4]\r\n */\r\nconst toArray = (value, type) => {\r\n    if (typeof value !== 'string') {\r\n        return value;\r\n    }\r\n    const lastIdx = value.length - 1;\r\n    const closeBrace = value[lastIdx];\r\n    const openBrace = value[0];\r\n    // Confirm value is a Postgres array by checking curly brackets\r\n    if (openBrace === '{' && closeBrace === '}') {\r\n        let arr;\r\n        const valTrim = value.slice(1, lastIdx);\r\n        // TODO: find a better solution to separate Postgres array data\r\n        try {\r\n            arr = JSON.parse('[' + valTrim + ']');\r\n        }\r\n        catch (_) {\r\n            // WARNING: splitting on comma does not cover all edge cases\r\n            arr = valTrim ? valTrim.split(',') : [];\r\n        }\r\n        return arr.map((val) => convertCell(type, val));\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\r\n * See https://github.com/supabase/supabase/issues/18\r\n *\r\n * @example toTimestampString('2019-09-10 00:00:00')\r\n * //=> '2019-09-10T00:00:00'\r\n */\r\nconst toTimestampString = (value) => {\r\n    if (typeof value === 'string') {\r\n        return value.replace(' ', 'T');\r\n    }\r\n    return value;\r\n};\r\n//# sourceMappingURL=transformers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '2.7.3';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/MWZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjcuMyc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/StorageClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/StorageClient.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StorageClient\": function() { return /* binding */ StorageClient; }\n/* harmony export */ });\n/* harmony import */ var _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages/StorageFileApi */ \"./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\");\n/* harmony import */ var _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages/StorageBucketApi */ \"./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\");\n\r\n\r\nclass StorageClient extends _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(url, headers = {}, fetch) {\r\n        super(url, headers, fetch);\r\n    }\r\n    /**\r\n     * Perform file operation in a bucket.\r\n     *\r\n     * @param id The bucket id to operate on.\r\n     */\r\n    from(id) {\r\n        return new _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.url, this.headers, id, this.fetch);\r\n    }\r\n}\r\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvU3RvcmFnZUNsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDSTtBQUNwRCw0QkFBNEIsa0VBQWdCO0FBQ25ELGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdFQUFjO0FBQ2pDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvU3RvcmFnZUNsaWVudC5qcz9hOGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdG9yYWdlRmlsZUFwaSBmcm9tICcuL3BhY2thZ2VzL1N0b3JhZ2VGaWxlQXBpJztcclxuaW1wb3J0IFN0b3JhZ2VCdWNrZXRBcGkgZnJvbSAnLi9wYWNrYWdlcy9TdG9yYWdlQnVja2V0QXBpJztcclxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VDbGllbnQgZXh0ZW5kcyBTdG9yYWdlQnVja2V0QXBpIHtcclxuICAgIGNvbnN0cnVjdG9yKHVybCwgaGVhZGVycyA9IHt9LCBmZXRjaCkge1xyXG4gICAgICAgIHN1cGVyKHVybCwgaGVhZGVycywgZmV0Y2gpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtIGZpbGUgb3BlcmF0aW9uIGluIGEgYnVja2V0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBpZCBUaGUgYnVja2V0IGlkIHRvIG9wZXJhdGUgb24uXHJcbiAgICAgKi9cclxuICAgIGZyb20oaWQpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFN0b3JhZ2VGaWxlQXBpKHRoaXMudXJsLCB0aGlzLmhlYWRlcnMsIGlkLCB0aGlzLmZldGNoKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yYWdlQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/StorageClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StorageClient\": function() { return /* reexport safe */ _StorageClient__WEBPACK_IMPORTED_MODULE_0__.StorageClient; }\n/* harmony export */ });\n/* harmony import */ var _StorageClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorageClient */ \"./node_modules/@supabase/storage-js/dist/module/StorageClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/types */ \"./node_modules/@supabase/storage-js/dist/module/lib/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_types__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"StorageClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_types__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_errors__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"StorageClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_errors__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpRTtBQUNyQztBQUNDO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz8zMjQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFN0b3JhZ2VDbGllbnQgYXMgU3RvcmFnZUNsaWVudCB9IGZyb20gJy4vU3RvcmFnZUNsaWVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL3R5cGVzJztcclxuZXhwb3J0ICogZnJvbSAnLi9saWIvZXJyb3JzJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/constants.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_HEADERS\": function() { return /* binding */ DEFAULT_HEADERS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/storage-js/dist/module/lib/version.js\");\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QiwwQkFBMEIsK0JBQStCLDZDQUFPLENBQUM7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanM/Nzk5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgc3RvcmFnZS1qcy8ke3ZlcnNpb259YCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/errors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StorageApiError\": function() { return /* binding */ StorageApiError; },\n/* harmony export */   \"StorageError\": function() { return /* binding */ StorageError; },\n/* harmony export */   \"StorageUnknownError\": function() { return /* binding */ StorageUnknownError; },\n/* harmony export */   \"isStorageError\": function() { return /* binding */ isStorageError; }\n/* harmony export */ });\nclass StorageError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.__isStorageError = true;\r\n        this.name = 'StorageError';\r\n    }\r\n}\r\nfunction isStorageError(error) {\r\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\r\n}\r\nclass StorageApiError extends StorageError {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.name = 'StorageApiError';\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            status: this.status,\r\n        };\r\n    }\r\n}\r\nclass StorageUnknownError extends StorageError {\r\n    constructor(message, originalError) {\r\n        super(message);\r\n        this.name = 'StorageUnknownError';\r\n        this.originalError = originalError;\r\n    }\r\n}\r\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcz80YTlhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdG9yYWdlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XHJcbiAgICAgICAgdGhpcy5fX2lzU3RvcmFnZUVycm9yID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSAnU3RvcmFnZUVycm9yJztcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdG9yYWdlRXJyb3IoZXJyb3IpIHtcclxuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmIGVycm9yICE9PSBudWxsICYmICdfX2lzU3RvcmFnZUVycm9yJyBpbiBlcnJvcjtcclxufVxyXG5leHBvcnQgY2xhc3MgU3RvcmFnZUFwaUVycm9yIGV4dGVuZHMgU3RvcmFnZUVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cykge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlQXBpRXJyb3InO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgfVxyXG4gICAgdG9KU09OKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVbmtub3duRXJyb3IgZXh0ZW5kcyBTdG9yYWdlRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlVW5rbm93bkVycm9yJztcclxuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/fetch.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/fetch.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"get\": function() { return /* binding */ get; },\n/* harmony export */   \"post\": function() { return /* binding */ post; },\n/* harmony export */   \"put\": function() { return /* binding */ put; },\n/* harmony export */   \"remove\": function() { return /* binding */ remove; }\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\r\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const Res = yield (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveResponse)();\r\n    if (error instanceof Res) {\r\n        error\r\n            .json()\r\n            .then((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageApiError(_getErrorMessage(err), error.status || 500));\r\n        })\r\n            .catch((err) => {\r\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(err), err));\r\n        });\r\n    }\r\n    else {\r\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(error), error));\r\n    }\r\n});\r\nconst _getRequestParams = (method, options, parameters, body) => {\r\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\r\n    if (method === 'GET') {\r\n        return params;\r\n    }\r\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\r\n    params.body = JSON.stringify(body);\r\n    return Object.assign(Object.assign({}, params), parameters);\r\n};\r\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, reject) => {\r\n            fetcher(url, _getRequestParams(method, options, parameters, body))\r\n                .then((result) => {\r\n                if (!result.ok)\r\n                    throw result;\r\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\r\n                    return result;\r\n                return result.json();\r\n            })\r\n                .then((data) => resolve(data))\r\n                .catch((error) => handleError(error, reject));\r\n        });\r\n    });\r\n}\r\nfunction get(fetcher, url, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\r\n    });\r\n}\r\nfunction post(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\r\n    });\r\n}\r\nfunction put(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\r\n    });\r\n}\r\nfunction remove(fetcher, url, body, options, parameters) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\r\n    });\r\n}\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNnRTtBQUNwQjtBQUM1QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9EQUFlO0FBQ3RDLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qix3REFBbUI7QUFDMUMsU0FBUztBQUNUO0FBQ0E7QUFDQSxtQkFBbUIsd0RBQW1CO0FBQ3RDO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvQ0FBb0M7QUFDekU7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanM/YzA0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmltcG9ydCB7IFN0b3JhZ2VBcGlFcnJvciwgU3RvcmFnZVVua25vd25FcnJvciB9IGZyb20gJy4vZXJyb3JzJztcclxuaW1wb3J0IHsgcmVzb2x2ZVJlc3BvbnNlIH0gZnJvbSAnLi9oZWxwZXJzJztcclxuY29uc3QgX2dldEVycm9yTWVzc2FnZSA9IChlcnIpID0+IGVyci5tc2cgfHwgZXJyLm1lc3NhZ2UgfHwgZXJyLmVycm9yX2Rlc2NyaXB0aW9uIHx8IGVyci5lcnJvciB8fCBKU09OLnN0cmluZ2lmeShlcnIpO1xyXG5jb25zdCBoYW5kbGVFcnJvciA9IChlcnJvciwgcmVqZWN0KSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgIGNvbnN0IFJlcyA9IHlpZWxkIHJlc29sdmVSZXNwb25zZSgpO1xyXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgUmVzKSB7XHJcbiAgICAgICAgZXJyb3JcclxuICAgICAgICAgICAgLmpzb24oKVxyXG4gICAgICAgICAgICAudGhlbigoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZUFwaUVycm9yKF9nZXRFcnJvck1lc3NhZ2UoZXJyKSwgZXJyb3Iuc3RhdHVzIHx8IDUwMCkpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIGVycikpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmVqZWN0KG5ldyBTdG9yYWdlVW5rbm93bkVycm9yKF9nZXRFcnJvck1lc3NhZ2UoZXJyb3IpLCBlcnJvcikpO1xyXG4gICAgfVxyXG59KTtcclxuY29uc3QgX2dldFJlcXVlc3RQYXJhbXMgPSAobWV0aG9kLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KSA9PiB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7IG1ldGhvZCwgaGVhZGVyczogKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5oZWFkZXJzKSB8fCB7fSB9O1xyXG4gICAgaWYgKG1ldGhvZCA9PT0gJ0dFVCcpIHtcclxuICAgICAgICByZXR1cm4gcGFyYW1zO1xyXG4gICAgfVxyXG4gICAgcGFyYW1zLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycyk7XHJcbiAgICBwYXJhbXMuYm9keSA9IEpTT04uc3RyaW5naWZ5KGJvZHkpO1xyXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgcGFyYW1ldGVycyk7XHJcbn07XHJcbmZ1bmN0aW9uIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsIG1ldGhvZCwgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGZldGNoZXIodXJsLCBfZ2V0UmVxdWVzdFBhcmFtcyhtZXRob2QsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQub2spXHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub1Jlc29sdmVKc29uKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiByZXNvbHZlKGRhdGEpKVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gaGFuZGxlRXJyb3IoZXJyb3IsIHJlamVjdCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGdldChmZXRjaGVyLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdHRVQnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHBvc3QoZmV0Y2hlciwgdXJsLCBib2R5LCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiBfaGFuZGxlUmVxdWVzdChmZXRjaGVyLCAnUE9TVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcHV0KGZldGNoZXIsIHVybCwgYm9keSwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ1BVVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKGZldGNoZXIsIHVybCwgYm9keSwgb3B0aW9ucywgcGFyYW1ldGVycykge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0RFTEVURScsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XHJcbiAgICB9KTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/helpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/helpers.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resolveFetch\": function() { return /* binding */ resolveFetch; },\n/* harmony export */   \"resolveResponse\": function() { return /* binding */ resolveResponse; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\", 23))).fetch(...args); });\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (typeof Response === 'undefined') {\r\n        return (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\", 23))).Response;\r\n    }\r\n    return Response;\r\n});\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usb0JBQW9CLG9LQUFxQixtQkFBbUI7QUFDM0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQixvS0FBcUI7QUFDM0M7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanM/YTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiB5aWVsZCAoeWllbGQgaW1wb3J0KCdjcm9zcy1mZXRjaCcpKS5mZXRjaCguLi5hcmdzKTsgfSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcclxuICAgIH1cclxuICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xyXG59O1xyXG5leHBvcnQgY29uc3QgcmVzb2x2ZVJlc3BvbnNlID0gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICBpZiAodHlwZW9mIFJlc3BvbnNlID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIHJldHVybiAoeWllbGQgaW1wb3J0KCdjcm9zcy1mZXRjaCcpKS5SZXNwb25zZTtcclxuICAgIH1cclxuICAgIHJldHVybiBSZXNwb25zZTtcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/types.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\r\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanM/MGExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/version.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\n// generated by genversion\r\nconst version = '2.5.1';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/ZmEzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZW5lcmF0ZWQgYnkgZ2VudmVyc2lvblxyXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjUuMSc7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageBucketApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"./node_modules/@supabase/storage-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nclass StorageBucketApi {\r\n    constructor(url, headers = {}, fetch) {\r\n        this.url = url;\r\n        this.headers = Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS), headers);\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Retrieves the details of all Storage buckets within an existing project.\r\n     */\r\n    listBuckets() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Retrieves the details of an existing Storage bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to retrieve.\r\n     */\r\n    getBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a new Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are creating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     * @returns newly created bucket id\r\n     */\r\n    createBucket(id, options = {\r\n        public: false,\r\n    }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Updates a Storage bucket\r\n     *\r\n     * @param id A unique identifier for the bucket you are updating.\r\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\r\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\r\n     * The global file size limit takes precedence over this value.\r\n     * The default value is null, which doesn't set a per bucket file size limit.\r\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\r\n     * The default value is null, which allows files with all mime types to be uploaded.\r\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\r\n     */\r\n    updateBucket(id, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.put)(this.fetch, `${this.url}/bucket/${id}`, {\r\n                    id,\r\n                    name: id,\r\n                    public: options.public,\r\n                    file_size_limit: options.fileSizeLimit,\r\n                    allowed_mime_types: options.allowedMimeTypes,\r\n                }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all objects inside a single bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to empty.\r\n     */\r\n    emptyBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\r\n     * You must first `empty()` the bucket.\r\n     *\r\n     * @param id The unique identifier of the bucket you would like to delete.\r\n     */\r\n    deleteBucket(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=StorageBucketApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageFileApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\nconst DEFAULT_SEARCH_OPTIONS = {\r\n    limit: 100,\r\n    offset: 0,\r\n    sortBy: {\r\n        column: 'name',\r\n        order: 'asc',\r\n    },\r\n};\r\nconst DEFAULT_FILE_OPTIONS = {\r\n    cacheControl: '3600',\r\n    contentType: 'text/plain;charset=UTF-8',\r\n    upsert: false,\r\n};\r\nclass StorageFileApi {\r\n    constructor(url, headers = {}, bucketId, fetch) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n        this.bucketId = bucketId;\r\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveFetch)(fetch);\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param method HTTP method.\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let body;\r\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\r\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                }\r\n                const cleanPath = this._removeEmptyFolders(path);\r\n                const _path = this._getFinalPath(cleanPath);\r\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = yield res.json();\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Uploads a file to an existing bucket.\r\n     *\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    upload(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Upload a file with a token generated from `createSignedUploadUrl`.\r\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\r\n     * @param token The token generated from `createSignedUploadUrl`\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const cleanPath = this._removeEmptyFolders(path);\r\n            const _path = this._getFinalPath(cleanPath);\r\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\r\n            url.searchParams.set('token', token);\r\n            try {\r\n                let body;\r\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\r\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\r\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\r\n                    body = new FormData();\r\n                    body.append('cacheControl', options.cacheControl);\r\n                    body.append('', fileBody);\r\n                }\r\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\r\n                    body = fileBody;\r\n                    body.append('cacheControl', options.cacheControl);\r\n                }\r\n                else {\r\n                    body = fileBody;\r\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\r\n                    headers['content-type'] = options.contentType;\r\n                }\r\n                const res = yield this.fetch(url.toString(), {\r\n                    method: 'PUT',\r\n                    body: body,\r\n                    headers,\r\n                });\r\n                if (res.ok) {\r\n                    return {\r\n                        data: { path: cleanPath },\r\n                        error: null,\r\n                    };\r\n                }\r\n                else {\r\n                    const error = yield res.json();\r\n                    return { data: null, error };\r\n                }\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed upload URL.\r\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\r\n     * They are valid for one minute.\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     */\r\n    createSignedUploadUrl(path) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers: this.headers });\r\n                const url = new URL(this.url + data.url);\r\n                const token = url.searchParams.get('token');\r\n                if (!token) {\r\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_1__.StorageError('No token returned by API');\r\n                }\r\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Replaces an existing file at the specified path with a new one.\r\n     *\r\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\r\n     * @param fileBody The body of the file to be stored in the bucket.\r\n     */\r\n    update(path, fileBody, fileOptions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\r\n        });\r\n    }\r\n    /**\r\n     * Moves an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\r\n     */\r\n    move(fromPath, toPath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Copies an existing file to a new path in the same bucket.\r\n     *\r\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\r\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\r\n     */\r\n    copy(fromPath, toPath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\r\n                return { data: { path: data.Key }, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param path The file path, including the current file name. For example `folder/image.png`.\r\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    createSignedUrl(path, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let _path = this._getFinalPath(path);\r\n                let data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\r\n                data = { signedUrl };\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\r\n     *\r\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\r\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\r\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     */\r\n    createSignedUrls(paths, expiresIn, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\r\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n                    ? `&download=${options.download === true ? '' : options.download}`\r\n                    : '';\r\n                return {\r\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\r\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\r\n                            : null }))),\r\n                    error: null,\r\n                };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\r\n     *\r\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    download(path, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\r\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\r\n            try {\r\n                const _path = this._getFinalPath(path);\r\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\r\n                    headers: this.headers,\r\n                    noResolveJson: true,\r\n                });\r\n                const data = yield res.blob();\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\r\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\r\n     *\r\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\r\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\r\n     * @param options.transform Transform the asset before serving it to the client.\r\n     */\r\n    getPublicUrl(path, options) {\r\n        const _path = this._getFinalPath(path);\r\n        const _queryString = [];\r\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\r\n            ? `download=${options.download === true ? '' : options.download}`\r\n            : '';\r\n        if (downloadQueryParam !== '') {\r\n            _queryString.push(downloadQueryParam);\r\n        }\r\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\r\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\r\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\r\n        if (transformationQuery !== '') {\r\n            _queryString.push(transformationQuery);\r\n        }\r\n        let queryString = _queryString.join('&');\r\n        if (queryString !== '') {\r\n            queryString = `?${queryString}`;\r\n        }\r\n        return {\r\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\r\n        };\r\n    }\r\n    /**\r\n     * Deletes files within the same bucket\r\n     *\r\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\r\n     */\r\n    remove(paths) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Get file metadata\r\n     * @param id the file id to retrieve metadata\r\n     */\r\n    // async getMetadata(\r\n    //   id: string\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Update file metadata\r\n     * @param id the file id to update metadata\r\n     * @param meta the new file metadata\r\n     */\r\n    // async updateMetadata(\r\n    //   id: string,\r\n    //   meta: Metadata\r\n    // ): Promise<\r\n    //   | {\r\n    //       data: Metadata\r\n    //       error: null\r\n    //     }\r\n    //   | {\r\n    //       data: null\r\n    //       error: StorageError\r\n    //     }\r\n    // > {\r\n    //   try {\r\n    //     const data = await post(\r\n    //       this.fetch,\r\n    //       `${this.url}/metadata/${id}`,\r\n    //       { ...meta },\r\n    //       { headers: this.headers }\r\n    //     )\r\n    //     return { data, error: null }\r\n    //   } catch (error) {\r\n    //     if (isStorageError(error)) {\r\n    //       return { data: null, error }\r\n    //     }\r\n    //     throw error\r\n    //   }\r\n    // }\r\n    /**\r\n     * Lists all the files within a bucket.\r\n     * @param path The folder path.\r\n     */\r\n    list(path, options, parameters) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\r\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\r\n                return { data, error: null };\r\n            }\r\n            catch (error) {\r\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\r\n                    return { data: null, error };\r\n                }\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    _getFinalPath(path) {\r\n        return `${this.bucketId}/${path}`;\r\n    }\r\n    _removeEmptyFolders(path) {\r\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\r\n    }\r\n    transformOptsToQueryString(transform) {\r\n        const params = [];\r\n        if (transform.width) {\r\n            params.push(`width=${transform.width}`);\r\n        }\r\n        if (transform.height) {\r\n            params.push(`height=${transform.height}`);\r\n        }\r\n        if (transform.resize) {\r\n            params.push(`resize=${transform.resize}`);\r\n        }\r\n        if (transform.format) {\r\n            params.push(`format=${transform.format}`);\r\n        }\r\n        if (transform.quality) {\r\n            params.push(`quality=${transform.quality}`);\r\n        }\r\n        return params.join('&');\r\n    }\r\n}\r\n//# sourceMappingURL=StorageFileApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SupabaseClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supabase/functions-js */ \"./node_modules/@supabase/functions-js/dist/module/index.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/postgrest-js */ \"./node_modules/@supabase/postgrest-js/dist/module/index.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/realtime-js */ \"./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony import */ var _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @supabase/storage-js */ \"./node_modules/@supabase/storage-js/dist/module/index.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/SupabaseAuthClient */ \"./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEFAULT_GLOBAL_OPTIONS = {\r\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_HEADERS,\r\n};\r\nconst DEFAULT_DB_OPTIONS = {\r\n    schema: 'public',\r\n};\r\nconst DEFAULT_AUTH_OPTIONS = {\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true,\r\n    flowType: 'implicit',\r\n};\r\nconst DEFAULT_REALTIME_OPTIONS = {};\r\n/**\r\n * Supabase Client.\r\n *\r\n * An isomorphic Javascript client for interacting with Postgres.\r\n */\r\nclass SupabaseClient {\r\n    /**\r\n     * Create a new client for use in the browser.\r\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\r\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\r\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\r\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\r\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\r\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\r\n     * @param options.realtime Options passed along to realtime-js constructor.\r\n     * @param options.global.fetch A custom fetch implementation.\r\n     * @param options.global.headers Any additional headers to send with each network request.\r\n     */\r\n    constructor(supabaseUrl, supabaseKey, options) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        this.supabaseUrl = supabaseUrl;\r\n        this.supabaseKey = supabaseKey;\r\n        if (!supabaseUrl)\r\n            throw new Error('supabaseUrl is required.');\r\n        if (!supabaseKey)\r\n            throw new Error('supabaseKey is required.');\r\n        const _supabaseUrl = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.stripTrailingSlash)(supabaseUrl);\r\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\r\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\r\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\r\n        this.functionsUrl = `${_supabaseUrl}/functions/v1`;\r\n        // default storage key uses the supabase project ref as a namespace\r\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\r\n        const DEFAULTS = {\r\n            db: DEFAULT_DB_OPTIONS,\r\n            realtime: DEFAULT_REALTIME_OPTIONS,\r\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\r\n            global: DEFAULT_GLOBAL_OPTIONS,\r\n        };\r\n        const settings = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\r\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\r\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\r\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\r\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\r\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\r\n        this.rest = new _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__.PostgrestClient(`${_supabaseUrl}/rest/v1`, {\r\n            headers: this.headers,\r\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\r\n            fetch: this.fetch,\r\n        });\r\n        this._listenForAuthEvents();\r\n    }\r\n    /**\r\n     * Supabase Functions allows you to deploy and invoke edge functions.\r\n     */\r\n    get functions() {\r\n        return new _supabase_functions_js__WEBPACK_IMPORTED_MODULE_5__.FunctionsClient(this.functionsUrl, {\r\n            headers: this.headers,\r\n            customFetch: this.fetch,\r\n        });\r\n    }\r\n    /**\r\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\r\n     */\r\n    get storage() {\r\n        return new _supabase_storage_js__WEBPACK_IMPORTED_MODULE_6__.StorageClient(this.storageUrl, this.headers, this.fetch);\r\n    }\r\n    /**\r\n     * Perform a query on a table or a view.\r\n     *\r\n     * @param relation - The table or view name to query\r\n     */\r\n    from(relation) {\r\n        return this.rest.from(relation);\r\n    }\r\n    /**\r\n     * Perform a function call.\r\n     *\r\n     * @param fn - The function name to call\r\n     * @param args - The arguments to pass to the function call\r\n     * @param options - Named parameters\r\n     * @param options.head - When set to `true`, `data` will not be returned.\r\n     * Useful if you only need the count.\r\n     * @param options.count - Count algorithm to use to count rows returned by the\r\n     * function. Only applicable for [set-returning\r\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\r\n     *\r\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\r\n     * hood.\r\n     *\r\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\r\n     * statistics under the hood.\r\n     *\r\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\r\n     * numbers.\r\n     */\r\n    rpc(fn, args = {}, options) {\r\n        return this.rest.rpc(fn, args, options);\r\n    }\r\n    /**\r\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\r\n     *\r\n     * @param {string} name - The name of the Realtime channel.\r\n     * @param {Object} opts - The options to pass to the Realtime channel.\r\n     *\r\n     */\r\n    channel(name, opts = { config: {} }) {\r\n        return this.realtime.channel(name, opts);\r\n    }\r\n    /**\r\n     * Returns all Realtime channels.\r\n     */\r\n    getChannels() {\r\n        return this.realtime.getChannels();\r\n    }\r\n    /**\r\n     * Unsubscribes and removes Realtime channel from Realtime client.\r\n     *\r\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\r\n     *\r\n     */\r\n    removeChannel(channel) {\r\n        return this.realtime.removeChannel(channel);\r\n    }\r\n    /**\r\n     * Unsubscribes and removes all Realtime channels from Realtime client.\r\n     */\r\n    removeAllChannels() {\r\n        return this.realtime.removeAllChannels();\r\n    }\r\n    _getAccessToken() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data } = yield this.auth.getSession();\r\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\r\n        });\r\n    }\r\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, }, headers, fetch) {\r\n        const authHeaders = {\r\n            Authorization: `Bearer ${this.supabaseKey}`,\r\n            apikey: `${this.supabaseKey}`,\r\n        };\r\n        return new _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__.SupabaseAuthClient({\r\n            url: this.authUrl,\r\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\r\n            storageKey: storageKey,\r\n            autoRefreshToken,\r\n            persistSession,\r\n            detectSessionInUrl,\r\n            storage,\r\n            flowType,\r\n            fetch,\r\n        });\r\n    }\r\n    _initRealtimeClient(options) {\r\n        return new _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__.RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\r\n    }\r\n    _listenForAuthEvents() {\r\n        let data = this.auth.onAuthStateChange((event, session) => {\r\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\r\n        });\r\n        return data;\r\n    }\r\n    _handleTokenChanged(event, token, source) {\r\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\r\n            this.changedAccessToken !== token) {\r\n            // Token has changed\r\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\r\n            this.changedAccessToken = token;\r\n        }\r\n        else if (event === 'SIGNED_OUT') {\r\n            // Token is removed\r\n            this.realtime.setAuth(this.supabaseKey);\r\n            if (source == 'STORAGE')\r\n                this.auth.signOut();\r\n            this.changedAccessToken = undefined;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionsError\": function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_1__.FunctionsError; },\n/* harmony export */   \"FunctionsFetchError\": function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_1__.FunctionsFetchError; },\n/* harmony export */   \"FunctionsHttpError\": function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_1__.FunctionsHttpError; },\n/* harmony export */   \"FunctionsRelayError\": function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_1__.FunctionsRelayError; },\n/* harmony export */   \"SupabaseClient\": function() { return /* reexport safe */ _SupabaseClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   \"createClient\": function() { return /* binding */ createClient; }\n/* harmony export */ });\n/* harmony import */ var _SupabaseClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SupabaseClient */ \"./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\");\n/* harmony import */ var _supabase_gotrue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/gotrue-js */ \"./node_modules/@supabase/gotrue-js/dist/module/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _supabase_gotrue_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"FunctionsHttpError\",\"FunctionsFetchError\",\"FunctionsRelayError\",\"FunctionsError\",\"SupabaseClient\",\"createClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _supabase_gotrue_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/functions-js */ \"./node_modules/@supabase/functions-js/dist/module/index.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/realtime-js */ \"./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"FunctionsHttpError\",\"FunctionsFetchError\",\"FunctionsRelayError\",\"FunctionsError\",\"SupabaseClient\",\"createClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a new Supabase Client.\r\n */\r\nconst createClient = (supabaseUrl, supabaseKey, options) => {\r\n    return new _SupabaseClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"](supabaseUrl, supabaseKey, options);\r\n};\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDVjtBQUNtRjtBQUNqRjtBQUN1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsdURBQWM7QUFDN0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzP2IzMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN1cGFiYXNlQ2xpZW50IGZyb20gJy4vU3VwYWJhc2VDbGllbnQnO1xyXG5leHBvcnQgKiBmcm9tICdAc3VwYWJhc2UvZ290cnVlLWpzJztcclxuZXhwb3J0IHsgRnVuY3Rpb25zSHR0cEVycm9yLCBGdW5jdGlvbnNGZXRjaEVycm9yLCBGdW5jdGlvbnNSZWxheUVycm9yLCBGdW5jdGlvbnNFcnJvciwgfSBmcm9tICdAc3VwYWJhc2UvZnVuY3Rpb25zLWpzJztcclxuZXhwb3J0ICogZnJvbSAnQHN1cGFiYXNlL3JlYWx0aW1lLWpzJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBTdXBhYmFzZUNsaWVudCB9IGZyb20gJy4vU3VwYWJhc2VDbGllbnQnO1xyXG4vKipcclxuICogQ3JlYXRlcyBhIG5ldyBTdXBhYmFzZSBDbGllbnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY3JlYXRlQ2xpZW50ID0gKHN1cGFiYXNlVXJsLCBzdXBhYmFzZUtleSwgb3B0aW9ucykgPT4ge1xyXG4gICAgcmV0dXJuIG5ldyBTdXBhYmFzZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXksIG9wdGlvbnMpO1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SupabaseAuthClient\": function() { return /* binding */ SupabaseAuthClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_gotrue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/gotrue-js */ \"./node_modules/@supabase/gotrue-js/dist/module/index.js\");\n\r\nclass SupabaseAuthClient extends _supabase_gotrue_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueClient {\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n}\r\n//# sourceMappingURL=SupabaseAuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9TdXBhYmFzZUF1dGhDbGllbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDNUMsaUNBQWlDLDZEQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvU3VwYWJhc2VBdXRoQ2xpZW50LmpzPzFkMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR29UcnVlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL2dvdHJ1ZS1qcyc7XHJcbmV4cG9ydCBjbGFzcyBTdXBhYmFzZUF1dGhDbGllbnQgZXh0ZW5kcyBHb1RydWVDbGllbnQge1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cGFiYXNlQXV0aENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_HEADERS\": function() { return /* binding */ DEFAULT_HEADERS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/supabase-js/dist/module/lib/version.js\");\n// constants.ts\r\n\r\nconst DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\r\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNvQztBQUM3QiwwQkFBMEIsZ0NBQWdDLDZDQUFPLENBQUM7QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzP2JlNzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3RhbnRzLnRzXHJcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9IRUFERVJTID0geyAnWC1DbGllbnQtSW5mbyc6IGBzdXBhYmFzZS1qcy8ke3ZlcnNpb259YCB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchWithAuth\": function() { return /* binding */ fetchWithAuth; },\n/* harmony export */   \"resolveFetch\": function() { return /* binding */ resolveFetch; },\n/* harmony export */   \"resolveHeadersConstructor\": function() { return /* binding */ resolveHeadersConstructor; }\n/* harmony export */ });\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\nconst resolveFetch = (customFetch) => {\r\n    let _fetch;\r\n    if (customFetch) {\r\n        _fetch = customFetch;\r\n    }\r\n    else if (typeof fetch === 'undefined') {\r\n        _fetch = (cross_fetch__WEBPACK_IMPORTED_MODULE_0___default());\r\n    }\r\n    else {\r\n        _fetch = fetch;\r\n    }\r\n    return (...args) => _fetch(...args);\r\n};\r\nconst resolveHeadersConstructor = () => {\r\n    if (typeof Headers === 'undefined') {\r\n        return cross_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\r\n    }\r\n    return Headers;\r\n};\r\nconst fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\r\n    const fetch = resolveFetch(customFetch);\r\n    const HeadersConstructor = resolveHeadersConstructor();\r\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\r\n        var _a;\r\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\r\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\r\n        if (!headers.has('apikey')) {\r\n            headers.set('apikey', supabaseKey);\r\n        }\r\n        if (!headers.has('Authorization')) {\r\n            headers.set('Authorization', `Bearer ${accessToken}`);\r\n        }\r\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\r\n    });\r\n};\r\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9mZXRjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUN1RTtBQUNoRTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0RBQVU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUsZ0RBQWlCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsWUFBWTtBQUMvRDtBQUNBLDBEQUEwRCxXQUFXLFNBQVM7QUFDOUUsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanM/MjU0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcclxuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmltcG9ydCBjcm9zc0ZldGNoLCB7IEhlYWRlcnMgYXMgQ3Jvc3NGZXRjaEhlYWRlcnMgfSBmcm9tICdjcm9zcy1mZXRjaCc7XHJcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGxldCBfZmV0Y2g7XHJcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBfZmV0Y2ggPSBjcm9zc0ZldGNoO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcclxufTtcclxuZXhwb3J0IGNvbnN0IHJlc29sdmVIZWFkZXJzQ29uc3RydWN0b3IgPSAoKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIEhlYWRlcnMgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIENyb3NzRmV0Y2hIZWFkZXJzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEhlYWRlcnM7XHJcbn07XHJcbmV4cG9ydCBjb25zdCBmZXRjaFdpdGhBdXRoID0gKHN1cGFiYXNlS2V5LCBnZXRBY2Nlc3NUb2tlbiwgY3VzdG9tRmV0Y2gpID0+IHtcclxuICAgIGNvbnN0IGZldGNoID0gcmVzb2x2ZUZldGNoKGN1c3RvbUZldGNoKTtcclxuICAgIGNvbnN0IEhlYWRlcnNDb25zdHJ1Y3RvciA9IHJlc29sdmVIZWFkZXJzQ29uc3RydWN0b3IoKTtcclxuICAgIHJldHVybiAoaW5wdXQsIGluaXQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IChfYSA9ICh5aWVsZCBnZXRBY2Nlc3NUb2tlbigpKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogc3VwYWJhc2VLZXk7XHJcbiAgICAgICAgbGV0IGhlYWRlcnMgPSBuZXcgSGVhZGVyc0NvbnN0cnVjdG9yKGluaXQgPT09IG51bGwgfHwgaW5pdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5pdC5oZWFkZXJzKTtcclxuICAgICAgICBpZiAoIWhlYWRlcnMuaGFzKCdhcGlrZXknKSkge1xyXG4gICAgICAgICAgICBoZWFkZXJzLnNldCgnYXBpa2V5Jywgc3VwYWJhc2VLZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWhlYWRlcnMuaGFzKCdBdXRob3JpemF0aW9uJykpIHtcclxuICAgICAgICAgICAgaGVhZGVycy5zZXQoJ0F1dGhvcml6YXRpb24nLCBgQmVhcmVyICR7YWNjZXNzVG9rZW59YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmZXRjaChpbnB1dCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0KSwgeyBoZWFkZXJzIH0pKTtcclxuICAgIH0pO1xyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applySettingDefaults\": function() { return /* binding */ applySettingDefaults; },\n/* harmony export */   \"isBrowser\": function() { return /* binding */ isBrowser; },\n/* harmony export */   \"stripTrailingSlash\": function() { return /* binding */ stripTrailingSlash; },\n/* harmony export */   \"uuid\": function() { return /* binding */ uuid; }\n/* harmony export */ });\nfunction uuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nfunction stripTrailingSlash(url) {\r\n    return url.replace(/\\/$/, '');\r\n}\r\nconst isBrowser = () => typeof window !== 'undefined';\r\nfunction applySettingDefaults(options, defaults) {\r\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\r\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\r\n    return {\r\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\r\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\r\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\r\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\r\n    };\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9oZWxwZXJzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ0E7QUFDUCxZQUFZLHNGQUFzRjtBQUNsRyxZQUFZLDBIQUEwSDtBQUN0STtBQUNBLDBDQUEwQztBQUMxQyw0Q0FBNEM7QUFDNUMsZ0RBQWdEO0FBQ2hELDhDQUE4QztBQUM5QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvaGVscGVycy5qcz85YTZkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiB1dWlkKCkge1xyXG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24gKGMpIHtcclxuICAgICAgICB2YXIgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCwgdiA9IGMgPT0gJ3gnID8gciA6IChyICYgMHgzKSB8IDB4ODtcclxuICAgICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHVybCkge1xyXG4gICAgcmV0dXJuIHVybC5yZXBsYWNlKC9cXC8kLywgJycpO1xyXG59XHJcbmV4cG9ydCBjb25zdCBpc0Jyb3dzZXIgPSAoKSA9PiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcclxuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5U2V0dGluZ0RlZmF1bHRzKG9wdGlvbnMsIGRlZmF1bHRzKSB7XHJcbiAgICBjb25zdCB7IGRiOiBkYk9wdGlvbnMsIGF1dGg6IGF1dGhPcHRpb25zLCByZWFsdGltZTogcmVhbHRpbWVPcHRpb25zLCBnbG9iYWw6IGdsb2JhbE9wdGlvbnMsIH0gPSBvcHRpb25zO1xyXG4gICAgY29uc3QgeyBkYjogREVGQVVMVF9EQl9PUFRJT05TLCBhdXRoOiBERUZBVUxUX0FVVEhfT1BUSU9OUywgcmVhbHRpbWU6IERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUywgZ2xvYmFsOiBERUZBVUxUX0dMT0JBTF9PUFRJT05TLCB9ID0gZGVmYXVsdHM7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGRiOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfREJfT1BUSU9OUyksIGRiT3B0aW9ucyksXHJcbiAgICAgICAgYXV0aDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0FVVEhfT1BUSU9OUyksIGF1dGhPcHRpb25zKSxcclxuICAgICAgICByZWFsdGltZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX1JFQUxUSU1FX09QVElPTlMpLCByZWFsdGltZU9wdGlvbnMpLFxyXG4gICAgICAgIGdsb2JhbDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0dMT0JBTF9PUFRJT05TKSwgZ2xvYmFsT3B0aW9ucyksXHJcbiAgICB9O1xyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '2.25.0';\r\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/NDgyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjI1LjAnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/cross-fetch/dist/browser-ponyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/cross-fetch/dist/browser-ponyfill.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var global = typeof self !== 'undefined' ? self : this;\r\nvar __self__ = (function () {\r\nfunction F() {\r\nthis.fetch = false;\r\nthis.DOMException = global.DOMException\r\n}\r\nF.prototype = global;\r\nreturn new F();\r\n})();\r\n(function(self) {\r\n\r\nvar irrelevant = (function (exports) {\r\n\r\n  var support = {\r\n    searchParams: 'URLSearchParams' in self,\r\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n    blob:\r\n      'FileReader' in self &&\r\n      'Blob' in self &&\r\n      (function() {\r\n        try {\r\n          new Blob();\r\n          return true\r\n        } catch (e) {\r\n          return false\r\n        }\r\n      })(),\r\n    formData: 'FormData' in self,\r\n    arrayBuffer: 'ArrayBuffer' in self\r\n  };\r\n\r\n  function isDataView(obj) {\r\n    return obj && DataView.prototype.isPrototypeOf(obj)\r\n  }\r\n\r\n  if (support.arrayBuffer) {\r\n    var viewClasses = [\r\n      '[object Int8Array]',\r\n      '[object Uint8Array]',\r\n      '[object Uint8ClampedArray]',\r\n      '[object Int16Array]',\r\n      '[object Uint16Array]',\r\n      '[object Int32Array]',\r\n      '[object Uint32Array]',\r\n      '[object Float32Array]',\r\n      '[object Float64Array]'\r\n    ];\r\n\r\n    var isArrayBufferView =\r\n      ArrayBuffer.isView ||\r\n      function(obj) {\r\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\r\n      };\r\n  }\r\n\r\n  function normalizeName(name) {\r\n    if (typeof name !== 'string') {\r\n      name = String(name);\r\n    }\r\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\r\n      throw new TypeError('Invalid character in header field name')\r\n    }\r\n    return name.toLowerCase()\r\n  }\r\n\r\n  function normalizeValue(value) {\r\n    if (typeof value !== 'string') {\r\n      value = String(value);\r\n    }\r\n    return value\r\n  }\r\n\r\n  // Build a destructive iterator for the value list\r\n  function iteratorFor(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift();\r\n        return {done: value === undefined, value: value}\r\n      }\r\n    };\r\n\r\n    if (support.iterable) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator\r\n      };\r\n    }\r\n\r\n    return iterator\r\n  }\r\n\r\n  function Headers(headers) {\r\n    this.map = {};\r\n\r\n    if (headers instanceof Headers) {\r\n      headers.forEach(function(value, name) {\r\n        this.append(name, value);\r\n      }, this);\r\n    } else if (Array.isArray(headers)) {\r\n      headers.forEach(function(header) {\r\n        this.append(header[0], header[1]);\r\n      }, this);\r\n    } else if (headers) {\r\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n        this.append(name, headers[name]);\r\n      }, this);\r\n    }\r\n  }\r\n\r\n  Headers.prototype.append = function(name, value) {\r\n    name = normalizeName(name);\r\n    value = normalizeValue(value);\r\n    var oldValue = this.map[name];\r\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\r\n  };\r\n\r\n  Headers.prototype['delete'] = function(name) {\r\n    delete this.map[normalizeName(name)];\r\n  };\r\n\r\n  Headers.prototype.get = function(name) {\r\n    name = normalizeName(name);\r\n    return this.has(name) ? this.map[name] : null\r\n  };\r\n\r\n  Headers.prototype.has = function(name) {\r\n    return this.map.hasOwnProperty(normalizeName(name))\r\n  };\r\n\r\n  Headers.prototype.set = function(name, value) {\r\n    this.map[normalizeName(name)] = normalizeValue(value);\r\n  };\r\n\r\n  Headers.prototype.forEach = function(callback, thisArg) {\r\n    for (var name in this.map) {\r\n      if (this.map.hasOwnProperty(name)) {\r\n        callback.call(thisArg, this.map[name], name, this);\r\n      }\r\n    }\r\n  };\r\n\r\n  Headers.prototype.keys = function() {\r\n    var items = [];\r\n    this.forEach(function(value, name) {\r\n      items.push(name);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  Headers.prototype.values = function() {\r\n    var items = [];\r\n    this.forEach(function(value) {\r\n      items.push(value);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  Headers.prototype.entries = function() {\r\n    var items = [];\r\n    this.forEach(function(value, name) {\r\n      items.push([name, value]);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  if (support.iterable) {\r\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\r\n  }\r\n\r\n  function consumed(body) {\r\n    if (body.bodyUsed) {\r\n      return Promise.reject(new TypeError('Already read'))\r\n    }\r\n    body.bodyUsed = true;\r\n  }\r\n\r\n  function fileReaderReady(reader) {\r\n    return new Promise(function(resolve, reject) {\r\n      reader.onload = function() {\r\n        resolve(reader.result);\r\n      };\r\n      reader.onerror = function() {\r\n        reject(reader.error);\r\n      };\r\n    })\r\n  }\r\n\r\n  function readBlobAsArrayBuffer(blob) {\r\n    var reader = new FileReader();\r\n    var promise = fileReaderReady(reader);\r\n    reader.readAsArrayBuffer(blob);\r\n    return promise\r\n  }\r\n\r\n  function readBlobAsText(blob) {\r\n    var reader = new FileReader();\r\n    var promise = fileReaderReady(reader);\r\n    reader.readAsText(blob);\r\n    return promise\r\n  }\r\n\r\n  function readArrayBufferAsText(buf) {\r\n    var view = new Uint8Array(buf);\r\n    var chars = new Array(view.length);\r\n\r\n    for (var i = 0; i < view.length; i++) {\r\n      chars[i] = String.fromCharCode(view[i]);\r\n    }\r\n    return chars.join('')\r\n  }\r\n\r\n  function bufferClone(buf) {\r\n    if (buf.slice) {\r\n      return buf.slice(0)\r\n    } else {\r\n      var view = new Uint8Array(buf.byteLength);\r\n      view.set(new Uint8Array(buf));\r\n      return view.buffer\r\n    }\r\n  }\r\n\r\n  function Body() {\r\n    this.bodyUsed = false;\r\n\r\n    this._initBody = function(body) {\r\n      this._bodyInit = body;\r\n      if (!body) {\r\n        this._bodyText = '';\r\n      } else if (typeof body === 'string') {\r\n        this._bodyText = body;\r\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n        this._bodyBlob = body;\r\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n        this._bodyFormData = body;\r\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n        this._bodyText = body.toString();\r\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\r\n        this._bodyArrayBuffer = bufferClone(body.buffer);\r\n        // IE 10-11 can't handle a DataView body.\r\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\r\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\r\n        this._bodyArrayBuffer = bufferClone(body);\r\n      } else {\r\n        this._bodyText = body = Object.prototype.toString.call(body);\r\n      }\r\n\r\n      if (!this.headers.get('content-type')) {\r\n        if (typeof body === 'string') {\r\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\r\n        } else if (this._bodyBlob && this._bodyBlob.type) {\r\n          this.headers.set('content-type', this._bodyBlob.type);\r\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\r\n        }\r\n      }\r\n    };\r\n\r\n    if (support.blob) {\r\n      this.blob = function() {\r\n        var rejected = consumed(this);\r\n        if (rejected) {\r\n          return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n          return Promise.resolve(this._bodyBlob)\r\n        } else if (this._bodyArrayBuffer) {\r\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\r\n        } else if (this._bodyFormData) {\r\n          throw new Error('could not read FormData body as blob')\r\n        } else {\r\n          return Promise.resolve(new Blob([this._bodyText]))\r\n        }\r\n      };\r\n\r\n      this.arrayBuffer = function() {\r\n        if (this._bodyArrayBuffer) {\r\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\r\n        } else {\r\n          return this.blob().then(readBlobAsArrayBuffer)\r\n        }\r\n      };\r\n    }\r\n\r\n    this.text = function() {\r\n      var rejected = consumed(this);\r\n      if (rejected) {\r\n        return rejected\r\n      }\r\n\r\n      if (this._bodyBlob) {\r\n        return readBlobAsText(this._bodyBlob)\r\n      } else if (this._bodyArrayBuffer) {\r\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\r\n      } else if (this._bodyFormData) {\r\n        throw new Error('could not read FormData body as text')\r\n      } else {\r\n        return Promise.resolve(this._bodyText)\r\n      }\r\n    };\r\n\r\n    if (support.formData) {\r\n      this.formData = function() {\r\n        return this.text().then(decode)\r\n      };\r\n    }\r\n\r\n    this.json = function() {\r\n      return this.text().then(JSON.parse)\r\n    };\r\n\r\n    return this\r\n  }\r\n\r\n  // HTTP methods whose capitalization should be normalized\r\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\r\n\r\n  function normalizeMethod(method) {\r\n    var upcased = method.toUpperCase();\r\n    return methods.indexOf(upcased) > -1 ? upcased : method\r\n  }\r\n\r\n  function Request(input, options) {\r\n    options = options || {};\r\n    var body = options.body;\r\n\r\n    if (input instanceof Request) {\r\n      if (input.bodyUsed) {\r\n        throw new TypeError('Already read')\r\n      }\r\n      this.url = input.url;\r\n      this.credentials = input.credentials;\r\n      if (!options.headers) {\r\n        this.headers = new Headers(input.headers);\r\n      }\r\n      this.method = input.method;\r\n      this.mode = input.mode;\r\n      this.signal = input.signal;\r\n      if (!body && input._bodyInit != null) {\r\n        body = input._bodyInit;\r\n        input.bodyUsed = true;\r\n      }\r\n    } else {\r\n      this.url = String(input);\r\n    }\r\n\r\n    this.credentials = options.credentials || this.credentials || 'same-origin';\r\n    if (options.headers || !this.headers) {\r\n      this.headers = new Headers(options.headers);\r\n    }\r\n    this.method = normalizeMethod(options.method || this.method || 'GET');\r\n    this.mode = options.mode || this.mode || null;\r\n    this.signal = options.signal || this.signal;\r\n    this.referrer = null;\r\n\r\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n      throw new TypeError('Body not allowed for GET or HEAD requests')\r\n    }\r\n    this._initBody(body);\r\n  }\r\n\r\n  Request.prototype.clone = function() {\r\n    return new Request(this, {body: this._bodyInit})\r\n  };\r\n\r\n  function decode(body) {\r\n    var form = new FormData();\r\n    body\r\n      .trim()\r\n      .split('&')\r\n      .forEach(function(bytes) {\r\n        if (bytes) {\r\n          var split = bytes.split('=');\r\n          var name = split.shift().replace(/\\+/g, ' ');\r\n          var value = split.join('=').replace(/\\+/g, ' ');\r\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\r\n        }\r\n      });\r\n    return form\r\n  }\r\n\r\n  function parseHeaders(rawHeaders) {\r\n    var headers = new Headers();\r\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n    // https://tools.ietf.org/html/rfc7230#section-3.2\r\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\r\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\r\n      var parts = line.split(':');\r\n      var key = parts.shift().trim();\r\n      if (key) {\r\n        var value = parts.join(':').trim();\r\n        headers.append(key, value);\r\n      }\r\n    });\r\n    return headers\r\n  }\r\n\r\n  Body.call(Request.prototype);\r\n\r\n  function Response(bodyInit, options) {\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n\r\n    this.type = 'default';\r\n    this.status = options.status === undefined ? 200 : options.status;\r\n    this.ok = this.status >= 200 && this.status < 300;\r\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\r\n    this.headers = new Headers(options.headers);\r\n    this.url = options.url || '';\r\n    this._initBody(bodyInit);\r\n  }\r\n\r\n  Body.call(Response.prototype);\r\n\r\n  Response.prototype.clone = function() {\r\n    return new Response(this._bodyInit, {\r\n      status: this.status,\r\n      statusText: this.statusText,\r\n      headers: new Headers(this.headers),\r\n      url: this.url\r\n    })\r\n  };\r\n\r\n  Response.error = function() {\r\n    var response = new Response(null, {status: 0, statusText: ''});\r\n    response.type = 'error';\r\n    return response\r\n  };\r\n\r\n  var redirectStatuses = [301, 302, 303, 307, 308];\r\n\r\n  Response.redirect = function(url, status) {\r\n    if (redirectStatuses.indexOf(status) === -1) {\r\n      throw new RangeError('Invalid status code')\r\n    }\r\n\r\n    return new Response(null, {status: status, headers: {location: url}})\r\n  };\r\n\r\n  exports.DOMException = self.DOMException;\r\n  try {\r\n    new exports.DOMException();\r\n  } catch (err) {\r\n    exports.DOMException = function(message, name) {\r\n      this.message = message;\r\n      this.name = name;\r\n      var error = Error(message);\r\n      this.stack = error.stack;\r\n    };\r\n    exports.DOMException.prototype = Object.create(Error.prototype);\r\n    exports.DOMException.prototype.constructor = exports.DOMException;\r\n  }\r\n\r\n  function fetch(input, init) {\r\n    return new Promise(function(resolve, reject) {\r\n      var request = new Request(input, init);\r\n\r\n      if (request.signal && request.signal.aborted) {\r\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\r\n      }\r\n\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      function abortXhr() {\r\n        xhr.abort();\r\n      }\r\n\r\n      xhr.onload = function() {\r\n        var options = {\r\n          status: xhr.status,\r\n          statusText: xhr.statusText,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\r\n        };\r\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\r\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\r\n        resolve(new Response(body, options));\r\n      };\r\n\r\n      xhr.onerror = function() {\r\n        reject(new TypeError('Network request failed'));\r\n      };\r\n\r\n      xhr.ontimeout = function() {\r\n        reject(new TypeError('Network request failed'));\r\n      };\r\n\r\n      xhr.onabort = function() {\r\n        reject(new exports.DOMException('Aborted', 'AbortError'));\r\n      };\r\n\r\n      xhr.open(request.method, request.url, true);\r\n\r\n      if (request.credentials === 'include') {\r\n        xhr.withCredentials = true;\r\n      } else if (request.credentials === 'omit') {\r\n        xhr.withCredentials = false;\r\n      }\r\n\r\n      if ('responseType' in xhr && support.blob) {\r\n        xhr.responseType = 'blob';\r\n      }\r\n\r\n      request.headers.forEach(function(value, name) {\r\n        xhr.setRequestHeader(name, value);\r\n      });\r\n\r\n      if (request.signal) {\r\n        request.signal.addEventListener('abort', abortXhr);\r\n\r\n        xhr.onreadystatechange = function() {\r\n          // DONE (success or failure)\r\n          if (xhr.readyState === 4) {\r\n            request.signal.removeEventListener('abort', abortXhr);\r\n          }\r\n        };\r\n      }\r\n\r\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\r\n    })\r\n  }\r\n\r\n  fetch.polyfill = true;\r\n\r\n  if (!self.fetch) {\r\n    self.fetch = fetch;\r\n    self.Headers = Headers;\r\n    self.Request = Request;\r\n    self.Response = Response;\r\n  }\r\n\r\n  exports.Headers = Headers;\r\n  exports.Request = Request;\r\n  exports.Response = Response;\r\n  exports.fetch = fetch;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n  return exports;\r\n\r\n})({});\r\n})(__self__);\r\n__self__.fetch.ponyfill = true;\r\n// Remove \"polyfill\" property added by whatwg-fetch\r\ndelete __self__.fetch.polyfill;\r\n// Choose between native implementation (global) or custom implementation (__self__)\r\n// var ctx = global.fetch ? global : __self__;\r\nvar ctx = __self__; // this line disable service worker support temporarily\r\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\r\nexports[\"default\"] = ctx.fetch // For TypeScript consumers without esModuleInterop.\r\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\r\nexports.Headers = ctx.Headers\r\nexports.Request = ctx.Request\r\nexports.Response = ctx.Response\r\nmodule.exports = exports\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cross-fetch/dist/browser-ponyfill.js\n"));

/***/ }),

/***/ "./node_modules/es5-ext/global.js":
/*!****************************************!*\
  !*** ./node_modules/es5-ext/global.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var naiveFallback = function () {\r\n\tif (typeof self === \"object\" && self) return self;\r\n\tif (typeof window === \"object\" && window) return window;\r\n\tthrow new Error(\"Unable to resolve global `this`\");\r\n};\r\n\r\nmodule.exports = (function () {\r\n\tif (this) return this;\r\n\r\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\r\n\r\n\t// Fallback to standard globalThis if available\r\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\r\n\r\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\r\n\t// In all ES5+ engines global object inherits from Object.prototype\r\n\t// (if you approached one that doesn't please report)\r\n\ttry {\r\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\r\n\t\t\tget: function () { return this; },\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t} catch (error) {\r\n\t\t// Unfortunate case of updates to Object.prototype being restricted\r\n\t\t// via preventExtensions, seal or freeze\r\n\t\treturn naiveFallback();\r\n\t}\r\n\ttry {\r\n\t\t// Safari case (window.__global__ works, but __global__ does not)\r\n\t\tif (!__global__) return naiveFallback();\r\n\t\treturn __global__;\r\n\t} finally {\r\n\t\tdelete Object.prototype.__global__;\r\n\t}\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9nbG9iYWwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsY0FBYztBQUNwQztBQUNBLEdBQUc7QUFDSCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZXM1LWV4dC9nbG9iYWwuanM/ZmE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmFpdmVGYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcclxuXHRpZiAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZikgcmV0dXJuIHNlbGY7XHJcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiYgd2luZG93KSByZXR1cm4gd2luZG93O1xyXG5cdHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZXNvbHZlIGdsb2JhbCBgdGhpc2BcIik7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbiAoKSB7XHJcblx0aWYgKHRoaXMpIHJldHVybiB0aGlzO1xyXG5cclxuXHQvLyBVbmV4cGVjdGVkIHN0cmljdCBtb2RlIChtYXkgaGFwcGVuIGlmIGUuZy4gYnVuZGxlZCBpbnRvIEVTTSBtb2R1bGUpXHJcblxyXG5cdC8vIEZhbGxiYWNrIHRvIHN0YW5kYXJkIGdsb2JhbFRoaXMgaWYgYXZhaWxhYmxlXHJcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiICYmIGdsb2JhbFRoaXMpIHJldHVybiBnbG9iYWxUaGlzO1xyXG5cclxuXHQvLyBUaGFua3MgQG1hdGhpYXNieW5lbnMgLT4gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2dsb2JhbHRoaXNcclxuXHQvLyBJbiBhbGwgRVM1KyBlbmdpbmVzIGdsb2JhbCBvYmplY3QgaW5oZXJpdHMgZnJvbSBPYmplY3QucHJvdG90eXBlXHJcblx0Ly8gKGlmIHlvdSBhcHByb2FjaGVkIG9uZSB0aGF0IGRvZXNuJ3QgcGxlYXNlIHJlcG9ydClcclxuXHR0cnkge1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdC5wcm90b3R5cGUsIFwiX19nbG9iYWxfX1wiLCB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSxcclxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXHJcblx0XHR9KTtcclxuXHR9IGNhdGNoIChlcnJvcikge1xyXG5cdFx0Ly8gVW5mb3J0dW5hdGUgY2FzZSBvZiB1cGRhdGVzIHRvIE9iamVjdC5wcm90b3R5cGUgYmVpbmcgcmVzdHJpY3RlZFxyXG5cdFx0Ly8gdmlhIHByZXZlbnRFeHRlbnNpb25zLCBzZWFsIG9yIGZyZWV6ZVxyXG5cdFx0cmV0dXJuIG5haXZlRmFsbGJhY2soKTtcclxuXHR9XHJcblx0dHJ5IHtcclxuXHRcdC8vIFNhZmFyaSBjYXNlICh3aW5kb3cuX19nbG9iYWxfXyB3b3JrcywgYnV0IF9fZ2xvYmFsX18gZG9lcyBub3QpXHJcblx0XHRpZiAoIV9fZ2xvYmFsX18pIHJldHVybiBuYWl2ZUZhbGxiYWNrKCk7XHJcblx0XHRyZXR1cm4gX19nbG9iYWxfXztcclxuXHR9IGZpbmFsbHkge1xyXG5cdFx0ZGVsZXRlIE9iamVjdC5wcm90b3R5cGUuX19nbG9iYWxfXztcclxuXHR9XHJcbn0pKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/es5-ext/global.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nvar ref, ref1;\r\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\r\n\r\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCO0FBQ3JNO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcz9jYTY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgcmVmLCByZWYxO1xyXG5tb2R1bGUuZXhwb3J0cyA9ICgocmVmID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiByZWYuZW52KSAmJiB0eXBlb2YgKChyZWYxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiByZWYxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCIuLi8uLi9jb21waWxlZC9wcm9jZXNzXCIpO1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\r\\n! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com\\r\\n*//*\\r\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\r\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\r\\n*/\\r\\n\\r\\n*,\\r\\n::before,\\r\\n::after {\\r\\n  box-sizing: border-box; /* 1 */\\r\\n  border-width: 0; /* 2 */\\r\\n  border-style: solid; /* 2 */\\r\\n  border-color: #e5e7eb; /* 2 */\\r\\n}\\r\\n\\r\\n::before,\\r\\n::after {\\r\\n  --tw-content: '';\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Use a consistent sensible line-height in all browsers.\\r\\n2. Prevent adjustments of font size after orientation changes in iOS.\\r\\n3. Use a more readable tab size.\\r\\n4. Use the user's configured `sans` font-family by default.\\r\\n5. Use the user's configured `sans` font-feature-settings by default.\\r\\n6. Use the user's configured `sans` font-variation-settings by default.\\r\\n*/\\r\\n\\r\\nhtml {\\r\\n  line-height: 1.5; /* 1 */\\r\\n  -webkit-text-size-adjust: 100%; /* 2 */\\r\\n  -moz-tab-size: 4; /* 3 */\\r\\n  -o-tab-size: 4;\\r\\n     tab-size: 4; /* 3 */\\r\\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\r\\n  font-feature-settings: normal; /* 5 */\\r\\n  font-variation-settings: normal; /* 6 */\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Remove the margin in all browsers.\\r\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\r\\n*/\\r\\n\\r\\nbody {\\r\\n  margin: 0; /* 1 */\\r\\n  line-height: inherit; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Add the correct height in Firefox.\\r\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\r\\n3. Ensure horizontal rules are visible by default.\\r\\n*/\\r\\n\\r\\nhr {\\r\\n  height: 0; /* 1 */\\r\\n  color: inherit; /* 2 */\\r\\n  border-top-width: 1px; /* 3 */\\r\\n}\\r\\n\\r\\n/*\\r\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\r\\n*/\\r\\n\\r\\nabbr:where([title]) {\\r\\n  -webkit-text-decoration: underline dotted;\\r\\n          text-decoration: underline dotted;\\r\\n}\\r\\n\\r\\n/*\\r\\nRemove the default font size and weight for headings.\\r\\n*/\\r\\n\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6 {\\r\\n  font-size: inherit;\\r\\n  font-weight: inherit;\\r\\n}\\r\\n\\r\\n/*\\r\\nReset links to optimize for opt-in styling instead of opt-out.\\r\\n*/\\r\\n\\r\\na {\\r\\n  color: inherit;\\r\\n  text-decoration: inherit;\\r\\n}\\r\\n\\r\\n/*\\r\\nAdd the correct font weight in Edge and Safari.\\r\\n*/\\r\\n\\r\\nb,\\r\\nstrong {\\r\\n  font-weight: bolder;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Use the user's configured `mono` font family by default.\\r\\n2. Correct the odd `em` font sizing in all browsers.\\r\\n*/\\r\\n\\r\\ncode,\\r\\nkbd,\\r\\nsamp,\\r\\npre {\\r\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\r\\n  font-size: 1em; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nAdd the correct font size in all browsers.\\r\\n*/\\r\\n\\r\\nsmall {\\r\\n  font-size: 80%;\\r\\n}\\r\\n\\r\\n/*\\r\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\r\\n*/\\r\\n\\r\\nsub,\\r\\nsup {\\r\\n  font-size: 75%;\\r\\n  line-height: 0;\\r\\n  position: relative;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n\\r\\nsub {\\r\\n  bottom: -0.25em;\\r\\n}\\r\\n\\r\\nsup {\\r\\n  top: -0.5em;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\r\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\r\\n3. Remove gaps between table borders by default.\\r\\n*/\\r\\n\\r\\ntable {\\r\\n  text-indent: 0; /* 1 */\\r\\n  border-color: inherit; /* 2 */\\r\\n  border-collapse: collapse; /* 3 */\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Change the font styles in all browsers.\\r\\n2. Remove the margin in Firefox and Safari.\\r\\n3. Remove default padding in all browsers.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\ninput,\\r\\noptgroup,\\r\\nselect,\\r\\ntextarea {\\r\\n  font-family: inherit; /* 1 */\\r\\n  font-size: 100%; /* 1 */\\r\\n  font-weight: inherit; /* 1 */\\r\\n  line-height: inherit; /* 1 */\\r\\n  color: inherit; /* 1 */\\r\\n  margin: 0; /* 2 */\\r\\n  padding: 0; /* 3 */\\r\\n}\\r\\n\\r\\n/*\\r\\nRemove the inheritance of text transform in Edge and Firefox.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\nselect {\\r\\n  text-transform: none;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Correct the inability to style clickable types in iOS and Safari.\\r\\n2. Remove default button styles.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\n[type='button'],\\r\\n[type='reset'],\\r\\n[type='submit'] {\\r\\n  -webkit-appearance: button; /* 1 */\\r\\n  background-color: transparent; /* 2 */\\r\\n  background-image: none; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nUse the modern Firefox focus style for all focusable elements.\\r\\n*/\\r\\n\\r\\n:-moz-focusring {\\r\\n  outline: auto;\\r\\n}\\r\\n\\r\\n/*\\r\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\r\\n*/\\r\\n\\r\\n:-moz-ui-invalid {\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\n/*\\r\\nAdd the correct vertical alignment in Chrome and Firefox.\\r\\n*/\\r\\n\\r\\nprogress {\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n\\r\\n/*\\r\\nCorrect the cursor style of increment and decrement buttons in Safari.\\r\\n*/\\r\\n\\r\\n::-webkit-inner-spin-button,\\r\\n::-webkit-outer-spin-button {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Correct the odd appearance in Chrome and Safari.\\r\\n2. Correct the outline style in Safari.\\r\\n*/\\r\\n\\r\\n[type='search'] {\\r\\n  -webkit-appearance: textfield; /* 1 */\\r\\n  outline-offset: -2px; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nRemove the inner padding in Chrome and Safari on macOS.\\r\\n*/\\r\\n\\r\\n::-webkit-search-decoration {\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Correct the inability to style clickable types in iOS and Safari.\\r\\n2. Change font properties to `inherit` in Safari.\\r\\n*/\\r\\n\\r\\n::-webkit-file-upload-button {\\r\\n  -webkit-appearance: button; /* 1 */\\r\\n  font: inherit; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nAdd the correct display in Chrome and Safari.\\r\\n*/\\r\\n\\r\\nsummary {\\r\\n  display: list-item;\\r\\n}\\r\\n\\r\\n/*\\r\\nRemoves the default spacing and border for appropriate elements.\\r\\n*/\\r\\n\\r\\nblockquote,\\r\\ndl,\\r\\ndd,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6,\\r\\nhr,\\r\\nfigure,\\r\\np,\\r\\npre {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\nfieldset {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nlegend {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nol,\\r\\nul,\\r\\nmenu {\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/*\\r\\nPrevent resizing textareas horizontally by default.\\r\\n*/\\r\\n\\r\\ntextarea {\\r\\n  resize: vertical;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\r\\n2. Set the default placeholder color to the user's configured gray 400 color.\\r\\n*/\\r\\n\\r\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\r\\n  opacity: 1; /* 1 */\\r\\n  color: #9ca3af; /* 2 */\\r\\n}\\r\\n\\r\\ninput::placeholder,\\r\\ntextarea::placeholder {\\r\\n  opacity: 1; /* 1 */\\r\\n  color: #9ca3af; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nSet the default cursor for buttons.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\n[role=\\\"button\\\"] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/*\\r\\nMake sure disabled buttons don't get the pointer cursor.\\r\\n*/\\r\\n:disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n\\r\\n/*\\r\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\r\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\r\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\r\\n*/\\r\\n\\r\\nimg,\\r\\nsvg,\\r\\nvideo,\\r\\ncanvas,\\r\\naudio,\\r\\niframe,\\r\\nembed,\\r\\nobject {\\r\\n  display: block; /* 1 */\\r\\n  vertical-align: middle; /* 2 */\\r\\n}\\r\\n\\r\\n/*\\r\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\r\\n*/\\r\\n\\r\\nimg,\\r\\nvideo {\\r\\n  max-width: 100%;\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\r\\n[hidden] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n*, ::before, ::after {\\r\\n  --tw-border-spacing-x: 0;\\r\\n  --tw-border-spacing-y: 0;\\r\\n  --tw-translate-x: 0;\\r\\n  --tw-translate-y: 0;\\r\\n  --tw-rotate: 0;\\r\\n  --tw-skew-x: 0;\\r\\n  --tw-skew-y: 0;\\r\\n  --tw-scale-x: 1;\\r\\n  --tw-scale-y: 1;\\r\\n  --tw-pan-x:  ;\\r\\n  --tw-pan-y:  ;\\r\\n  --tw-pinch-zoom:  ;\\r\\n  --tw-scroll-snap-strictness: proximity;\\r\\n  --tw-gradient-from-position:  ;\\r\\n  --tw-gradient-via-position:  ;\\r\\n  --tw-gradient-to-position:  ;\\r\\n  --tw-ordinal:  ;\\r\\n  --tw-slashed-zero:  ;\\r\\n  --tw-numeric-figure:  ;\\r\\n  --tw-numeric-spacing:  ;\\r\\n  --tw-numeric-fraction:  ;\\r\\n  --tw-ring-inset:  ;\\r\\n  --tw-ring-offset-width: 0px;\\r\\n  --tw-ring-offset-color: #fff;\\r\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\r\\n  --tw-ring-offset-shadow: 0 0 #0000;\\r\\n  --tw-ring-shadow: 0 0 #0000;\\r\\n  --tw-shadow: 0 0 #0000;\\r\\n  --tw-shadow-colored: 0 0 #0000;\\r\\n  --tw-blur:  ;\\r\\n  --tw-brightness:  ;\\r\\n  --tw-contrast:  ;\\r\\n  --tw-grayscale:  ;\\r\\n  --tw-hue-rotate:  ;\\r\\n  --tw-invert:  ;\\r\\n  --tw-saturate:  ;\\r\\n  --tw-sepia:  ;\\r\\n  --tw-drop-shadow:  ;\\r\\n  --tw-backdrop-blur:  ;\\r\\n  --tw-backdrop-brightness:  ;\\r\\n  --tw-backdrop-contrast:  ;\\r\\n  --tw-backdrop-grayscale:  ;\\r\\n  --tw-backdrop-hue-rotate:  ;\\r\\n  --tw-backdrop-invert:  ;\\r\\n  --tw-backdrop-opacity:  ;\\r\\n  --tw-backdrop-saturate:  ;\\r\\n  --tw-backdrop-sepia:  ;\\r\\n}\\r\\n\\r\\n::backdrop {\\r\\n  --tw-border-spacing-x: 0;\\r\\n  --tw-border-spacing-y: 0;\\r\\n  --tw-translate-x: 0;\\r\\n  --tw-translate-y: 0;\\r\\n  --tw-rotate: 0;\\r\\n  --tw-skew-x: 0;\\r\\n  --tw-skew-y: 0;\\r\\n  --tw-scale-x: 1;\\r\\n  --tw-scale-y: 1;\\r\\n  --tw-pan-x:  ;\\r\\n  --tw-pan-y:  ;\\r\\n  --tw-pinch-zoom:  ;\\r\\n  --tw-scroll-snap-strictness: proximity;\\r\\n  --tw-gradient-from-position:  ;\\r\\n  --tw-gradient-via-position:  ;\\r\\n  --tw-gradient-to-position:  ;\\r\\n  --tw-ordinal:  ;\\r\\n  --tw-slashed-zero:  ;\\r\\n  --tw-numeric-figure:  ;\\r\\n  --tw-numeric-spacing:  ;\\r\\n  --tw-numeric-fraction:  ;\\r\\n  --tw-ring-inset:  ;\\r\\n  --tw-ring-offset-width: 0px;\\r\\n  --tw-ring-offset-color: #fff;\\r\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\r\\n  --tw-ring-offset-shadow: 0 0 #0000;\\r\\n  --tw-ring-shadow: 0 0 #0000;\\r\\n  --tw-shadow: 0 0 #0000;\\r\\n  --tw-shadow-colored: 0 0 #0000;\\r\\n  --tw-blur:  ;\\r\\n  --tw-brightness:  ;\\r\\n  --tw-contrast:  ;\\r\\n  --tw-grayscale:  ;\\r\\n  --tw-hue-rotate:  ;\\r\\n  --tw-invert:  ;\\r\\n  --tw-saturate:  ;\\r\\n  --tw-sepia:  ;\\r\\n  --tw-drop-shadow:  ;\\r\\n  --tw-backdrop-blur:  ;\\r\\n  --tw-backdrop-brightness:  ;\\r\\n  --tw-backdrop-contrast:  ;\\r\\n  --tw-backdrop-grayscale:  ;\\r\\n  --tw-backdrop-hue-rotate:  ;\\r\\n  --tw-backdrop-invert:  ;\\r\\n  --tw-backdrop-opacity:  ;\\r\\n  --tw-backdrop-saturate:  ;\\r\\n  --tw-backdrop-sepia:  ;\\r\\n}\\r\\n.fixed {\\r\\n  position: fixed;\\r\\n}\\r\\n.absolute {\\r\\n  position: absolute;\\r\\n}\\r\\n.relative {\\r\\n  position: relative;\\r\\n}\\r\\n.inset-0 {\\r\\n  inset: 0px;\\r\\n}\\r\\n.-right-6 {\\r\\n  right: -1.5rem;\\r\\n}\\r\\n.bottom-0 {\\r\\n  bottom: 0px;\\r\\n}\\r\\n.left-4 {\\r\\n  left: 1rem;\\r\\n}\\r\\n.right-0 {\\r\\n  right: 0px;\\r\\n}\\r\\n.top-24 {\\r\\n  top: 6rem;\\r\\n}\\r\\n.z-10 {\\r\\n  z-index: 10;\\r\\n}\\r\\n.z-20 {\\r\\n  z-index: 20;\\r\\n}\\r\\n.z-50 {\\r\\n  z-index: 50;\\r\\n}\\r\\n.m-2 {\\r\\n  margin: 0.5rem;\\r\\n}\\r\\n.-mx-2 {\\r\\n  margin-left: -0.5rem;\\r\\n  margin-right: -0.5rem;\\r\\n}\\r\\n.-my-2 {\\r\\n  margin-top: -0.5rem;\\r\\n  margin-bottom: -0.5rem;\\r\\n}\\r\\n.mx-1 {\\r\\n  margin-left: 0.25rem;\\r\\n  margin-right: 0.25rem;\\r\\n}\\r\\n.mx-2 {\\r\\n  margin-left: 0.5rem;\\r\\n  margin-right: 0.5rem;\\r\\n}\\r\\n.mx-4 {\\r\\n  margin-left: 1rem;\\r\\n  margin-right: 1rem;\\r\\n}\\r\\n.mx-auto {\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.my-1 {\\r\\n  margin-top: 0.25rem;\\r\\n  margin-bottom: 0.25rem;\\r\\n}\\r\\n.my-2 {\\r\\n  margin-top: 0.5rem;\\r\\n  margin-bottom: 0.5rem;\\r\\n}\\r\\n.my-3 {\\r\\n  margin-top: 0.75rem;\\r\\n  margin-bottom: 0.75rem;\\r\\n}\\r\\n.-mb-5 {\\r\\n  margin-bottom: -1.25rem;\\r\\n}\\r\\n.-mt-24 {\\r\\n  margin-top: -6rem;\\r\\n}\\r\\n.mb-2 {\\r\\n  margin-bottom: 0.5rem;\\r\\n}\\r\\n.mb-24 {\\r\\n  margin-bottom: 6rem;\\r\\n}\\r\\n.mb-3 {\\r\\n  margin-bottom: 0.75rem;\\r\\n}\\r\\n.mb-4 {\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n.mb-5 {\\r\\n  margin-bottom: 1.25rem;\\r\\n}\\r\\n.ml-24 {\\r\\n  margin-left: 6rem;\\r\\n}\\r\\n.mr-1 {\\r\\n  margin-right: 0.25rem;\\r\\n}\\r\\n.mr-2 {\\r\\n  margin-right: 0.5rem;\\r\\n}\\r\\n.mt-1 {\\r\\n  margin-top: 0.25rem;\\r\\n}\\r\\n.mt-2 {\\r\\n  margin-top: 0.5rem;\\r\\n}\\r\\n.mt-4 {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n.mt-5 {\\r\\n  margin-top: 1.25rem;\\r\\n}\\r\\n.block {\\r\\n  display: block;\\r\\n}\\r\\n.inline-block {\\r\\n  display: inline-block;\\r\\n}\\r\\n.flex {\\r\\n  display: flex;\\r\\n}\\r\\n.inline-flex {\\r\\n  display: inline-flex;\\r\\n}\\r\\n.grid {\\r\\n  display: grid;\\r\\n}\\r\\n.hidden {\\r\\n  display: none;\\r\\n}\\r\\n.h-12 {\\r\\n  height: 3rem;\\r\\n}\\r\\n.h-14 {\\r\\n  height: 3.5rem;\\r\\n}\\r\\n.h-24 {\\r\\n  height: 6rem;\\r\\n}\\r\\n.h-36 {\\r\\n  height: 9rem;\\r\\n}\\r\\n.h-48 {\\r\\n  height: 12rem;\\r\\n}\\r\\n.h-5 {\\r\\n  height: 1.25rem;\\r\\n}\\r\\n.h-6 {\\r\\n  height: 1.5rem;\\r\\n}\\r\\n.h-8 {\\r\\n  height: 2rem;\\r\\n}\\r\\n.h-screen {\\r\\n  height: 100vh;\\r\\n}\\r\\n.w-1\\\\/3 {\\r\\n  width: 33.333333%;\\r\\n}\\r\\n.w-12 {\\r\\n  width: 3rem;\\r\\n}\\r\\n.w-24 {\\r\\n  width: 6rem;\\r\\n}\\r\\n.w-5 {\\r\\n  width: 1.25rem;\\r\\n}\\r\\n.w-56 {\\r\\n  width: 14rem;\\r\\n}\\r\\n.w-6 {\\r\\n  width: 1.5rem;\\r\\n}\\r\\n.w-auto {\\r\\n  width: auto;\\r\\n}\\r\\n.w-full {\\r\\n  width: 100%;\\r\\n}\\r\\n.max-w-4xl {\\r\\n  max-width: 56rem;\\r\\n}\\r\\n.max-w-xs {\\r\\n  max-width: 20rem;\\r\\n}\\r\\n.grow {\\r\\n  flex-grow: 1;\\r\\n}\\r\\n.origin-top-right {\\r\\n  transform-origin: top right;\\r\\n}\\r\\n.scale-100 {\\r\\n  --tw-scale-x: 1;\\r\\n  --tw-scale-y: 1;\\r\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\r\\n}\\r\\n.scale-95 {\\r\\n  --tw-scale-x: .95;\\r\\n  --tw-scale-y: .95;\\r\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\r\\n}\\r\\n.transform {\\r\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\r\\n}\\r\\n.cursor-pointer {\\r\\n  cursor: pointer;\\r\\n}\\r\\n.items-center {\\r\\n  align-items: center;\\r\\n}\\r\\n.justify-end {\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.justify-center {\\r\\n  justify-content: center;\\r\\n}\\r\\n.justify-between {\\r\\n  justify-content: space-between;\\r\\n}\\r\\n.gap-1 {\\r\\n  gap: 0.25rem;\\r\\n}\\r\\n.gap-2 {\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n.gap-3 {\\r\\n  gap: 0.75rem;\\r\\n}\\r\\n.gap-4 {\\r\\n  gap: 1rem;\\r\\n}\\r\\n.gap-5 {\\r\\n  gap: 1.25rem;\\r\\n}\\r\\n.gap-6 {\\r\\n  gap: 1.5rem;\\r\\n}\\r\\n.gap-8 {\\r\\n  gap: 2rem;\\r\\n}\\r\\n.overflow-hidden {\\r\\n  overflow: hidden;\\r\\n}\\r\\n.rounded-3xl {\\r\\n  border-radius: 1.5rem;\\r\\n}\\r\\n.rounded-full {\\r\\n  border-radius: 9999px;\\r\\n}\\r\\n.rounded-lg {\\r\\n  border-radius: 0.5rem;\\r\\n}\\r\\n.rounded-md {\\r\\n  border-radius: 0.375rem;\\r\\n}\\r\\n.rounded-sm {\\r\\n  border-radius: 0.125rem;\\r\\n}\\r\\n.border {\\r\\n  border-width: 1px;\\r\\n}\\r\\n.border-2 {\\r\\n  border-width: 2px;\\r\\n}\\r\\n.border-b {\\r\\n  border-bottom-width: 1px;\\r\\n}\\r\\n.border-b-4 {\\r\\n  border-bottom-width: 4px;\\r\\n}\\r\\n.border-dotted {\\r\\n  border-style: dotted;\\r\\n}\\r\\n.border-gray-200 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(229 231 235 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-gray-300 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(209 213 219 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-gray-400 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(156 163 175 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-gray-600 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(75 85 99 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-gray-700 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(55 65 81 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-socialBlue {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-color: rgb(33 141 250 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-b-black {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-bottom-color: rgb(0 0 0 / var(--tw-border-opacity));\\r\\n}\\r\\n.border-b-gray-700 {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-bottom-color: rgb(55 65 81 / var(--tw-border-opacity));\\r\\n}\\r\\n.bg-black {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-gray-300 {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(209 213 219 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-gray-500 {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(107 114 128 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-gray-900 {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(17 24 39 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-red-500 {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(239 68 68 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-socialBlue {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(33 141 250 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-white {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\r\\n}\\r\\n.bg-opacity-50 {\\r\\n  --tw-bg-opacity: 0.5;\\r\\n}\\r\\n.bg-opacity-80 {\\r\\n  --tw-bg-opacity: 0.8;\\r\\n}\\r\\n.fill-current {\\r\\n  fill: currentColor;\\r\\n}\\r\\n.fill-red-600 {\\r\\n  fill: #dc2626;\\r\\n}\\r\\n.fill-socialBlue {\\r\\n  fill: #218DFA;\\r\\n}\\r\\n.stroke-red-600 {\\r\\n  stroke: #dc2626;\\r\\n}\\r\\n.p-1 {\\r\\n  padding: 0.25rem;\\r\\n}\\r\\n.p-2 {\\r\\n  padding: 0.5rem;\\r\\n}\\r\\n.p-3 {\\r\\n  padding: 0.75rem;\\r\\n}\\r\\n.p-4 {\\r\\n  padding: 1rem;\\r\\n}\\r\\n.p-6 {\\r\\n  padding: 1.5rem;\\r\\n}\\r\\n.px-1 {\\r\\n  padding-left: 0.25rem;\\r\\n  padding-right: 0.25rem;\\r\\n}\\r\\n.px-2 {\\r\\n  padding-left: 0.5rem;\\r\\n  padding-right: 0.5rem;\\r\\n}\\r\\n.px-3 {\\r\\n  padding-left: 0.75rem;\\r\\n  padding-right: 0.75rem;\\r\\n}\\r\\n.px-4 {\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n.px-6 {\\r\\n  padding-left: 1.5rem;\\r\\n  padding-right: 1.5rem;\\r\\n}\\r\\n.py-1 {\\r\\n  padding-top: 0.25rem;\\r\\n  padding-bottom: 0.25rem;\\r\\n}\\r\\n.py-2 {\\r\\n  padding-top: 0.5rem;\\r\\n  padding-bottom: 0.5rem;\\r\\n}\\r\\n.pb-0 {\\r\\n  padding-bottom: 0px;\\r\\n}\\r\\n.pt-0 {\\r\\n  padding-top: 0px;\\r\\n}\\r\\n.text-center {\\r\\n  text-align: center;\\r\\n}\\r\\n.text-right {\\r\\n  text-align: right;\\r\\n}\\r\\n.text-3xl {\\r\\n  font-size: 1.875rem;\\r\\n  line-height: 2.25rem;\\r\\n}\\r\\n.text-6xl {\\r\\n  font-size: 3.75rem;\\r\\n  line-height: 1;\\r\\n}\\r\\n.text-lg {\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.75rem;\\r\\n}\\r\\n.text-sm {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.25rem;\\r\\n}\\r\\n.text-xl {\\r\\n  font-size: 1.25rem;\\r\\n  line-height: 1.75rem;\\r\\n}\\r\\n.font-bold {\\r\\n  font-weight: 700;\\r\\n}\\r\\n.font-medium {\\r\\n  font-weight: 500;\\r\\n}\\r\\n.font-semibold {\\r\\n  font-weight: 600;\\r\\n}\\r\\n.leading-3 {\\r\\n  line-height: .75rem;\\r\\n}\\r\\n.leading-4 {\\r\\n  line-height: 1rem;\\r\\n}\\r\\n.text-gray-200 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(229 231 235 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-gray-300 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(209 213 219 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-gray-400 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(156 163 175 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-gray-500 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(107 114 128 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-gray-600 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(75 85 99 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-gray-700 {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(55 65 81 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-socialBlue {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(33 141 250 / var(--tw-text-opacity));\\r\\n}\\r\\n.text-white {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\r\\n}\\r\\n.opacity-0 {\\r\\n  opacity: 0;\\r\\n}\\r\\n.opacity-100 {\\r\\n  opacity: 1;\\r\\n}\\r\\n.shadow-lg {\\r\\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\\r\\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\\r\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\r\\n}\\r\\n.shadow-md {\\r\\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\\r\\n  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\\r\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\r\\n}\\r\\n.shadow-sm {\\r\\n  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\\r\\n  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);\\r\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\r\\n}\\r\\n.shadow-gray-300 {\\r\\n  --tw-shadow-color: #d1d5db;\\r\\n  --tw-shadow: var(--tw-shadow-colored);\\r\\n}\\r\\n.shadow-gray-500 {\\r\\n  --tw-shadow-color: #6b7280;\\r\\n  --tw-shadow: var(--tw-shadow-colored);\\r\\n}\\r\\n.backdrop-blur {\\r\\n  --tw-backdrop-blur: blur(8px);\\r\\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\r\\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\r\\n}\\r\\n.backdrop-blur-lg {\\r\\n  --tw-backdrop-blur: blur(16px);\\r\\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\r\\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\r\\n}\\r\\n.transition {\\r\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\r\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\r\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\r\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\r\\n  transition-duration: 150ms;\\r\\n}\\r\\n.transition-all {\\r\\n  transition-property: all;\\r\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\r\\n  transition-duration: 150ms;\\r\\n}\\r\\n.duration-100 {\\r\\n  transition-duration: 100ms;\\r\\n}\\r\\n.duration-75 {\\r\\n  transition-duration: 75ms;\\r\\n}\\r\\n.ease-out {\\r\\n  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\nbody{\\r\\n    background-color: #000102;\\r\\n    color:#333;\\r\\n}\\r\\n.backdrop-filter-blur {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    -webkit-backdrop-filter: blur(5px);\\r\\n            backdrop-filter: blur(5px);\\r\\n    z-index: 9999;\\r\\n  }\\r\\n.hover\\\\:scale-110:hover {\\r\\n  --tw-scale-x: 1.1;\\r\\n  --tw-scale-y: 1.1;\\r\\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\\r\\n}\\r\\n.hover\\\\:rounded-md:hover {\\r\\n  border-radius: 0.375rem;\\r\\n}\\r\\n.hover\\\\:border-b-socialBlue:hover {\\r\\n  --tw-border-opacity: 1;\\r\\n  border-bottom-color: rgb(33 141 250 / var(--tw-border-opacity));\\r\\n}\\r\\n.hover\\\\:bg-blue-500:hover {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(59 130 246 / var(--tw-bg-opacity));\\r\\n}\\r\\n.hover\\\\:bg-gray-600:hover {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(75 85 99 / var(--tw-bg-opacity));\\r\\n}\\r\\n.hover\\\\:bg-red-600:hover {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(220 38 38 / var(--tw-bg-opacity));\\r\\n}\\r\\n.hover\\\\:bg-socialBlue:hover {\\r\\n  --tw-bg-opacity: 1;\\r\\n  background-color: rgb(33 141 250 / var(--tw-bg-opacity));\\r\\n}\\r\\n.hover\\\\:bg-opacity-20:hover {\\r\\n  --tw-bg-opacity: 0.2;\\r\\n}\\r\\n.hover\\\\:text-white:hover {\\r\\n  --tw-text-opacity: 1;\\r\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\r\\n}\\r\\n.hover\\\\:underline:hover {\\r\\n  text-decoration-line: underline;\\r\\n}\\r\\n.hover\\\\:shadow-md:hover {\\r\\n  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\\r\\n  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\\r\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\r\\n}\\r\\n@media (min-width: 640px) {\\r\\n\\r\\n  .sm\\\\:block {\\r\\n    display: block;\\r\\n  }\\r\\n}\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n  .md\\\\:static {\\r\\n    position: static;\\r\\n  }\\r\\n\\r\\n  .md\\\\:-mx-4 {\\r\\n    margin-left: -1rem;\\r\\n    margin-right: -1rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:-mx-7 {\\r\\n    margin-left: -1.75rem;\\r\\n    margin-right: -1.75rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:mx-0 {\\r\\n    margin-left: 0px;\\r\\n    margin-right: 0px;\\r\\n  }\\r\\n\\r\\n  .md\\\\:mb-0 {\\r\\n    margin-bottom: 0px;\\r\\n  }\\r\\n\\r\\n  .md\\\\:ml-40 {\\r\\n    margin-left: 10rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:mt-10 {\\r\\n    margin-top: 2.5rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:block {\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n  .md\\\\:flex {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .md\\\\:w-3\\\\/12 {\\r\\n    width: 25%;\\r\\n  }\\r\\n\\r\\n  .md\\\\:w-36 {\\r\\n    width: 9rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:w-9\\\\/12 {\\r\\n    width: 75%;\\r\\n  }\\r\\n\\r\\n  .md\\\\:grid-cols-2 {\\r\\n    grid-template-columns: repeat(2, minmax(0, 1fr));\\r\\n  }\\r\\n\\r\\n  .md\\\\:gap-3 {\\r\\n    gap: 0.75rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:px-4 {\\r\\n    padding-left: 1rem;\\r\\n    padding-right: 1rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:px-7 {\\r\\n    padding-left: 1.75rem;\\r\\n    padding-right: 1.75rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:pt-4 {\\r\\n    padding-top: 1rem;\\r\\n  }\\r\\n\\r\\n  .md\\\\:shadow-none {\\r\\n    --tw-shadow: 0 0 #0000;\\r\\n    --tw-shadow-colored: 0 0 #0000;\\r\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\r\\n  }\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\",\"<no source>\"],\"names\":[],\"mappings\":\"AAAA;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;CAAc;;AAAd;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,4NAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;AAEd;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,eAAmB;EAAnB,eAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,sBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,qBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,+EAAmB;EAAnB,mGAAmB;EAAnB;AAAmB;AAAnB;EAAA,6EAAmB;EAAnB,iGAAmB;EAAnB;AAAmB;AAAnB;EAAA,0CAAmB;EAAnB,uDAAmB;EAAnB;AAAmB;AAAnB;EAAA,0BAAmB;EAAnB;AAAmB;AAAnB;EAAA,0BAAmB;EAAnB;AAAmB;AAAnB;EAAA,6BAAmB;EAAnB,+QAAmB;UAAnB;AAAmB;AAAnB;EAAA,8BAAmB;EAAnB,+QAAmB;UAAnB;AAAmB;AAAnB;EAAA,gKAAmB;EAAnB,wJAAmB;EAAnB,iLAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA,wBAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;;AAEnB;IACI,yBAAyB;IACzB,UAAU;AACd;AACA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,kCAA0B;YAA1B,0BAA0B;IAC1B,aAAa;EACf;AAhBF;EAAA,kBCAA;EDAA,kBCAA;EDAA;CCAA;ADAA;EAAA;CCAA;ADAA;EAAA,uBCAA;EDAA;CCAA;ADAA;EAAA,mBCAA;EDAA;CCAA;ADAA;EAAA,mBCAA;EDAA;CCAA;ADAA;EAAA,mBCAA;EDAA;CCAA;ADAA;EAAA,mBCAA;EDAA;CCAA;ADAA;EAAA;CCAA;ADAA;EAAA,qBCAA;EDAA;CCAA;ADAA;EAAA;CCAA;ADAA;EAAA,8ECAA;EDAA,kGCAA;EDAA;CCAA;ADAA;;EAAA;IAAA;GCAA;CAAA;ADAA;;EAAA;IAAA;GCAA;;EDAA;IAAA,mBCAA;IDAA;GCAA;;EDAA;IAAA,sBCAA;IDAA;GCAA;;EDAA;IAAA,iBCAA;IDAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA,mBCAA;IDAA;GCAA;;EDAA;IAAA,sBCAA;IDAA;GCAA;;EDAA;IAAA;GCAA;;EDAA;IAAA,uBCAA;IDAA,+BCAA;IDAA;GCAA;CAAA\",\"sourcesContent\":[\"@tailwind base;\\r\\n@tailwind components;\\r\\n@tailwind utilities;\\r\\n\\r\\nbody{\\r\\n    background-color: #000102;\\r\\n    color:#333;\\r\\n}\\r\\n.backdrop-filter-blur {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    backdrop-filter: blur(5px);\\r\\n    z-index: 9999;\\r\\n  }\",null],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/ // css base code, injected by the css-loader\r\n// eslint-disable-next-line func-names\r\nmodule.exports = function(useSourceMap) {\r\n    var list = [] // return the list of modules as css string\r\n    ;\r\n    list.toString = function toString() {\r\n        return this.map(function(item) {\r\n            var content = cssWithMappingToString(item, useSourceMap);\r\n            if (item[2]) {\r\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\r\n            }\r\n            return content;\r\n        }).join(\"\");\r\n    } // import a list of modules into the list\r\n    ;\r\n    // eslint-disable-next-line func-names\r\n    list.i = function(modules, mediaQuery, dedupe) {\r\n        if (typeof modules === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign\r\n            modules = [\r\n                [\r\n                    null,\r\n                    modules,\r\n                    \"\"\r\n                ]\r\n            ];\r\n        }\r\n        var alreadyImportedModules = {};\r\n        if (dedupe) {\r\n            for(var i = 0; i < this.length; i++){\r\n                // eslint-disable-next-line prefer-destructuring\r\n                var id = this[i][0];\r\n                if (id != null) {\r\n                    alreadyImportedModules[id] = true;\r\n                }\r\n            }\r\n        }\r\n        for(var _i = 0; _i < modules.length; _i++){\r\n            var item = [].concat(modules[_i]);\r\n            if (dedupe && alreadyImportedModules[item[0]]) {\r\n                continue;\r\n            }\r\n            if (mediaQuery) {\r\n                if (!item[2]) {\r\n                    item[2] = mediaQuery;\r\n                } else {\r\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\r\n                }\r\n            }\r\n            list.push(item);\r\n        }\r\n    };\r\n    return list;\r\n};\r\nfunction cssWithMappingToString(item, useSourceMap) {\r\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\r\n    ;\r\n    var cssMapping = item[3];\r\n    if (!cssMapping) {\r\n        return content;\r\n    }\r\n    if (useSourceMap && typeof btoa === \"function\") {\r\n        var sourceMapping = toComment(cssMapping);\r\n        var sourceURLs = cssMapping.sources.map(function(source) {\r\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\r\n        });\r\n        return [\r\n            content\r\n        ].concat(sourceURLs).concat([\r\n            sourceMapping\r\n        ]).join(\"\\n\");\r\n    }\r\n    return [\r\n        content\r\n    ].join(\"\\n\");\r\n} // Adapted from convert-source-map (MIT)\r\nfunction toComment(sourceMap) {\r\n    // eslint-disable-next-line no-undef\r\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\r\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\r\n    return \"/*# \".concat(data, \" */\");\r\n}\r\n\r\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzP2NhNGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbi8qXHJcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XHJcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcclxuICAgIDtcclxuICAgIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xyXG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcclxuICAgICAgICAgICAgaWYgKGl0ZW1bMl0pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBjb250ZW50O1xyXG4gICAgICAgIH0pLmpvaW4oXCJcIik7XHJcbiAgICB9IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcbiAgICA7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xyXG4gICAgbGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxyXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xyXG4gICAgICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcclxuICAgICAgICAgICAgICAgICAgICBcIlwiXHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcbiAgICAgICAgaWYgKGRlZHVwZSkge1xyXG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcclxuICAgICAgICAgICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XHJcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKyl7XHJcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcclxuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFpdGVtWzJdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBsaXN0O1xyXG59O1xyXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xyXG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8IFwiXCIgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXHJcbiAgICA7XHJcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XHJcbiAgICBpZiAoIWNzc01hcHBpbmcpIHtcclxuICAgICAgICByZXR1cm4gY29udGVudDtcclxuICAgIH1cclxuICAgIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xyXG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIGNvbnRlbnRcclxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xyXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXHJcbiAgICAgICAgXSkuam9pbihcIlxcblwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgY29udGVudFxyXG4gICAgXS5qb2luKFwiXFxuXCIpO1xyXG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcclxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXHJcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcclxuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcclxuICAgIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\r\n                    // By default, style-loader injects CSS into the bottom\r\n                    // of <head>. This causes ordering problems between dev\r\n                    // and prod. To fix this, we render a <noscript> tag as\r\n                    // an anchor for the styles to be placed before. These\r\n                    // styles will be applied _before_ <style jsx global>.\r\n                    // These elements should always exist. If they do not,\r\n                    // this code should fail.\r\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\r\n                    var parentNode = anchorElement.parentNode// Normally <head>\r\n                    ;\r\n                    // Each style tag should be placed right before our\r\n                    // anchor. By inserting before and not after, we do not\r\n                    // need to track the last inserted element.\r\n                    parentNode.insertBefore(element, anchorElement);\r\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\r\n    if (!a && b || a && !b) {\r\n        return false;\r\n    }\r\n    let p;\r\n    for(p in a){\r\n        if (isNamedExport && p === \"default\") {\r\n            continue;\r\n        }\r\n        if (a[p] !== b[p]) {\r\n            return false;\r\n        }\r\n    }\r\n    for(p in b){\r\n        if (isNamedExport && p === \"default\") {\r\n            continue;\r\n        }\r\n        if (!a[p]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG9OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQyx1ZUFBK087O0FBRWpSOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSx1ZUFBK087QUFDclA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyx1ZUFBK087O0FBRXpROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz9jOTgzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzhdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cclxuICAgICAgICAgICAgICAgICAgICAvLyBvZiA8aGVhZD4uIFRoaXMgY2F1c2VzIG9yZGVyaW5nIHByb2JsZW1zIGJldHdlZW4gZGV2XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0eWxlcyB3aWxsIGJlIGFwcGxpZWQgX2JlZm9yZV8gPHN0eWxlIGpzeCBnbG9iYWw+LlxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XHJcbiAgICAgICAgICAgICAgICAgICAgO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcclxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XHJcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgbGV0IHA7XHJcbiAgICBmb3IocCBpbiBhKXtcclxuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZvcihwIGluIGIpe1xyXG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWFbcF0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzhdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzhdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nconst isOldIE = function isOldIE() {\r\n    let memo;\r\n    return function memorize() {\r\n        if (typeof memo === \"undefined\") {\r\n            // Test for IE <= 9 as proposed by Browserhacks\r\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\r\n            // Tests for existence of standard globals is to allow style-loader\r\n            // to operate correctly into non-standard environments\r\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\r\n            memo = Boolean(window && document && document.all && !window.atob);\r\n        }\r\n        return memo;\r\n    };\r\n}();\r\nconst getTarget = function getTarget() {\r\n    const memo = {};\r\n    return function memorize(target) {\r\n        if (typeof memo[target] === \"undefined\") {\r\n            let styleTarget = document.querySelector(target);\r\n            // Special case to return head of iframe instead of iframe itself\r\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n                try {\r\n                    // This will throw an exception if access to iframe is blocked\r\n                    // due to cross-origin restrictions\r\n                    styleTarget = styleTarget.contentDocument.head;\r\n                } catch (e) {\r\n                    // istanbul ignore next\r\n                    styleTarget = null;\r\n                }\r\n            }\r\n            memo[target] = styleTarget;\r\n        }\r\n        return memo[target];\r\n    };\r\n}();\r\nconst stylesInDom = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n    let result = -1;\r\n    for(let i = 0; i < stylesInDom.length; i++){\r\n        if (stylesInDom[i].identifier === identifier) {\r\n            result = i;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n    const idCountMap = {};\r\n    const identifiers = [];\r\n    for(let i = 0; i < list.length; i++){\r\n        const item = list[i];\r\n        const id = options.base ? item[0] + options.base : item[0];\r\n        const count = idCountMap[id] || 0;\r\n        const identifier = id + \" \" + count.toString();\r\n        idCountMap[id] = count + 1;\r\n        const index = getIndexByIdentifier(identifier);\r\n        const obj = {\r\n            css: item[1],\r\n            media: item[2],\r\n            sourceMap: item[3]\r\n        };\r\n        if (index !== -1) {\r\n            stylesInDom[index].references++;\r\n            stylesInDom[index].updater(obj);\r\n        } else {\r\n            stylesInDom.push({\r\n                identifier: identifier,\r\n                updater: addStyle(obj, options),\r\n                references: 1\r\n            });\r\n        }\r\n        identifiers.push(identifier);\r\n    }\r\n    return identifiers;\r\n}\r\nfunction insertStyleElement(options) {\r\n    const style = document.createElement(\"style\");\r\n    const attributes = options.attributes || {};\r\n    if (typeof attributes.nonce === \"undefined\") {\r\n        const nonce = // eslint-disable-next-line no-undef\r\n         true ? __webpack_require__.nc : 0;\r\n        if (nonce) {\r\n            attributes.nonce = nonce;\r\n        }\r\n    }\r\n    Object.keys(attributes).forEach(function(key) {\r\n        style.setAttribute(key, attributes[key]);\r\n    });\r\n    if (typeof options.insert === \"function\") {\r\n        options.insert(style);\r\n    } else {\r\n        const target = getTarget(options.insert || \"head\");\r\n        if (!target) {\r\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n        }\r\n        target.appendChild(style);\r\n    }\r\n    return style;\r\n}\r\nfunction removeStyleElement(style) {\r\n    // istanbul ignore if\r\n    if (style.parentNode === null) {\r\n        return false;\r\n    }\r\n    style.parentNode.removeChild(style);\r\n}\r\n/* istanbul ignore next  */ const replaceText = function replaceText() {\r\n    const textStore = [];\r\n    return function replace(index, replacement) {\r\n        textStore[index] = replacement;\r\n        return textStore.filter(Boolean).join(\"\\n\");\r\n    };\r\n}();\r\nfunction applyToSingletonTag(style, index, remove, obj) {\r\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\r\n    // For old IE\r\n    /* istanbul ignore if  */ if (style.styleSheet) {\r\n        style.styleSheet.cssText = replaceText(index, css);\r\n    } else {\r\n        const cssNode = document.createTextNode(css);\r\n        const childNodes = style.childNodes;\r\n        if (childNodes[index]) {\r\n            style.removeChild(childNodes[index]);\r\n        }\r\n        if (childNodes.length) {\r\n            style.insertBefore(cssNode, childNodes[index]);\r\n        } else {\r\n            style.appendChild(cssNode);\r\n        }\r\n    }\r\n}\r\nfunction applyToTag(style, options, obj) {\r\n    let css = obj.css;\r\n    const media = obj.media;\r\n    const sourceMap = obj.sourceMap;\r\n    if (media) {\r\n        style.setAttribute(\"media\", media);\r\n    } else {\r\n        style.removeAttribute(\"media\");\r\n    }\r\n    if (sourceMap && typeof btoa !== \"undefined\") {\r\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n    }\r\n    // For old IE\r\n    /* istanbul ignore if  */ if (style.styleSheet) {\r\n        style.styleSheet.cssText = css;\r\n    } else {\r\n        while(style.firstChild){\r\n            style.removeChild(style.firstChild);\r\n        }\r\n        style.appendChild(document.createTextNode(css));\r\n    }\r\n}\r\nlet singleton = null;\r\nlet singletonCounter = 0;\r\nfunction addStyle(obj, options) {\r\n    let style;\r\n    let update;\r\n    let remove;\r\n    if (options.singleton) {\r\n        const styleIndex = singletonCounter++;\r\n        style = singleton || (singleton = insertStyleElement(options));\r\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\r\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\r\n    } else {\r\n        style = insertStyleElement(options);\r\n        update = applyToTag.bind(null, style, options);\r\n        remove = function() {\r\n            removeStyleElement(style);\r\n        };\r\n    }\r\n    update(obj);\r\n    return function updateStyle(newObj) {\r\n        if (newObj) {\r\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\r\n                return;\r\n            }\r\n            update(obj = newObj);\r\n        } else {\r\n            remove();\r\n        }\r\n    };\r\n}\r\nmodule.exports = function(list, options) {\r\n    options = options || {};\r\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n    // tags it will allow on a page\r\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\r\n        options.singleton = isOldIE();\r\n    }\r\n    list = list || [];\r\n    let lastIdentifiers = modulesToDom(list, options);\r\n    return function update(newList) {\r\n        newList = newList || [];\r\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\r\n            return;\r\n        }\r\n        for(let i = 0; i < lastIdentifiers.length; i++){\r\n            const identifier = lastIdentifiers[i];\r\n            const index = getIndexByIdentifier(identifier);\r\n            stylesInDom[index].references--;\r\n        }\r\n        const newLastIdentifiers = modulesToDom(newList, options);\r\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\r\n            const identifier = lastIdentifiers[i1];\r\n            const index = getIndexByIdentifier(identifier);\r\n            if (stylesInDom[index].references === 0) {\r\n                stylesInDom[index].updater();\r\n                stylesInDom.splice(index, 1);\r\n            }\r\n        }\r\n        lastIdentifiers = newLastIdentifiers;\r\n    };\r\n};\r\n\r\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/get-hostname.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-hostname.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getHostname = getHostname;\nfunction getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(\":\")[0].toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELG1CQUFtQixHQUFHRTtBQUN0QixTQUFTQSxZQUFZQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtJQUNsQyxJQUFJQztJQUNKLE9BQU8sQ0FBQ0EsTUFBTSxDQUFDQyxNQUFNQyxPQUFPLENBQUNILFdBQVcsSUFBSSxHQUFHLEtBQUssSUFBSUEsUUFBUUksSUFBSSxLQUFNSixDQUFBQSxXQUFXLElBQUksR0FBRyxLQUFLLElBQUlBLFFBQVFJLElBQUksS0FBS0wsT0FBT00sUUFBUSxLQUFLLElBQUksR0FBRyxLQUFLLElBQUlKLElBQUlLLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDQyxXQUFXLEVBQUU7QUFDN0wsRUFFQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2dldC1ob3N0bmFtZS5qcz80Y2Y5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5leHBvcnRzLmdldEhvc3RuYW1lID0gZ2V0SG9zdG5hbWU7XHJcbmZ1bmN0aW9uIGdldEhvc3RuYW1lKHBhcnNlZCwgaGVhZGVycykge1xyXG4gICAgdmFyIHJlZjtcclxuICAgIHJldHVybiAocmVmID0gIUFycmF5LmlzQXJyYXkoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5ob3N0KSAmJiAoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5ob3N0KSB8fCBwYXJzZWQuaG9zdG5hbWUpID09IG51bGwgPyB2b2lkIDAgOiByZWYuc3BsaXQoJzonKVswXS50b0xvd2VyQ2FzZSgpO1xyXG59XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtaG9zdG5hbWUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0SG9zdG5hbWUiLCJwYXJzZWQiLCJoZWFkZXJzIiwicmVmIiwiQXJyYXkiLCJpc0FycmF5IiwiaG9zdCIsImhvc3RuYW1lIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/get-hostname.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(\":\")[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n} //# sourceMappingURL=detect-domain-locale.js.map\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCwwQkFBMEIsR0FBR0U7QUFDN0IsU0FBU0EsbUJBQW1CQyxXQUFXLEVBQUVDLFFBQVEsRUFBRUMsY0FBYyxFQUFFO0lBQy9ELElBQUlDO0lBQ0osSUFBSUgsYUFBYTtRQUNiLElBQUlFLGdCQUFnQjtZQUNoQkEsaUJBQWlCQSxlQUFlRSxXQUFXO1FBQy9DLENBQUM7UUFDRCxLQUFLLE1BQU1DLFFBQVFMLFlBQVk7WUFDM0IsSUFBSU0sS0FBS0M7WUFDVCx5QkFBeUI7WUFDekIsTUFBTUMsaUJBQWlCLENBQUNGLE1BQU1ELEtBQUtJLE1BQU0sS0FBSyxJQUFJLEdBQUcsS0FBSyxJQUFJSCxJQUFJSSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ04sV0FBVyxFQUFFO1lBQzdGLElBQUlILGFBQWFPLGtCQUFrQk4sbUJBQW1CRyxLQUFLTSxhQUFhLENBQUNQLFdBQVcsTUFBTyxFQUFDRyxPQUFPRixLQUFLTyxPQUFPLEtBQUssSUFBSSxHQUFHLEtBQUssSUFBSUwsS0FBS00sSUFBSSxDQUFDLENBQUNDLFNBQVNBLE9BQU9WLFdBQVcsT0FBT0YsZUFBZSxHQUFHO2dCQUMvTEMsYUFBYUU7Z0JBQ2IsS0FBTTtZQUNWLENBQUM7UUFDTDtJQUNKLENBQUM7SUFDRCxPQUFPRjtBQUNYLEVBRUEsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzPzc4ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gICAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuZGV0ZWN0RG9tYWluTG9jYWxlID0gZGV0ZWN0RG9tYWluTG9jYWxlO1xyXG5mdW5jdGlvbiBkZXRlY3REb21haW5Mb2NhbGUoZG9tYWluSXRlbXMsIGhvc3RuYW1lLCBkZXRlY3RlZExvY2FsZSkge1xyXG4gICAgbGV0IGRvbWFpbkl0ZW07XHJcbiAgICBpZiAoZG9tYWluSXRlbXMpIHtcclxuICAgICAgICBpZiAoZGV0ZWN0ZWRMb2NhbGUpIHtcclxuICAgICAgICAgICAgZGV0ZWN0ZWRMb2NhbGUgPSBkZXRlY3RlZExvY2FsZS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZG9tYWluSXRlbXMpe1xyXG4gICAgICAgICAgICB2YXIgcmVmLCByZWYxO1xyXG4gICAgICAgICAgICAvLyByZW1vdmUgcG9ydCBpZiBwcmVzZW50XHJcbiAgICAgICAgICAgIGNvbnN0IGRvbWFpbkhvc3RuYW1lID0gKHJlZiA9IGl0ZW0uZG9tYWluKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLnNwbGl0KCc6JylbMF0udG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgaWYgKGhvc3RuYW1lID09PSBkb21haW5Ib3N0bmFtZSB8fCBkZXRlY3RlZExvY2FsZSA9PT0gaXRlbS5kZWZhdWx0TG9jYWxlLnRvTG93ZXJDYXNlKCkgfHwgKChyZWYxID0gaXRlbS5sb2NhbGVzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmMS5zb21lKChsb2NhbGUpPT5sb2NhbGUudG9Mb3dlckNhc2UoKSA9PT0gZGV0ZWN0ZWRMb2NhbGUpKSkge1xyXG4gICAgICAgICAgICAgICAgZG9tYWluSXRlbSA9IGl0ZW07XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBkb21haW5JdGVtO1xyXG59XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJkb21haW5JdGVtcyIsImhvc3RuYW1lIiwiZGV0ZWN0ZWRMb2NhbGUiLCJkb21haW5JdGVtIiwidG9Mb3dlckNhc2UiLCJpdGVtIiwicmVmIiwicmVmMSIsImRvbWFpbkhvc3RuYW1lIiwiZG9tYWluIiwic3BsaXQiLCJkZWZhdWx0TG9jYWxlIiwibG9jYWxlcyIsInNvbWUiLCJsb2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\n"));

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _supabase_auth_helpers_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/auth-helpers-react */ \"./node_modules/@supabase/auth-helpers-react/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var javascript_time_ago__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! javascript-time-ago */ \"./node_modules/javascript-time-ago/index.js\");\n/* harmony import */ var javascript_time_ago_locale_en_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! javascript-time-ago/locale/en.json */ \"./node_modules/javascript-time-ago/locale/en.json.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\njavascript_time_ago__WEBPACK_IMPORTED_MODULE_5__[\"default\"].addDefaultLocale(javascript_time_ago_locale_en_json__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\nfunction App(param) {\n    let { Component , pageProps  } = param;\n    _s();\n    const [supabaseClient] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(()=>(0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_2__.createBrowserSupabaseClient)());\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_supabase_auth_helpers_react__WEBPACK_IMPORTED_MODULE_3__.SessionContextProvider, {\n        supabaseClient: supabaseClient,\n        initialSession: pageProps.initialSession,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\akpar\\\\Documents\\\\VS web\\\\clone\\\\ShareHub\\\\ShareHub\\\\pages\\\\_app.tsx\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\akpar\\\\Documents\\\\VS web\\\\clone\\\\ShareHub\\\\ShareHub\\\\pages\\\\_app.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n_s(App, \"klUJ6n2ATJXlRb9+RDifFQuy3+k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQThCO0FBQzRDO0FBQ0w7QUFFckM7QUFDUztBQUdVO0FBR25ERyw0RUFBd0IsQ0FBQ0MsMEVBQUVBO0FBRVosU0FBU0UsSUFBSSxLQUFrQyxFQUFFO1FBQXBDLEVBQUVDLFVBQVMsRUFBRUMsVUFBUyxFQUFZLEdBQWxDOztJQUMxQixNQUFNLENBQUNDLGVBQWUsR0FBR1AsK0NBQVFBLENBQUMsSUFBTUYsMEZBQTJCQTtJQUNuRSxxQkFDRSw4REFBQ0MsZ0ZBQXNCQTtRQUNyQlEsZ0JBQWdCQTtRQUNoQkMsZ0JBQWdCRixVQUFVRSxjQUFjO2tCQUV4Qyw0RUFBQ0g7WUFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7OztBQUc5QixDQUFDO0dBVnVCRjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJ1xyXG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyU3VwYWJhc2VDbGllbnR9IGZyb20gJ0BzdXBhYmFzZS9hdXRoLWhlbHBlcnMtbmV4dGpzJ1xyXG5pbXBvcnQgeyBTZXNzaW9uQ29udGV4dFByb3ZpZGVyIH0gZnJvbSAnQHN1cGFiYXNlL2F1dGgtaGVscGVycy1yZWFjdCdcclxuaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJ1xyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgVGltZUFnbyBmcm9tICdqYXZhc2NyaXB0LXRpbWUtYWdvJ1xyXG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSBcIm5leHQtdGhlbWVzXCJcclxuXHJcbmltcG9ydCBlbiBmcm9tICdqYXZhc2NyaXB0LXRpbWUtYWdvL2xvY2FsZS9lbi5qc29uJ1xyXG5cclxuXHJcblRpbWVBZ28uYWRkRGVmYXVsdExvY2FsZShlbilcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XHJcbiAgY29uc3QgW3N1cGFiYXNlQ2xpZW50XSA9IHVzZVN0YXRlKCgpID0+IGNyZWF0ZUJyb3dzZXJTdXBhYmFzZUNsaWVudCgpKVxyXG4gIHJldHVybiAoXHJcbiAgICA8U2Vzc2lvbkNvbnRleHRQcm92aWRlclxyXG4gICAgICBzdXBhYmFzZUNsaWVudD17c3VwYWJhc2VDbGllbnR9XHJcbiAgICAgIGluaXRpYWxTZXNzaW9uPXtwYWdlUHJvcHMuaW5pdGlhbFNlc3Npb259XHJcbiAgICA+XHJcbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxuICAgIDwvU2Vzc2lvbkNvbnRleHRQcm92aWRlcj5cclxuICApXHJcbn1cclxuIl0sIm5hbWVzIjpbImNyZWF0ZUJyb3dzZXJTdXBhYmFzZUNsaWVudCIsIlNlc3Npb25Db250ZXh0UHJvdmlkZXIiLCJ1c2VTdGF0ZSIsIlRpbWVBZ28iLCJlbiIsImFkZERlZmF1bHRMb2NhbGUiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJzdXBhYmFzZUNsaWVudCIsImluaXRpYWxTZXNzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\r\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;(()=>{var i={412:function(i,s){\r\n/*!@license\r\n * UAParser.js v0.7.28\r\n * Lightweight JavaScript-based User-Agent string parser\r\n * https://github.com/faisalman/ua-parser-js\r\n *\r\n * Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\r\n * Licensed under MIT License\r\n */\r\n(function(e,o){\"use strict\";var r=\"0.7.28\",a=\"\",n=\"?\",t=\"function\",l=\"undefined\",w=\"object\",d=\"string\",b=\"major\",u=\"model\",c=\"name\",m=\"type\",p=\"vendor\",f=\"version\",h=\"architecture\",g=\"console\",v=\"mobile\",x=\"tablet\",k=\"smarttv\",_=\"wearable\",y=\"embedded\",S=255;var E={extend:function(i,s){var e={};for(var o in i){if(s[o]&&s[o].length%2===0){e[o]=s[o].concat(i[o])}else{e[o]=i[o]}}return e},has:function(i,s){return typeof i===d?s.toLowerCase().indexOf(i.toLowerCase())!==-1:false},lowerize:function(i){return i.toLowerCase()},major:function(i){return typeof i===d?i.replace(/[^\\d\\.]/g,\"\").split(\".\")[0]:o},trim:function(i,s){i=i.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\");return typeof s===l?i:i.substring(0,S)}};var A={rgx:function(i,s){var e=0,r,a,n,l,d,b;while(e<s.length&&!d){var u=s[e],c=s[e+1];r=a=0;while(r<u.length&&!d){d=u[r++].exec(i);if(!!d){for(n=0;n<c.length;n++){b=d[++a];l=c[n];if(typeof l===w&&l.length>0){if(l.length==2){if(typeof l[1]==t){this[l[0]]=l[1].call(this,b)}else{this[l[0]]=l[1]}}else if(l.length==3){if(typeof l[1]===t&&!(l[1].exec&&l[1].test)){this[l[0]]=b?l[1].call(this,b,l[2]):o}else{this[l[0]]=b?b.replace(l[1],l[2]):o}}else if(l.length==4){this[l[0]]=b?l[3].call(this,b.replace(l[1],l[2])):o}}else{this[l]=b?b:o}}}}e+=2}},str:function(i,s){for(var e in s){if(typeof s[e]===w&&s[e].length>0){for(var r=0;r<s[e].length;r++){if(E.has(s[e][r],i)){return e===n?o:e}}}else if(E.has(s[e],i)){return e===n?o:e}}return i}};var N={browser:{oldSafari:{version:{\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"}},oldEdge:{version:{.1:\"12.\",21:\"13.\",31:\"14.\",39:\"15.\",41:\"16.\",42:\"17.\",44:\"18.\"}}},os:{windows:{version:{ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"}}}};var T={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[f,[c,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[f,[c,\"Edge\"]],[/(opera\\smini)\\/([\\w\\.-]+)/i,/(opera\\s[mobiletab]{3,6})\\b.+version\\/([\\w\\.-]+)/i,/(opera)(?:.+version\\/|[\\/\\s]+)([\\w\\.]+)/i],[c,f],[/opios[\\/\\s]+([\\w\\.]+)/i],[f,[c,\"Opera Mini\"]],[/\\sopr\\/([\\w\\.]+)/i],[f,[c,\"Opera\"]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,/(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/\\s]?([\\w\\.]+)/i,/(?:ms|\\()(ie)\\s([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i,/(rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[c,f],[/(?:[\\s\\/]uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i],[f,[c,\"UCBrowser\"]],[/(?:windowswechat)?\\sqbcore\\/([\\w\\.]+)\\b.*(?:windowswechat)?/i],[f,[c,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[f,[c,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[f,[c,\"Konqueror\"]],[/trident.+rv[:\\s]([\\w\\.]{1,9})\\b.+like\\sgecko/i],[f,[c,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[f,[c,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 Secure Browser\"],f],[/focus\\/([\\w\\.]+)/i],[f,[c,\"Firefox Focus\"]],[/opt\\/([\\w\\.]+)/i],[f,[c,\"Opera Touch\"]],[/coc_coc_browser\\/([\\w\\.]+)/i],[f,[c,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[f,[c,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[f,[c,\"Opera Coast\"]],[/xiaomi\\/miuibrowser\\/([\\w\\.]+)/i],[f,[c,\"MIUI Browser\"]],[/fxios\\/([\\w\\.-]+)/i],[f,[c,\"Firefox\"]],[/(qihu|qhbrowser|qihoobrowser|360browser)/i],[[c,\"360 Browser\"]],[/(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 Browser\"],f],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[c,/_/g,\" \"],f],[/\\s(electron)\\/([\\w\\.]+)\\ssafari/i,/(tesla)(?:\\sqtcarbrowser|\\/(20[12]\\d\\.[\\w\\.-]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/\\s]?([\\w\\.]+)/i],[c,f],[/(MetaSr)[\\/\\s]?([\\w\\.]+)/i,/(LBBROWSER)/i],[c],[/;fbav\\/([\\w\\.]+);/i],[f,[c,\"Facebook\"]],[/FBAN\\/FBIOS|FB_IAB\\/FB4A/i],[[c,\"Facebook\"]],[/safari\\s(line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/\\s]([\\w\\.-]+)/i],[c,f],[/\\bgsa\\/([\\w\\.]+)\\s.*safari\\//i],[f,[c,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)|\\s)/i],[f,[c,\"Chrome Headless\"]],[/\\swv\\).+(chrome)\\/([\\w\\.]+)/i],[[c,\"Chrome WebView\"],f],[/droid.+\\sversion\\/([\\w\\.]+)\\b.+(?:mobile\\ssafari|safari)/i],[f,[c,\"Android Browser\"]],[/(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i],[c,f],[/version\\/([\\w\\.]+)\\s.*mobile\\/\\w+\\s(safari)/i],[f,[c,\"Mobile Safari\"]],[/version\\/([\\w\\.]+)\\s.*(mobile\\s?safari|safari)/i],[f,c],[/webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i],[c,[f,A.str,N.browser.oldSafari.version]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[c,f],[/(navigator|netscape)\\/([\\w\\.-]+)/i],[[c,\"Netscape\"],f],[/ile\\svr;\\srv:([\\w\\.]+)\\).+firefox/i],[f,[c,\"Firefox Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,/(firefox)\\/([\\w\\.]+)\\s[\\w\\s\\-]+\\/[\\w\\.]+$/i,/(mozilla)\\/([\\w\\.]+)\\s.+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,/(links)\\s\\(([\\w\\.]+)/i,/(gobrowser)\\/?([\\w\\.]*)/i,/(ice\\s?browser)\\/v?([\\w\\._]+)/i,/(mosaic)[\\/\\s]([\\w\\.]+)/i],[c,f]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,E.lowerize]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|armv?8e?l?)\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows\\s(ce|mobile);\\sppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i],[[h,/ower/,\"\",E.lowerize]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,E.lowerize]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus\\s10)/i],[u,[p,\"Samsung\"],[m,x]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy\\snexus)/i,/\\ssamsung[\\s-]([\\w-]+)/i,/sec-(sgh\\w+)/i],[u,[p,\"Samsung\"],[m,v]],[/\\((ip(?:hone|od)[\\s\\w]*);/i],[u,[p,\"Apple\"],[m,v]],[/\\((ipad);[\\w\\s\\),;-]+apple/i,/applecoremedia\\/[\\w\\.]+\\s\\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[u,[p,\"Apple\"],[m,x]],[/\\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\\d{2})/i],[u,[p,\"Huawei\"],[m,x]],[/d\\/huawei([\\w\\s-]+)[;\\)]/i,/\\b(nexus\\s6p|vog-[at]?l\\d\\d|ane-[at]?l[x\\d]\\d|eml-a?l\\d\\da?|lya-[at]?l\\d[\\dc]|clt-a?l\\d\\di?|ele-l\\d\\d)/i,/\\b(\\w{2,4}-[atu][ln][01259][019])[;\\)\\s]/i],[u,[p,\"Huawei\"],[m,v]],[/\\b(poco[\\s\\w]+)(?:\\sbuild|\\))/i,/\\b;\\s(\\w+)\\sbuild\\/hm\\1/i,/\\b(hm[\\s\\-_]?note?[\\s_]?(?:\\d\\w)?)\\sbuild/i,/\\b(redmi[\\s\\-_]?(?:note|k)?[\\w\\s_]+)(?:\\sbuild|\\))/i,/\\b(mi[\\s\\-_]?(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]?(?:\\d?\\w?)[\\s_]?(?:plus)?)\\sbuild/i],[[u,/_/g,\" \"],[p,\"Xiaomi\"],[m,v]],[/\\b(mi[\\s\\-_]?(?:pad)(?:[\\w\\s_]+))(?:\\sbuild|\\))/i],[[u,/_/g,\" \"],[p,\"Xiaomi\"],[m,x]],[/;\\s(\\w+)\\sbuild.+\\soppo/i,/\\s(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007)\\b/i],[u,[p,\"OPPO\"],[m,v]],[/\\svivo\\s(\\w+)(?:\\sbuild|\\))/i,/\\s(v[12]\\d{3}\\w?[at])(?:\\sbuild|;)/i],[u,[p,\"Vivo\"],[m,v]],[/\\s(rmx[12]\\d{3})(?:\\sbuild|;)/i],[u,[p,\"Realme\"],[m,v]],[/\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)\\b[\\w\\s]+build\\//i,/\\smot(?:orola)?[\\s-](\\w*)/i,/((?:moto[\\s\\w\\(\\)]+|xt\\d{3,4}|nexus\\s6)(?=\\sbuild|\\)))/i],[u,[p,\"Motorola\"],[m,v]],[/\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i],[u,[p,\"Motorola\"],[m,x]],[/((?=lg)?[vl]k\\-?\\d{3})\\sbuild|\\s3\\.[\\s\\w;-]{10}lg?-([06cv9]{3,4})/i],[u,[p,\"LG\"],[m,x]],[/(lm-?f100[nv]?|nexus\\s[45])/i,/lg[e;\\s\\/-]+((?!browser|netcast)\\w+)/i,/\\blg(\\-?[\\d\\w]+)\\sbuild/i],[u,[p,\"LG\"],[m,v]],[/(ideatab[\\w\\-\\s]+)/i,/lenovo\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+)|yt[\\d\\w-]{6}|tb[\\d\\w-]{6})/i],[u,[p,\"Lenovo\"],[m,x]],[/(?:maemo|nokia).*(n900|lumia\\s\\d+)/i,/nokia[\\s_-]?([\\w\\.-]*)/i],[[u,/_/g,\" \"],[p,\"Nokia\"],[m,v]],[/droid.+;\\s(pixel\\sc)[\\s)]/i],[u,[p,\"Google\"],[m,x]],[/droid.+;\\s(pixel[\\s\\daxl]{0,6})(?:\\sbuild|\\))/i],[u,[p,\"Google\"],[m,v]],[/droid.+\\s([c-g]\\d{4}|so[-l]\\w+|xq-a\\w[4-7][12])(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[u,[p,\"Sony\"],[m,v]],[/sony\\stablet\\s[ps]\\sbuild\\//i,/(?:sony)?sgp\\w+(?:\\sbuild\\/|\\))/i],[[u,\"Xperia Tablet\"],[p,\"Sony\"],[m,x]],[/\\s(kb2005|in20[12]5|be20[12][59])\\b/i,/\\ba000(1)\\sbuild/i,/\\boneplus\\s(a\\d{4})[\\s)]/i],[u,[p,\"OnePlus\"],[m,v]],[/(alexa)webm/i,/(kf[a-z]{2}wi)(\\sbuild\\/|\\))/i,/(kf[a-z]+)(\\sbuild\\/|\\)).+silk\\//i],[u,[p,\"Amazon\"],[m,x]],[/(sd|kf)[0349hijorstuw]+(\\sbuild\\/|\\)).+silk\\//i],[[u,\"Fire Phone\"],[p,\"Amazon\"],[m,v]],[/\\((playbook);[\\w\\s\\),;-]+(rim)/i],[u,p,[m,x]],[/((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10;\\s(\\w+)/i],[u,[p,\"BlackBerry\"],[m,v]],[/(?:\\b|asus_)(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus\\s7|padfone|p00[cj])/i],[u,[p,\"ASUS\"],[m,x]],[/\\s(z[es]6[027][01][km][ls]|zenfone\\s\\d\\w?)\\b/i],[u,[p,\"ASUS\"],[m,v]],[/(nexus\\s9)/i],[u,[p,\"HTC\"],[m,x]],[/(htc)[;_\\s-]{1,2}([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i,/(zte)-(\\w*)/i,/(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i],[p,[u,/_/g,\" \"],[m,v]],[/droid[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i],[u,[p,\"Acer\"],[m,x]],[/droid.+;\\s(m[1-5]\\snote)\\sbuild/i,/\\bmz-([\\w-]{2,})/i],[u,[p,\"Meizu\"],[m,v]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,/(hp)\\s([\\w\\s]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft);\\s(lumia[\\s\\w]+)/i,/(lenovo)[_\\s-]?([\\w-]+)/i,/linux;.+(jolla);/i,/droid.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i],[p,u,[m,v]],[/(archos)\\s(gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/\\s(nook)[\\w\\s]+build\\/(\\w+)/i,/(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i,/[;\\/]\\s?(le[\\s\\-]+pan)[\\s\\-]+(\\w{1,9})\\sbuild/i,/[;\\/]\\s?(trinity)[\\-\\s]*(t\\d{3})\\sbuild/i,/\\b(gigaset)[\\s\\-]+(q\\w{1,9})\\sbuild/i,/\\b(vodafone)\\s([\\w\\s]+)(?:\\)|\\sbuild)/i],[p,u,[m,x]],[/\\s(surface\\sduo)\\s/i],[u,[p,\"Microsoft\"],[m,x]],[/droid\\s[\\d\\.]+;\\s(fp\\du?)\\sbuild/i],[u,[p,\"Fairphone\"],[m,v]],[/\\s(u304aa)\\sbuild/i],[u,[p,\"AT&T\"],[m,v]],[/sie-(\\w*)/i],[u,[p,\"Siemens\"],[m,v]],[/[;\\/]\\s?(rct\\w+)\\sbuild/i],[u,[p,\"RCA\"],[m,x]],[/[;\\/\\s](venue[\\d\\s]{2,7})\\sbuild/i],[u,[p,\"Dell\"],[m,x]],[/[;\\/]\\s?(q(?:mv|ta)\\w+)\\sbuild/i],[u,[p,\"Verizon\"],[m,x]],[/[;\\/]\\s(?:barnes[&\\s]+noble\\s|bn[rt])([\\w\\s\\+]*)\\sbuild/i],[u,[p,\"Barnes & Noble\"],[m,x]],[/[;\\/]\\s(tm\\d{3}\\w+)\\sbuild/i],[u,[p,\"NuVision\"],[m,x]],[/;\\s(k88)\\sbuild/i],[u,[p,\"ZTE\"],[m,x]],[/;\\s(nx\\d{3}j)\\sbuild/i],[u,[p,\"ZTE\"],[m,v]],[/[;\\/]\\s?(gen\\d{3})\\sbuild.*49h/i],[u,[p,\"Swiss\"],[m,v]],[/[;\\/]\\s?(zur\\d{3})\\sbuild/i],[u,[p,\"Swiss\"],[m,x]],[/[;\\/]\\s?((zeki)?tb.*\\b)\\sbuild/i],[u,[p,\"Zeki\"],[m,x]],[/[;\\/]\\s([yr]\\d{2})\\sbuild/i,/[;\\/]\\s(dragon[\\-\\s]+touch\\s|dt)(\\w{5})\\sbuild/i],[[p,\"Dragon Touch\"],u,[m,x]],[/[;\\/]\\s?(ns-?\\w{0,9})\\sbuild/i],[u,[p,\"Insignia\"],[m,x]],[/[;\\/]\\s?((nxa|Next)-?\\w{0,9})\\sbuild/i],[u,[p,\"NextBook\"],[m,x]],[/[;\\/]\\s?(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05]))\\sbuild/i],[[p,\"Voice\"],u,[m,v]],[/[;\\/]\\s?(lvtel\\-)?(v1[12])\\sbuild/i],[[p,\"LvTel\"],u,[m,v]],[/;\\s(ph-1)\\s/i],[u,[p,\"Essential\"],[m,v]],[/[;\\/]\\s?(v(100md|700na|7011|917g).*\\b)\\sbuild/i],[u,[p,\"Envizen\"],[m,x]],[/[;\\/]\\s?(trio[\\s\\w\\-\\.]+)\\sbuild/i],[u,[p,\"MachSpeed\"],[m,x]],[/[;\\/]\\s?tu_(1491)\\sbuild/i],[u,[p,\"Rotor\"],[m,x]],[/(shield[\\w\\s]+)\\sbuild/i],[u,[p,\"Nvidia\"],[m,x]],[/(sprint)\\s(\\w+)/i],[p,u,[m,v]],[/(kin\\.[onetw]{3})/i],[[u,/\\./g,\" \"],[p,\"Microsoft\"],[m,v]],[/droid\\s[\\d\\.]+;\\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[u,[p,\"Zebra\"],[m,x]],[/droid\\s[\\d\\.]+;\\s(ec30|ps20|tc[2-8]\\d[kx])\\)/i],[u,[p,\"Zebra\"],[m,v]],[/\\s(ouya)\\s/i,/(nintendo)\\s([wids3utch]+)/i],[p,u,[m,g]],[/droid.+;\\s(shield)\\sbuild/i],[u,[p,\"Nvidia\"],[m,g]],[/(playstation\\s[345portablevi]+)/i],[u,[p,\"Sony\"],[m,g]],[/[\\s\\(;](xbox(?:\\sone)?(?!;\\sxbox))[\\s\\);]/i],[u,[p,\"Microsoft\"],[m,g]],[/smart-tv.+(samsung)/i],[p,[m,k]],[/hbbtv.+maple;(\\d+)/i],[[u,/^/,\"SmartTV\"],[p,\"Samsung\"],[m,k]],[/(?:linux;\\snetcast.+smarttv|lg\\snetcast\\.tv-201\\d)/i],[[p,\"LG\"],[m,k]],[/(apple)\\s?tv/i],[p,[u,\"Apple TV\"],[m,k]],[/crkey/i],[[u,\"Chromecast\"],[p,\"Google\"],[m,k]],[/droid.+aft([\\w])(\\sbuild\\/|\\))/i],[u,[p,\"Amazon\"],[m,k]],[/\\(dtv[\\);].+(aquos)/i],[u,[p,\"Sharp\"],[m,k]],[/hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i],[[p,E.trim],[u,E.trim],[m,k]],[/[\\s\\/\\(](android\\s|smart[-\\s]?|opera\\s)tv[;\\)\\s]/i],[[m,k]],[/((pebble))app\\/[\\d\\.]+\\s/i],[p,u,[m,_]],[/droid.+;\\s(glass)\\s\\d/i],[u,[p,\"Google\"],[m,_]],[/droid\\s[\\d\\.]+;\\s(wt63?0{2,3})\\)/i],[u,[p,\"Zebra\"],[m,_]],[/(tesla)(?:\\sqtcarbrowser|\\/20[12]\\d\\.[\\w\\.-]+)/i],[p,[m,y]],[/droid .+?; ([^;]+?)(?: build|\\) applewebkit).+? mobile safari/i],[u,[m,v]],[/droid .+?;\\s([^;]+?)(?: build|\\) applewebkit).+?(?! mobile) safari/i],[u,[m,x]],[/\\s(tablet|tab)[;\\/]/i,/\\s(mobile)(?:[;\\/]|\\ssafari)/i],[[m,E.lowerize]],[/(android[\\w\\.\\s\\-]{0,9});.+build/i],[u,[p,\"Generic\"]],[/(phone)/i],[[m,v]]],engine:[[/windows.+\\sedge\\/([\\w\\.]+)/i],[f,[c,\"EdgeHTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[f,[c,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,/(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i],[c,f],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[f,c]],os:[[/microsoft\\s(windows)\\s(vista|xp)/i],[c,f],[/(windows)\\snt\\s6\\.2;\\s(arm)/i,/(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,/(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)(?!.+xbox)/i],[c,[f,A.str,N.os.windows.version]],[/(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i],[[c,\"Windows\"],[f,A.str,N.os.windows.version]],[/ip[honead]{2,4}\\b(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i,/cfnetwork\\/.+darwin/i],[[f,/_/g,\".\"],[c,\"iOS\"]],[/(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,/(macintosh|mac(?=_powerpc)\\s)(?!.+haiku)/i],[[c,\"Mac OS\"],[f,/_/g,\".\"]],[/(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/\\s]([\\w\\.]+)/i,/\\((series40);/i],[c,f],[/\\(bb(10);/i],[f,[c,\"BlackBerry\"]],[/(?:symbian\\s?os|symbos|s60(?=;)|series60)[\\/\\s-]?([\\w\\.]*)/i],[f,[c,\"Symbian\"]],[/mozilla.+\\(mobile;.+gecko.+firefox/i],[[c,\"Firefox OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[f,[c,\"webOS\"]],[/crkey\\/([\\d\\.]+)/i],[f,[c,\"Chromecast\"]],[/(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i],[[c,\"Chromium OS\"],f],[/(nintendo|playstation)\\s([wids345portablevuch]+)/i,/(xbox);\\s+xbox\\s([^\\);]+)/i,/(mint)[\\/\\s\\(\\)]?(\\w*)/i,/(mageia|vectorlinux)[;\\s]/i,/(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\\sgnu\\/linux)?(?:\\slinux)?[\\/\\s-]?(?!chrom|package)([\\w\\.-]*)/i,/(hurd|linux)\\s?([\\w\\.]*)/i,/(gnu)\\s?([\\w\\.]*)/i,/\\s([frentopc-]{0,4}bsd|dragonfly)\\s?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku)\\s(\\w+)/i],[c,f],[/(sunos)\\s?([\\w\\.\\d]*)/i],[[c,\"Solaris\"],f],[/((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,/(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,/(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i,/(unix)\\s?([\\w\\.]*)/i],[c,f]]};var UAParser=function(i,s){if(typeof i===\"object\"){s=i;i=o}if(!(this instanceof UAParser)){return new UAParser(i,s).getResult()}var r=i||(typeof e!==\"undefined\"&&e.navigator&&e.navigator.userAgent?e.navigator.userAgent:a);var n=s?E.extend(T,s):T;this.getBrowser=function(){var i={name:o,version:o};A.rgx.call(i,r,n.browser);i.major=E.major(i.version);return i};this.getCPU=function(){var i={architecture:o};A.rgx.call(i,r,n.cpu);return i};this.getDevice=function(){var i={vendor:o,model:o,type:o};A.rgx.call(i,r,n.device);return i};this.getEngine=function(){var i={name:o,version:o};A.rgx.call(i,r,n.engine);return i};this.getOS=function(){var i={name:o,version:o};A.rgx.call(i,r,n.os);return i};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return r};this.setUA=function(i){r=typeof i===d&&i.length>S?E.trim(i,S):i;return this};this.setUA(r);return this};UAParser.VERSION=r;UAParser.BROWSER={NAME:c,MAJOR:b,VERSION:f};UAParser.CPU={ARCHITECTURE:h};UAParser.DEVICE={MODEL:u,VENDOR:p,TYPE:m,CONSOLE:g,MOBILE:v,SMARTTV:k,TABLET:x,WEARABLE:_,EMBEDDED:y};UAParser.ENGINE={NAME:c,VERSION:f};UAParser.OS={NAME:c,VERSION:f};if(typeof s!==l){if(\"object\"!==l&&i.exports){s=i.exports=UAParser}s.UAParser=UAParser}else{if(true){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return UAParser}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}else {}}var z=typeof e!==\"undefined\"&&(e.jQuery||e.Zepto);if(z&&!z.ua){var O=new UAParser;z.ua=O.getResult();z.ua.get=function(){return O.getUA()};z.ua.set=function(i){O.setUA(i);var s=O.getResult();for(var e in s){z.ua[e]=s[e]}}}})(typeof window===\"object\"?window:this)}};var s={};function __nccwpck_require__(e){var o=s[e];if(o!==undefined){return o.exports}var r=s[e]={exports:{}};var a=true;try{i[e].call(r.exports,r,r.exports,__nccwpck_require__);a=false}finally{if(a)delete s[e]}return r.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e=__nccwpck_require__(412);module.exports=e})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/error.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/server/web/error.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nclass PageSignatureError extends Error {\r\n    constructor({ page  }){\r\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\r\n  \r\n  export function middleware(request, event) {\r\n    return NextResponse.redirect('/new-location')\r\n  }\r\n  \r\n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\r\n  `);\r\n    }\r\n}\r\nexports.PageSignatureError = PageSignatureError;\r\nclass RemovedPageError extends Error {\r\n    constructor(){\r\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\r\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\r\n  `);\r\n    }\r\n}\r\nexports.RemovedPageError = RemovedPageError;\r\nclass RemovedUAError extends Error {\r\n    constructor(){\r\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\r\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\r\n  `);\r\n    }\r\n}\r\nexports.RemovedUAError = RemovedUAError;\r\n\r\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBLGtCQUFrQixPQUFPO0FBQ3pCLGlDQUFpQyxLQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9lcnJvci5qcz9lZjk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5jbGFzcyBQYWdlU2lnbmF0dXJlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHBhZ2UgIH0pe1xyXG4gICAgICAgIHN1cGVyKGBUaGUgbWlkZGxld2FyZSBcIiR7cGFnZX1cIiBhY2NlcHRzIGFuIGFzeW5jIEFQSSBkaXJlY3RseSB3aXRoIHRoZSBmb3JtOlxyXG4gIFxyXG4gIGV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3QsIGV2ZW50KSB7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KCcvbmV3LWxvY2F0aW9uJylcclxuICB9XHJcbiAgXHJcbiAgUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcclxuICBgKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlBhZ2VTaWduYXR1cmVFcnJvciA9IFBhZ2VTaWduYXR1cmVFcnJvcjtcclxuY2xhc3MgUmVtb3ZlZFBhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoYFRoZSByZXF1ZXN0LnBhZ2UgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgXFxgVVJMUGF0dGVyblxcYC5cclxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXHJcbiAgYCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5SZW1vdmVkUGFnZUVycm9yID0gUmVtb3ZlZFBhZ2VFcnJvcjtcclxuY2xhc3MgUmVtb3ZlZFVBRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC51YSBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXHJcbiAgUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLXBhcnNlLXVzZXItYWdlbnRcclxuICBgKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlJlbW92ZWRVQUVycm9yID0gUmVtb3ZlZFVBRXJyb3I7XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/error.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/next-url.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/server/web/next-url.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nvar _detectDomainLocale = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\");\r\nvar _formatNextPathnameInfo = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\");\r\nvar _getHostname = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"./node_modules/next/dist/shared/lib/get-hostname.js\");\r\nvar _getNextPathnameInfo = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\");\r\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\r\nfunction parseURL(url, base) {\r\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\r\n}\r\nconst Internal = Symbol(\"NextURLInternal\");\r\nclass NextURL {\r\n    constructor(input, baseOrOpts, opts){\r\n        let base;\r\n        let options;\r\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\r\n            base = baseOrOpts;\r\n            options = opts || {};\r\n        } else {\r\n            options = opts || baseOrOpts || {};\r\n        }\r\n        this[Internal] = {\r\n            url: parseURL(input, base ?? options.base),\r\n            options: options,\r\n            basePath: \"\"\r\n        };\r\n        this.analyzeUrl();\r\n    }\r\n    analyzeUrl() {\r\n        var ref, ref1, ref2, ref3, ref4;\r\n        const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(this[Internal].url.pathname, {\r\n            nextConfig: this[Internal].options.nextConfig,\r\n            parseData: !undefined\r\n        });\r\n        this[Internal].domainLocale = (0, _detectDomainLocale).detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, (0, _getHostname).getHostname(this[Internal].url, this[Internal].options.headers));\r\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\r\n        this[Internal].url.pathname = pathnameInfo.pathname;\r\n        this[Internal].defaultLocale = defaultLocale;\r\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\r\n        this[Internal].buildId = pathnameInfo.buildId;\r\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\r\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\r\n    }\r\n    formatPathname() {\r\n        return (0, _formatNextPathnameInfo).formatNextPathnameInfo({\r\n            basePath: this[Internal].basePath,\r\n            buildId: this[Internal].buildId,\r\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\r\n            locale: this[Internal].locale,\r\n            pathname: this[Internal].url.pathname,\r\n            trailingSlash: this[Internal].trailingSlash\r\n        });\r\n    }\r\n    formatSearch() {\r\n        return this[Internal].url.search;\r\n    }\r\n    get buildId() {\r\n        return this[Internal].buildId;\r\n    }\r\n    set buildId(buildId) {\r\n        this[Internal].buildId = buildId;\r\n    }\r\n    get locale() {\r\n        return this[Internal].locale ?? \"\";\r\n    }\r\n    set locale(locale) {\r\n        var ref, ref5;\r\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\r\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\r\n        }\r\n        this[Internal].locale = locale;\r\n    }\r\n    get defaultLocale() {\r\n        return this[Internal].defaultLocale;\r\n    }\r\n    get domainLocale() {\r\n        return this[Internal].domainLocale;\r\n    }\r\n    get searchParams() {\r\n        return this[Internal].url.searchParams;\r\n    }\r\n    get host() {\r\n        return this[Internal].url.host;\r\n    }\r\n    set host(value) {\r\n        this[Internal].url.host = value;\r\n    }\r\n    get hostname() {\r\n        return this[Internal].url.hostname;\r\n    }\r\n    set hostname(value) {\r\n        this[Internal].url.hostname = value;\r\n    }\r\n    get port() {\r\n        return this[Internal].url.port;\r\n    }\r\n    set port(value) {\r\n        this[Internal].url.port = value;\r\n    }\r\n    get protocol() {\r\n        return this[Internal].url.protocol;\r\n    }\r\n    set protocol(value) {\r\n        this[Internal].url.protocol = value;\r\n    }\r\n    get href() {\r\n        const pathname = this.formatPathname();\r\n        const search = this.formatSearch();\r\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\r\n    }\r\n    set href(url) {\r\n        this[Internal].url = parseURL(url);\r\n        this.analyzeUrl();\r\n    }\r\n    get origin() {\r\n        return this[Internal].url.origin;\r\n    }\r\n    get pathname() {\r\n        return this[Internal].url.pathname;\r\n    }\r\n    set pathname(value) {\r\n        this[Internal].url.pathname = value;\r\n    }\r\n    get hash() {\r\n        return this[Internal].url.hash;\r\n    }\r\n    set hash(value) {\r\n        this[Internal].url.hash = value;\r\n    }\r\n    get search() {\r\n        return this[Internal].url.search;\r\n    }\r\n    set search(value) {\r\n        this[Internal].url.search = value;\r\n    }\r\n    get password() {\r\n        return this[Internal].url.password;\r\n    }\r\n    set password(value) {\r\n        this[Internal].url.password = value;\r\n    }\r\n    get username() {\r\n        return this[Internal].url.username;\r\n    }\r\n    set username(value) {\r\n        this[Internal].url.username = value;\r\n    }\r\n    get basePath() {\r\n        return this[Internal].basePath;\r\n    }\r\n    set basePath(value) {\r\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\r\n    }\r\n    toString() {\r\n        return this.href;\r\n    }\r\n    toJSON() {\r\n        return this.href;\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            href: this.href,\r\n            origin: this.origin,\r\n            protocol: this.protocol,\r\n            username: this.username,\r\n            password: this.password,\r\n            host: this.host,\r\n            hostname: this.hostname,\r\n            port: this.port,\r\n            pathname: this.pathname,\r\n            search: this.search,\r\n            searchParams: this.searchParams,\r\n            hash: this.hash\r\n        };\r\n    }\r\n    clone() {\r\n        return new NextURL(String(this), this[Internal].options);\r\n    }\r\n}\r\nexports.NextURL = NextURL;\r\n\r\n//# sourceMappingURL=next-url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/next-url.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/cookies/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nObject.defineProperty(exports, \"RequestCookies\", ({\r\n    enumerable: true,\r\n    get: function() {\r\n        return _requestCookies.RequestCookies;\r\n    }\r\n}));\r\nObject.defineProperty(exports, \"ResponseCookies\", ({\r\n    enumerable: true,\r\n    get: function() {\r\n        return _responseCookies.ResponseCookies;\r\n    }\r\n}));\r\nvar _requestCookies = __webpack_require__(/*! ./request-cookies */ \"./node_modules/next/dist/server/web/spec-extension/cookies/request-cookies.js\");\r\nvar _responseCookies = __webpack_require__(/*! ./response-cookies */ \"./node_modules/next/dist/server/web/spec-extension/cookies/response-cookies.js\");\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLG1EQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLHNCQUFzQixtQkFBTyxDQUFDLHdHQUFtQjtBQUNqRCx1QkFBdUIsbUJBQU8sQ0FBQywwR0FBb0I7QUFDbkQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9pbmRleC5qcz9lM2FjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXF1ZXN0Q29va2llc1wiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gX3JlcXVlc3RDb29raWVzLlJlcXVlc3RDb29raWVzO1xyXG4gICAgfVxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzcG9uc2VDb29raWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBfcmVzcG9uc2VDb29raWVzLlJlc3BvbnNlQ29va2llcztcclxuICAgIH1cclxufSk7XHJcbnZhciBfcmVxdWVzdENvb2tpZXMgPSByZXF1aXJlKFwiLi9yZXF1ZXN0LWNvb2tpZXNcIik7XHJcbnZhciBfcmVzcG9uc2VDb29raWVzID0gcmVxdWlyZShcIi4vcmVzcG9uc2UtY29va2llc1wiKTtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/cookies/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/cookies/request-cookies.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies/request-cookies.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nvar _serialize = __webpack_require__(/*! ./serialize */ \"./node_modules/next/dist/server/web/spec-extension/cookies/serialize.js\");\r\nclass RequestCookies {\r\n    _parsed = new Map();\r\n    constructor(requestHeaders){\r\n        this._headers = requestHeaders;\r\n        const header = requestHeaders.get(\"cookie\");\r\n        if (header) {\r\n            const parsed = (0, _serialize).parseCookieString(header);\r\n            for (const [name, value] of parsed){\r\n                this._parsed.set(name, {\r\n                    name,\r\n                    value\r\n                });\r\n            }\r\n        }\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this._parsed[Symbol.iterator]();\r\n    }\r\n    /**\r\n   * The amount of cookies received from the client\r\n   */ get size() {\r\n        return this._parsed.size;\r\n    }\r\n    get(...args) {\r\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\r\n        return this._parsed.get(name);\r\n    }\r\n    getAll(...args) {\r\n        var ref;\r\n        const all = Array.from(this._parsed);\r\n        if (!args.length) {\r\n            return all.map(([_, value])=>value);\r\n        }\r\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\r\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\r\n    }\r\n    has(name) {\r\n        return this._parsed.has(name);\r\n    }\r\n    set(...args) {\r\n        const [name, value] = args.length === 1 ? [\r\n            args[0].name,\r\n            args[0].value\r\n        ] : args;\r\n        const map = this._parsed;\r\n        map.set(name, {\r\n            name,\r\n            value\r\n        });\r\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>(0, _serialize).serialize(v)).join(\"; \"));\r\n        return this;\r\n    }\r\n    /**\r\n   * Delete the cookies matching the passed name or names in the request.\r\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\r\n        const map = this._parsed;\r\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\r\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>(0, _serialize).serialize(value)).join(\"; \"));\r\n        return result;\r\n    }\r\n    /**\r\n   * Delete all the cookies in the cookies in the request.\r\n   */ clear() {\r\n        this.delete(Array.from(this._parsed.keys()));\r\n        return this;\r\n    }\r\n    /**\r\n   * Format the cookies in the request as a string for logging\r\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\r\n    }\r\n}\r\nexports.RequestCookies = RequestCookies;\r\n\r\n//# sourceMappingURL=request-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9yZXF1ZXN0LWNvb2tpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixpQkFBaUIsbUJBQU8sQ0FBQyw0RkFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCx3R0FBd0c7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnSEFBZ0g7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxpREFBaUQ7QUFDbEY7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzL3JlcXVlc3QtY29va2llcy5qcz8yZjdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG52YXIgX3NlcmlhbGl6ZSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZVwiKTtcclxuY2xhc3MgUmVxdWVzdENvb2tpZXMge1xyXG4gICAgX3BhcnNlZCA9IG5ldyBNYXAoKTtcclxuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RIZWFkZXJzKXtcclxuICAgICAgICB0aGlzLl9oZWFkZXJzID0gcmVxdWVzdEhlYWRlcnM7XHJcbiAgICAgICAgY29uc3QgaGVhZGVyID0gcmVxdWVzdEhlYWRlcnMuZ2V0KFwiY29va2llXCIpO1xyXG4gICAgICAgIGlmIChoZWFkZXIpIHtcclxuICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gKDAsIF9zZXJpYWxpemUpLnBhcnNlQ29va2llU3RyaW5nKGhlYWRlcik7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBwYXJzZWQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcGFyc2VkLnNldChuYW1lLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VkW1N5bWJvbC5pdGVyYXRvcl0oKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAqIFRoZSBhbW91bnQgb2YgY29va2llcyByZWNlaXZlZCBmcm9tIHRoZSBjbGllbnRcclxuICAgKi8gZ2V0IHNpemUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlZC5zaXplO1xyXG4gICAgfVxyXG4gICAgZ2V0KC4uLmFyZ3MpIHtcclxuICAgICAgICBjb25zdCBuYW1lID0gdHlwZW9mIGFyZ3NbMF0gPT09IFwic3RyaW5nXCIgPyBhcmdzWzBdIDogYXJnc1swXS5uYW1lO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wYXJzZWQuZ2V0KG5hbWUpO1xyXG4gICAgfVxyXG4gICAgZ2V0QWxsKC4uLmFyZ3MpIHtcclxuICAgICAgICB2YXIgcmVmO1xyXG4gICAgICAgIGNvbnN0IGFsbCA9IEFycmF5LmZyb20odGhpcy5fcGFyc2VkKTtcclxuICAgICAgICBpZiAoIWFyZ3MubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhbGwubWFwKChbXywgdmFsdWVdKT0+dmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBuYW1lID0gdHlwZW9mIGFyZ3NbMF0gPT09IFwic3RyaW5nXCIgPyBhcmdzWzBdIDogKHJlZiA9IGFyZ3NbMF0pID09IG51bGwgPyB2b2lkIDAgOiByZWYubmFtZTtcclxuICAgICAgICByZXR1cm4gYWxsLmZpbHRlcigoW25dKT0+biA9PT0gbmFtZSkubWFwKChbXywgdmFsdWVdKT0+dmFsdWUpO1xyXG4gICAgfVxyXG4gICAgaGFzKG5hbWUpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VkLmhhcyhuYW1lKTtcclxuICAgIH1cclxuICAgIHNldCguLi5hcmdzKSB7XHJcbiAgICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IGFyZ3MubGVuZ3RoID09PSAxID8gW1xyXG4gICAgICAgICAgICBhcmdzWzBdLm5hbWUsXHJcbiAgICAgICAgICAgIGFyZ3NbMF0udmFsdWVcclxuICAgICAgICBdIDogYXJncztcclxuICAgICAgICBjb25zdCBtYXAgPSB0aGlzLl9wYXJzZWQ7XHJcbiAgICAgICAgbWFwLnNldChuYW1lLCB7XHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIHZhbHVlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5faGVhZGVycy5zZXQoXCJjb29raWVcIiwgQXJyYXkuZnJvbShtYXApLm1hcCgoW18sIHZdKT0+KDAsIF9zZXJpYWxpemUpLnNlcmlhbGl6ZSh2KSkuam9pbihcIjsgXCIpKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAqIERlbGV0ZSB0aGUgY29va2llcyBtYXRjaGluZyB0aGUgcGFzc2VkIG5hbWUgb3IgbmFtZXMgaW4gdGhlIHJlcXVlc3QuXHJcbiAgICovIGRlbGV0ZSgvKiogTmFtZSBvciBuYW1lcyBvZiB0aGUgY29va2llcyB0byBiZSBkZWxldGVkICAqLyBuYW1lcykge1xyXG4gICAgICAgIGNvbnN0IG1hcCA9IHRoaXMuX3BhcnNlZDtcclxuICAgICAgICBjb25zdCByZXN1bHQgPSAhQXJyYXkuaXNBcnJheShuYW1lcykgPyBtYXAuZGVsZXRlKG5hbWVzKSA6IG5hbWVzLm1hcCgobmFtZSk9Pm1hcC5kZWxldGUobmFtZSkpO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMuc2V0KFwiY29va2llXCIsIEFycmF5LmZyb20obWFwKS5tYXAoKFtfLCB2YWx1ZV0pPT4oMCwgX3NlcmlhbGl6ZSkuc2VyaWFsaXplKHZhbHVlKSkuam9pbihcIjsgXCIpKTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICogRGVsZXRlIGFsbCB0aGUgY29va2llcyBpbiB0aGUgY29va2llcyBpbiB0aGUgcmVxdWVzdC5cclxuICAgKi8gY2xlYXIoKSB7XHJcbiAgICAgICAgdGhpcy5kZWxldGUoQXJyYXkuZnJvbSh0aGlzLl9wYXJzZWQua2V5cygpKSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgKiBGb3JtYXQgdGhlIGNvb2tpZXMgaW4gdGhlIHJlcXVlc3QgYXMgYSBzdHJpbmcgZm9yIGxvZ2dpbmdcclxuICAgKi8gW1N5bWJvbC5mb3IoXCJlZGdlLXJ1bnRpbWUuaW5zcGVjdC5jdXN0b21cIildKCkge1xyXG4gICAgICAgIHJldHVybiBgUmVxdWVzdENvb2tpZXMgJHtKU09OLnN0cmluZ2lmeShPYmplY3QuZnJvbUVudHJpZXModGhpcy5fcGFyc2VkKSl9YDtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlJlcXVlc3RDb29raWVzID0gUmVxdWVzdENvb2tpZXM7XHJcblxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/cookies/request-cookies.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/cookies/response-cookies.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies/response-cookies.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nvar _serialize = __webpack_require__(/*! ./serialize */ \"./node_modules/next/dist/server/web/spec-extension/cookies/serialize.js\");\r\nfunction replace(bag, headers) {\r\n    headers.delete(\"set-cookie\");\r\n    for (const [, value] of bag){\r\n        const serialized = (0, _serialize).serialize(value);\r\n        headers.append(\"set-cookie\", serialized);\r\n    }\r\n}\r\nfunction normalizeCookie(cookie = {\r\n    name: \"\",\r\n    value: \"\"\r\n}) {\r\n    if (cookie.maxAge) {\r\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\r\n    }\r\n    if (cookie.path === null || cookie.path === undefined) {\r\n        cookie.path = \"/\";\r\n    }\r\n    return cookie;\r\n}\r\nclass ResponseCookies {\r\n    _parsed = new Map();\r\n    constructor(responseHeaders){\r\n        this._headers = responseHeaders;\r\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\r\n        const headers = this._headers.getAll(\"set-cookie\");\r\n        for (const header of headers){\r\n            const parsed = (0, _serialize).parseSetCookieString(header);\r\n            if (parsed) {\r\n                this._parsed.set(parsed.name, parsed);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\r\n   */ get(...args) {\r\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\r\n        return this._parsed.get(key);\r\n    }\r\n    /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\r\n   */ getAll(...args) {\r\n        var ref;\r\n        const all = Array.from(this._parsed.values());\r\n        if (!args.length) {\r\n            return all;\r\n        }\r\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\r\n        return all.filter((c)=>c.name === key);\r\n    }\r\n    /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\r\n   */ set(...args) {\r\n        const [name, value, cookie] = args.length === 1 ? [\r\n            args[0].name,\r\n            args[0].value,\r\n            args[0]\r\n        ] : args;\r\n        const map = this._parsed;\r\n        map.set(name, normalizeCookie({\r\n            name,\r\n            value,\r\n            ...cookie\r\n        }));\r\n        replace(map, this._headers);\r\n        return this;\r\n    }\r\n    /**\r\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\r\n   */ delete(...args) {\r\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\r\n        return this.set({\r\n            name,\r\n            value: \"\",\r\n            expires: new Date(0)\r\n        });\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\r\n    }\r\n}\r\nexports.ResponseCookies = ResponseCookies;\r\n\r\n//# sourceMappingURL=response-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9yZXNwb25zZS1jb29raWVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUJBQWlCLG1CQUFPLENBQUMsNEZBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDRFQUE0RTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxrRkFBa0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDRFQUE0RTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxrRkFBa0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQ0FBa0MsaURBQWlEO0FBQ25GO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9yZXNwb25zZS1jb29raWVzLmpzPzdjZjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gICAgdmFsdWU6IHRydWVcclxufSk7XHJcbnZhciBfc2VyaWFsaXplID0gcmVxdWlyZShcIi4vc2VyaWFsaXplXCIpO1xyXG5mdW5jdGlvbiByZXBsYWNlKGJhZywgaGVhZGVycykge1xyXG4gICAgaGVhZGVycy5kZWxldGUoXCJzZXQtY29va2llXCIpO1xyXG4gICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgYmFnKXtcclxuICAgICAgICBjb25zdCBzZXJpYWxpemVkID0gKDAsIF9zZXJpYWxpemUpLnNlcmlhbGl6ZSh2YWx1ZSk7XHJcbiAgICAgICAgaGVhZGVycy5hcHBlbmQoXCJzZXQtY29va2llXCIsIHNlcmlhbGl6ZWQpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIG5vcm1hbGl6ZUNvb2tpZShjb29raWUgPSB7XHJcbiAgICBuYW1lOiBcIlwiLFxyXG4gICAgdmFsdWU6IFwiXCJcclxufSkge1xyXG4gICAgaWYgKGNvb2tpZS5tYXhBZ2UpIHtcclxuICAgICAgICBjb29raWUuZXhwaXJlcyA9IG5ldyBEYXRlKERhdGUubm93KCkgKyBjb29raWUubWF4QWdlICogMTAwMCk7XHJcbiAgICB9XHJcbiAgICBpZiAoY29va2llLnBhdGggPT09IG51bGwgfHwgY29va2llLnBhdGggPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGNvb2tpZS5wYXRoID0gXCIvXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29va2llO1xyXG59XHJcbmNsYXNzIFJlc3BvbnNlQ29va2llcyB7XHJcbiAgICBfcGFyc2VkID0gbmV3IE1hcCgpO1xyXG4gICAgY29uc3RydWN0b3IocmVzcG9uc2VIZWFkZXJzKXtcclxuICAgICAgICB0aGlzLl9oZWFkZXJzID0gcmVzcG9uc2VIZWFkZXJzO1xyXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93aGF0d2cvZmV0Y2gvaXNzdWVzLzk3M1xyXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB0aGlzLl9oZWFkZXJzLmdldEFsbChcInNldC1jb29raWVcIik7XHJcbiAgICAgICAgZm9yIChjb25zdCBoZWFkZXIgb2YgaGVhZGVycyl7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9ICgwLCBfc2VyaWFsaXplKS5wYXJzZVNldENvb2tpZVN0cmluZyhoZWFkZXIpO1xyXG4gICAgICAgICAgICBpZiAocGFyc2VkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9wYXJzZWQuc2V0KHBhcnNlZC5uYW1lLCBwYXJzZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICoge0BsaW5rIGh0dHBzOi8vd2ljZy5naXRodWIuaW8vY29va2llLXN0b3JlLyNDb29raWVTdG9yZS1nZXQgQ29va2llU3RvcmUjZ2V0fSB3aXRob3V0IHRoZSBQcm9taXNlLlxyXG4gICAqLyBnZXQoLi4uYXJncykge1xyXG4gICAgICAgIGNvbnN0IGtleSA9IHR5cGVvZiBhcmdzWzBdID09PSBcInN0cmluZ1wiID8gYXJnc1swXSA6IGFyZ3NbMF0ubmFtZTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VkLmdldChrZXkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICoge0BsaW5rIGh0dHBzOi8vd2ljZy5naXRodWIuaW8vY29va2llLXN0b3JlLyNDb29raWVTdG9yZS1nZXRBbGwgQ29va2llU3RvcmUjZ2V0QWxsfSB3aXRob3V0IHRoZSBQcm9taXNlLlxyXG4gICAqLyBnZXRBbGwoLi4uYXJncykge1xyXG4gICAgICAgIHZhciByZWY7XHJcbiAgICAgICAgY29uc3QgYWxsID0gQXJyYXkuZnJvbSh0aGlzLl9wYXJzZWQudmFsdWVzKCkpO1xyXG4gICAgICAgIGlmICghYXJncy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGFsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qga2V5ID0gdHlwZW9mIGFyZ3NbMF0gPT09IFwic3RyaW5nXCIgPyBhcmdzWzBdIDogKHJlZiA9IGFyZ3NbMF0pID09IG51bGwgPyB2b2lkIDAgOiByZWYubmFtZTtcclxuICAgICAgICByZXR1cm4gYWxsLmZpbHRlcigoYyk9PmMubmFtZSA9PT0ga2V5KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAqIHtAbGluayBodHRwczovL3dpY2cuZ2l0aHViLmlvL2Nvb2tpZS1zdG9yZS8jQ29va2llU3RvcmUtc2V0IENvb2tpZVN0b3JlI3NldH0gd2l0aG91dCB0aGUgUHJvbWlzZS5cclxuICAgKi8gc2V0KC4uLmFyZ3MpIHtcclxuICAgICAgICBjb25zdCBbbmFtZSwgdmFsdWUsIGNvb2tpZV0gPSBhcmdzLmxlbmd0aCA9PT0gMSA/IFtcclxuICAgICAgICAgICAgYXJnc1swXS5uYW1lLFxyXG4gICAgICAgICAgICBhcmdzWzBdLnZhbHVlLFxyXG4gICAgICAgICAgICBhcmdzWzBdXHJcbiAgICAgICAgXSA6IGFyZ3M7XHJcbiAgICAgICAgY29uc3QgbWFwID0gdGhpcy5fcGFyc2VkO1xyXG4gICAgICAgIG1hcC5zZXQobmFtZSwgbm9ybWFsaXplQ29va2llKHtcclxuICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgdmFsdWUsXHJcbiAgICAgICAgICAgIC4uLmNvb2tpZVxyXG4gICAgICAgIH0pKTtcclxuICAgICAgICByZXBsYWNlKG1hcCwgdGhpcy5faGVhZGVycyk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgKiB7QGxpbmsgaHR0cHM6Ly93aWNnLmdpdGh1Yi5pby9jb29raWUtc3RvcmUvI0Nvb2tpZVN0b3JlLWRlbGV0ZSBDb29raWVTdG9yZSNkZWxldGV9IHdpdGhvdXQgdGhlIFByb21pc2UuXHJcbiAgICovIGRlbGV0ZSguLi5hcmdzKSB7XHJcbiAgICAgICAgY29uc3QgbmFtZSA9IHR5cGVvZiBhcmdzWzBdID09PSBcInN0cmluZ1wiID8gYXJnc1swXSA6IGFyZ3NbMF0ubmFtZTtcclxuICAgICAgICByZXR1cm4gdGhpcy5zZXQoe1xyXG4gICAgICAgICAgICBuYW1lLFxyXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcclxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMClcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFtTeW1ib2wuZm9yKFwiZWRnZS1ydW50aW1lLmluc3BlY3QuY3VzdG9tXCIpXSgpIHtcclxuICAgICAgICByZXR1cm4gYFJlc3BvbnNlQ29va2llcyAke0pTT04uc3RyaW5naWZ5KE9iamVjdC5mcm9tRW50cmllcyh0aGlzLl9wYXJzZWQpKX1gO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuUmVzcG9uc2VDb29raWVzID0gUmVzcG9uc2VDb29raWVzO1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UtY29va2llcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/cookies/response-cookies.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/cookies/serialize.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies/serialize.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nexports.serialize = serialize;\r\nexports.parseCookieString = parseCookieString;\r\nexports.parseSetCookieString = parseSetCookieString;\r\nconst SAME_SITE = [\r\n    \"strict\",\r\n    \"lax\",\r\n    \"none\"\r\n];\r\nfunction parseSameSite(string) {\r\n    string = string.toLowerCase();\r\n    return SAME_SITE.includes(string) ? string : undefined;\r\n}\r\nfunction compact(t) {\r\n    const newT = {};\r\n    for(const key in t){\r\n        if (t[key]) {\r\n            newT[key] = t[key];\r\n        }\r\n    }\r\n    return newT;\r\n}\r\nfunction serialize(c) {\r\n    const attrs = [\r\n        \"path\" in c && c.path && `Path=${c.path}`,\r\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\r\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\r\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\r\n        \"secure\" in c && c.secure && \"Secure\",\r\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\r\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \r\n    ].filter(Boolean);\r\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\r\n}\r\nfunction parseCookieString(cookie) {\r\n    const map = new Map();\r\n    for (const pair of cookie.split(/; */)){\r\n        if (!pair) continue;\r\n        const [key, value] = pair.split(\"=\", 2);\r\n        map.set(key, decodeURIComponent(value ?? \"true\"));\r\n    }\r\n    return map;\r\n}\r\nfunction parseSetCookieString(setCookie) {\r\n    if (!setCookie) {\r\n        return undefined;\r\n    }\r\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\r\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\r\n            key.toLowerCase(),\r\n            v\r\n        ]));\r\n    const cookie = {\r\n        name,\r\n        value: decodeURIComponent(value),\r\n        domain,\r\n        ...expires && {\r\n            expires: new Date(expires)\r\n        },\r\n        ...httponly && {\r\n            httpOnly: true\r\n        },\r\n        ...typeof maxage === \"string\" && {\r\n            maxAge: Number(maxage)\r\n        },\r\n        path,\r\n        ...samesite && {\r\n            sameSite: parseSameSite(samesite)\r\n        },\r\n        ...secure && {\r\n            secure: true\r\n        }\r\n    };\r\n    return compact(cookie);\r\n}\r\n\r\n//# sourceMappingURL=serialize.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy9zZXJpYWxpemUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixpQkFBaUI7QUFDakIseUJBQXlCO0FBQ3pCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE9BQU87QUFDaEQsa0RBQWtELHdCQUF3QjtBQUMxRSxnREFBZ0QsU0FBUztBQUN6RCwrQ0FBK0MsU0FBUztBQUN4RDtBQUNBO0FBQ0EscURBQXFELFdBQVc7QUFDaEU7QUFDQSxjQUFjLE9BQU8sR0FBRyxvQ0FBb0MsRUFBRSxjQUFjLEdBQUc7QUFDL0U7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1FQUFtRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzL3NlcmlhbGl6ZS5qcz82MzAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcclxuZXhwb3J0cy5wYXJzZUNvb2tpZVN0cmluZyA9IHBhcnNlQ29va2llU3RyaW5nO1xyXG5leHBvcnRzLnBhcnNlU2V0Q29va2llU3RyaW5nID0gcGFyc2VTZXRDb29raWVTdHJpbmc7XHJcbmNvbnN0IFNBTUVfU0lURSA9IFtcclxuICAgIFwic3RyaWN0XCIsXHJcbiAgICBcImxheFwiLFxyXG4gICAgXCJub25lXCJcclxuXTtcclxuZnVuY3Rpb24gcGFyc2VTYW1lU2l0ZShzdHJpbmcpIHtcclxuICAgIHN0cmluZyA9IHN0cmluZy50b0xvd2VyQ2FzZSgpO1xyXG4gICAgcmV0dXJuIFNBTUVfU0lURS5pbmNsdWRlcyhzdHJpbmcpID8gc3RyaW5nIDogdW5kZWZpbmVkO1xyXG59XHJcbmZ1bmN0aW9uIGNvbXBhY3QodCkge1xyXG4gICAgY29uc3QgbmV3VCA9IHt9O1xyXG4gICAgZm9yKGNvbnN0IGtleSBpbiB0KXtcclxuICAgICAgICBpZiAodFtrZXldKSB7XHJcbiAgICAgICAgICAgIG5ld1Rba2V5XSA9IHRba2V5XTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3VDtcclxufVxyXG5mdW5jdGlvbiBzZXJpYWxpemUoYykge1xyXG4gICAgY29uc3QgYXR0cnMgPSBbXHJcbiAgICAgICAgXCJwYXRoXCIgaW4gYyAmJiBjLnBhdGggJiYgYFBhdGg9JHtjLnBhdGh9YCxcclxuICAgICAgICBcImV4cGlyZXNcIiBpbiBjICYmIGMuZXhwaXJlcyAmJiBgRXhwaXJlcz0ke2MuZXhwaXJlcy50b1VUQ1N0cmluZygpfWAsXHJcbiAgICAgICAgXCJtYXhBZ2VcIiBpbiBjICYmIGMubWF4QWdlICYmIGBNYXgtQWdlPSR7Yy5tYXhBZ2V9YCxcclxuICAgICAgICBcImRvbWFpblwiIGluIGMgJiYgYy5kb21haW4gJiYgYERvbWFpbj0ke2MuZG9tYWlufWAsXHJcbiAgICAgICAgXCJzZWN1cmVcIiBpbiBjICYmIGMuc2VjdXJlICYmIFwiU2VjdXJlXCIsXHJcbiAgICAgICAgXCJodHRwT25seVwiIGluIGMgJiYgYy5odHRwT25seSAmJiBcIkh0dHBPbmx5XCIsXHJcbiAgICAgICAgXCJzYW1lU2l0ZVwiIGluIGMgJiYgYy5zYW1lU2l0ZSAmJiBgU2FtZVNpdGU9JHtjLnNhbWVTaXRlfWAsIFxyXG4gICAgXS5maWx0ZXIoQm9vbGVhbik7XHJcbiAgICByZXR1cm4gYCR7Yy5uYW1lfT0ke2VuY29kZVVSSUNvbXBvbmVudChjLnZhbHVlID8/IFwiXCIpfTsgJHthdHRycy5qb2luKFwiOyBcIil9YDtcclxufVxyXG5mdW5jdGlvbiBwYXJzZUNvb2tpZVN0cmluZyhjb29raWUpIHtcclxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXAoKTtcclxuICAgIGZvciAoY29uc3QgcGFpciBvZiBjb29raWUuc3BsaXQoLzsgKi8pKXtcclxuICAgICAgICBpZiAoIXBhaXIpIGNvbnRpbnVlO1xyXG4gICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IHBhaXIuc3BsaXQoXCI9XCIsIDIpO1xyXG4gICAgICAgIG1hcC5zZXQoa2V5LCBkZWNvZGVVUklDb21wb25lbnQodmFsdWUgPz8gXCJ0cnVlXCIpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBtYXA7XHJcbn1cclxuZnVuY3Rpb24gcGFyc2VTZXRDb29raWVTdHJpbmcoc2V0Q29va2llKSB7XHJcbiAgICBpZiAoIXNldENvb2tpZSkge1xyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbiAgICBjb25zdCBbW25hbWUsIHZhbHVlXSwgLi4uYXR0cmlidXRlc10gPSBwYXJzZUNvb2tpZVN0cmluZyhzZXRDb29raWUpO1xyXG4gICAgY29uc3QgeyBkb21haW4gLCBleHBpcmVzICwgaHR0cG9ubHkgLCBtYXhhZ2UgLCBwYXRoICwgc2FtZXNpdGUgLCBzZWN1cmUgIH0gPSBPYmplY3QuZnJvbUVudHJpZXMoYXR0cmlidXRlcy5tYXAoKFtrZXksIHZdKT0+W1xyXG4gICAgICAgICAgICBrZXkudG9Mb3dlckNhc2UoKSxcclxuICAgICAgICAgICAgdlxyXG4gICAgICAgIF0pKTtcclxuICAgIGNvbnN0IGNvb2tpZSA9IHtcclxuICAgICAgICBuYW1lLFxyXG4gICAgICAgIHZhbHVlOiBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpLFxyXG4gICAgICAgIGRvbWFpbixcclxuICAgICAgICAuLi5leHBpcmVzICYmIHtcclxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoZXhwaXJlcylcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLmh0dHBvbmx5ICYmIHtcclxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLnR5cGVvZiBtYXhhZ2UgPT09IFwic3RyaW5nXCIgJiYge1xyXG4gICAgICAgICAgICBtYXhBZ2U6IE51bWJlcihtYXhhZ2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYXRoLFxyXG4gICAgICAgIC4uLnNhbWVzaXRlICYmIHtcclxuICAgICAgICAgICAgc2FtZVNpdGU6IHBhcnNlU2FtZVNpdGUoc2FtZXNpdGUpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAuLi5zZWN1cmUgJiYge1xyXG4gICAgICAgICAgICBzZWN1cmU6IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGNvbXBhY3QoY29va2llKTtcclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/cookies/serialize.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/request.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nexports.INTERNALS = void 0;\r\nvar _nextUrl = __webpack_require__(/*! ../next-url */ \"./node_modules/next/dist/server/web/next-url.js\");\r\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/next/dist/server/web/utils.js\");\r\nvar _error = __webpack_require__(/*! ../error */ \"./node_modules/next/dist/server/web/error.js\");\r\nvar _cookies = __webpack_require__(/*! ./cookies */ \"./node_modules/next/dist/server/web/spec-extension/cookies/index.js\");\r\nconst INTERNALS = Symbol(\"internal request\");\r\nexports.INTERNALS = INTERNALS;\r\nclass NextRequest extends Request {\r\n    constructor(input, init = {}){\r\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\r\n        (0, _utils).validateURL(url);\r\n        super(url, init);\r\n        this[INTERNALS] = {\r\n            cookies: new _cookies.RequestCookies(this.headers),\r\n            geo: init.geo || {},\r\n            ip: init.ip,\r\n            url: new _nextUrl.NextURL(url, {\r\n                headers: (0, _utils).toNodeHeaders(this.headers),\r\n                nextConfig: init.nextConfig\r\n            })\r\n        };\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            cookies: this.cookies,\r\n            geo: this.geo,\r\n            ip: this.ip,\r\n            nextUrl: this.nextUrl,\r\n            url: this.url,\r\n            // rest of props come from Request\r\n            bodyUsed: this.bodyUsed,\r\n            cache: this.cache,\r\n            credentials: this.credentials,\r\n            destination: this.destination,\r\n            headers: Object.fromEntries(this.headers),\r\n            integrity: this.integrity,\r\n            keepalive: this.keepalive,\r\n            method: this.method,\r\n            mode: this.mode,\r\n            redirect: this.redirect,\r\n            referrer: this.referrer,\r\n            referrerPolicy: this.referrerPolicy,\r\n            signal: this.signal\r\n        };\r\n    }\r\n    get cookies() {\r\n        return this[INTERNALS].cookies;\r\n    }\r\n    get geo() {\r\n        return this[INTERNALS].geo;\r\n    }\r\n    get ip() {\r\n        return this[INTERNALS].ip;\r\n    }\r\n    get nextUrl() {\r\n        return this[INTERNALS].url;\r\n    }\r\n    /**\r\n   * @deprecated\r\n   * `page` has been deprecated in favour of `URLPattern`.\r\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\r\n   */ get page() {\r\n        throw new _error.RemovedPageError();\r\n    }\r\n    /**\r\n   * @deprecated\r\n   * `ua` has been removed in favour of \\`userAgent\\` function.\r\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\r\n   */ get ua() {\r\n        throw new _error.RemovedUAError();\r\n    }\r\n    get url() {\r\n        return this[INTERNALS].url.toString();\r\n    }\r\n}\r\nexports.NextRequest = NextRequest;\r\n\r\n//# sourceMappingURL=request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGlCQUFpQjtBQUNqQixlQUFlLG1CQUFPLENBQUMsb0VBQWE7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLDhEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw4REFBVTtBQUMvQixlQUFlLG1CQUFPLENBQUMsc0ZBQVc7QUFDbEM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzPzViMzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xyXG4gICAgdmFsdWU6IHRydWVcclxufSk7XHJcbmV4cG9ydHMuSU5URVJOQUxTID0gdm9pZCAwO1xyXG52YXIgX25leHRVcmwgPSByZXF1aXJlKFwiLi4vbmV4dC11cmxcIik7XHJcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XHJcbnZhciBfZXJyb3IgPSByZXF1aXJlKFwiLi4vZXJyb3JcIik7XHJcbnZhciBfY29va2llcyA9IHJlcXVpcmUoXCIuL2Nvb2tpZXNcIik7XHJcbmNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbChcImludGVybmFsIHJlcXVlc3RcIik7XHJcbmV4cG9ydHMuSU5URVJOQUxTID0gSU5URVJOQUxTO1xyXG5jbGFzcyBOZXh0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xyXG4gICAgY29uc3RydWN0b3IoaW5wdXQsIGluaXQgPSB7fSl7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdHlwZW9mIGlucHV0ICE9PSBcInN0cmluZ1wiICYmIFwidXJsXCIgaW4gaW5wdXQgPyBpbnB1dC51cmwgOiBTdHJpbmcoaW5wdXQpO1xyXG4gICAgICAgICgwLCBfdXRpbHMpLnZhbGlkYXRlVVJMKHVybCk7XHJcbiAgICAgICAgc3VwZXIodXJsLCBpbml0KTtcclxuICAgICAgICB0aGlzW0lOVEVSTkFMU10gPSB7XHJcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBfY29va2llcy5SZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBnZW86IGluaXQuZ2VvIHx8IHt9LFxyXG4gICAgICAgICAgICBpcDogaW5pdC5pcCxcclxuICAgICAgICAgICAgdXJsOiBuZXcgX25leHRVcmwuTmV4dFVSTCh1cmwsIHtcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6ICgwLCBfdXRpbHMpLnRvTm9kZUhlYWRlcnModGhpcy5oZWFkZXJzKSxcclxuICAgICAgICAgICAgICAgIG5leHRDb25maWc6IGluaXQubmV4dENvbmZpZ1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY29va2llczogdGhpcy5jb29raWVzLFxyXG4gICAgICAgICAgICBnZW86IHRoaXMuZ2VvLFxyXG4gICAgICAgICAgICBpcDogdGhpcy5pcCxcclxuICAgICAgICAgICAgbmV4dFVybDogdGhpcy5uZXh0VXJsLFxyXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxyXG4gICAgICAgICAgICAvLyByZXN0IG9mIHByb3BzIGNvbWUgZnJvbSBSZXF1ZXN0XHJcbiAgICAgICAgICAgIGJvZHlVc2VkOiB0aGlzLmJvZHlVc2VkLFxyXG4gICAgICAgICAgICBjYWNoZTogdGhpcy5jYWNoZSxcclxuICAgICAgICAgICAgY3JlZGVudGlhbHM6IHRoaXMuY3JlZGVudGlhbHMsXHJcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uOiB0aGlzLmRlc3RpbmF0aW9uLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5oZWFkZXJzKSxcclxuICAgICAgICAgICAgaW50ZWdyaXR5OiB0aGlzLmludGVncml0eSxcclxuICAgICAgICAgICAga2VlcGFsaXZlOiB0aGlzLmtlZXBhbGl2ZSxcclxuICAgICAgICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcclxuICAgICAgICAgICAgbW9kZTogdGhpcy5tb2RlLFxyXG4gICAgICAgICAgICByZWRpcmVjdDogdGhpcy5yZWRpcmVjdCxcclxuICAgICAgICAgICAgcmVmZXJyZXI6IHRoaXMucmVmZXJyZXIsXHJcbiAgICAgICAgICAgIHJlZmVycmVyUG9saWN5OiB0aGlzLnJlZmVycmVyUG9saWN5LFxyXG4gICAgICAgICAgICBzaWduYWw6IHRoaXMuc2lnbmFsXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGdldCBjb29raWVzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcclxuICAgIH1cclxuICAgIGdldCBnZW8oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5nZW87XHJcbiAgICB9XHJcbiAgICBnZXQgaXAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5pcDtcclxuICAgIH1cclxuICAgIGdldCBuZXh0VXJsKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10udXJsO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICogQGRlcHJlY2F0ZWRcclxuICAgKiBgcGFnZWAgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgYFVSTFBhdHRlcm5gLlxyXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcclxuICAgKi8gZ2V0IHBhZ2UoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IF9lcnJvci5SZW1vdmVkUGFnZUVycm9yKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgKiBAZGVwcmVjYXRlZFxyXG4gICAqIGB1YWAgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxyXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XHJcbiAgICovIGdldCB1YSgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgX2Vycm9yLlJlbW92ZWRVQUVycm9yKCk7XHJcbiAgICB9XHJcbiAgICBnZXQgdXJsKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10udXJsLnRvU3RyaW5nKCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5OZXh0UmVxdWVzdCA9IE5leHRSZXF1ZXN0O1xyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/request.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/response.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/response.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nvar _nextUrl = __webpack_require__(/*! ../next-url */ \"./node_modules/next/dist/server/web/next-url.js\");\r\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/next/dist/server/web/utils.js\");\r\nvar _cookies = __webpack_require__(/*! ./cookies */ \"./node_modules/next/dist/server/web/spec-extension/cookies/index.js\");\r\nconst INTERNALS = Symbol(\"internal response\");\r\nconst REDIRECTS = new Set([\r\n    301,\r\n    302,\r\n    303,\r\n    307,\r\n    308\r\n]);\r\nfunction handleMiddlewareField(init, headers) {\r\n    var ref;\r\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\r\n        if (!(init.request.headers instanceof Headers)) {\r\n            throw new Error(\"request.headers must be an instance of Headers\");\r\n        }\r\n        const keys = [];\r\n        for (const [key, value] of init.request.headers){\r\n            headers.set(\"x-middleware-request-\" + key, value);\r\n            keys.push(key);\r\n        }\r\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\r\n    }\r\n}\r\nclass NextResponse extends Response {\r\n    constructor(body, init = {}){\r\n        super(body, init);\r\n        this[INTERNALS] = {\r\n            cookies: new _cookies.ResponseCookies(this.headers),\r\n            url: init.url ? new _nextUrl.NextURL(init.url, {\r\n                headers: (0, _utils).toNodeHeaders(this.headers),\r\n                nextConfig: init.nextConfig\r\n            }) : undefined\r\n        };\r\n    }\r\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\r\n        return {\r\n            cookies: this.cookies,\r\n            url: this.url,\r\n            // rest of props come from Response\r\n            body: this.body,\r\n            bodyUsed: this.bodyUsed,\r\n            headers: Object.fromEntries(this.headers),\r\n            ok: this.ok,\r\n            redirected: this.redirected,\r\n            status: this.status,\r\n            statusText: this.statusText,\r\n            type: this.type\r\n        };\r\n    }\r\n    get cookies() {\r\n        return this[INTERNALS].cookies;\r\n    }\r\n    static json(body, init) {\r\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\r\n        const response = Response.json(body, init);\r\n        return new NextResponse(response.body, response);\r\n    }\r\n    static redirect(url, init) {\r\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\r\n        if (!REDIRECTS.has(status)) {\r\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\r\n        }\r\n        const initObj = typeof init === \"object\" ? init : {};\r\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\r\n        headers.set(\"Location\", (0, _utils).validateURL(url));\r\n        return new NextResponse(null, {\r\n            ...initObj,\r\n            headers,\r\n            status\r\n        });\r\n    }\r\n    static rewrite(destination, init) {\r\n        const headers = new Headers(init == null ? void 0 : init.headers);\r\n        headers.set(\"x-middleware-rewrite\", (0, _utils).validateURL(destination));\r\n        handleMiddlewareField(init, headers);\r\n        return new NextResponse(null, {\r\n            ...init,\r\n            headers\r\n        });\r\n    }\r\n    static next(init) {\r\n        const headers = new Headers(init == null ? void 0 : init.headers);\r\n        headers.set(\"x-middleware-next\", \"1\");\r\n        handleMiddlewareField(init, headers);\r\n        return new NextResponse(null, {\r\n            ...init,\r\n            headers\r\n        });\r\n    }\r\n}\r\nexports.NextResponse = NextResponse;\r\n\r\n//# sourceMappingURL=response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVzcG9uc2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixlQUFlLG1CQUFPLENBQUMsb0VBQWE7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLDhEQUFVO0FBQy9CLGVBQWUsbUJBQU8sQ0FBQyxzRkFBVztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXNwb25zZS5qcz8yZjhiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcclxuICAgIHZhbHVlOiB0cnVlXHJcbn0pO1xyXG52YXIgX25leHRVcmwgPSByZXF1aXJlKFwiLi4vbmV4dC11cmxcIik7XHJcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XHJcbnZhciBfY29va2llcyA9IHJlcXVpcmUoXCIuL2Nvb2tpZXNcIik7XHJcbmNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbChcImludGVybmFsIHJlc3BvbnNlXCIpO1xyXG5jb25zdCBSRURJUkVDVFMgPSBuZXcgU2V0KFtcclxuICAgIDMwMSxcclxuICAgIDMwMixcclxuICAgIDMwMyxcclxuICAgIDMwNyxcclxuICAgIDMwOFxyXG5dKTtcclxuZnVuY3Rpb24gaGFuZGxlTWlkZGxld2FyZUZpZWxkKGluaXQsIGhlYWRlcnMpIHtcclxuICAgIHZhciByZWY7XHJcbiAgICBpZiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogKHJlZiA9IGluaXQucmVxdWVzdCkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5oZWFkZXJzKSB7XHJcbiAgICAgICAgaWYgKCEoaW5pdC5yZXF1ZXN0LmhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1ZXN0LmhlYWRlcnMgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBIZWFkZXJzXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBrZXlzID0gW107XHJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5pdC5yZXF1ZXN0LmhlYWRlcnMpe1xyXG4gICAgICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1yZXF1ZXN0LVwiICsga2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIGtleXMucHVzaChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1vdmVycmlkZS1oZWFkZXJzXCIsIGtleXMuam9pbihcIixcIikpO1xyXG4gICAgfVxyXG59XHJcbmNsYXNzIE5leHRSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlIHtcclxuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQgPSB7fSl7XHJcbiAgICAgICAgc3VwZXIoYm9keSwgaW5pdCk7XHJcbiAgICAgICAgdGhpc1tJTlRFUk5BTFNdID0ge1xyXG4gICAgICAgICAgICBjb29raWVzOiBuZXcgX2Nvb2tpZXMuUmVzcG9uc2VDb29raWVzKHRoaXMuaGVhZGVycyksXHJcbiAgICAgICAgICAgIHVybDogaW5pdC51cmwgPyBuZXcgX25leHRVcmwuTmV4dFVSTChpbml0LnVybCwge1xyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogKDAsIF91dGlscykudG9Ob2RlSGVhZGVycyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZzogaW5pdC5uZXh0Q29uZmlnXHJcbiAgICAgICAgICAgIH0pIDogdW5kZWZpbmVkXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIFtTeW1ib2wuZm9yKFwiZWRnZS1ydW50aW1lLmluc3BlY3QuY3VzdG9tXCIpXSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXHJcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXHJcbiAgICAgICAgICAgIC8vIHJlc3Qgb2YgcHJvcHMgY29tZSBmcm9tIFJlc3BvbnNlXHJcbiAgICAgICAgICAgIGJvZHk6IHRoaXMuYm9keSxcclxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyh0aGlzLmhlYWRlcnMpLFxyXG4gICAgICAgICAgICBvazogdGhpcy5vayxcclxuICAgICAgICAgICAgcmVkaXJlY3RlZDogdGhpcy5yZWRpcmVjdGVkLFxyXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxyXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLnN0YXR1c1RleHQsXHJcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBnZXQgY29va2llcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmNvb2tpZXM7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMganNvbihib2R5LCBpbml0KSB7XHJcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUaGlzIGlzIG5vdCBpbiBsaWIvZG9tIHJpZ2h0IG5vdywgYW5kIHdlIGNhbid0IGF1Z21lbnQgaXQuXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBSZXNwb25zZS5qc29uKGJvZHksIGluaXQpO1xyXG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHJlc3BvbnNlLmJvZHksIHJlc3BvbnNlKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZWRpcmVjdCh1cmwsIGluaXQpIHtcclxuICAgICAgICBjb25zdCBzdGF0dXMgPSB0eXBlb2YgaW5pdCA9PT0gXCJudW1iZXJcIiA/IGluaXQgOiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5zdGF0dXMpID8/IDMwNztcclxuICAgICAgICBpZiAoIVJFRElSRUNUUy5oYXMoc3RhdHVzKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignRmFpbGVkIHRvIGV4ZWN1dGUgXCJyZWRpcmVjdFwiIG9uIFwicmVzcG9uc2VcIjogSW52YWxpZCBzdGF0dXMgY29kZScpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpbml0T2JqID0gdHlwZW9mIGluaXQgPT09IFwib2JqZWN0XCIgPyBpbml0IDoge307XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKGluaXRPYmogPT0gbnVsbCA/IHZvaWQgMCA6IGluaXRPYmouaGVhZGVycyk7XHJcbiAgICAgICAgaGVhZGVycy5zZXQoXCJMb2NhdGlvblwiLCAoMCwgX3V0aWxzKS52YWxpZGF0ZVVSTCh1cmwpKTtcclxuICAgICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XHJcbiAgICAgICAgICAgIC4uLmluaXRPYmosXHJcbiAgICAgICAgICAgIGhlYWRlcnMsXHJcbiAgICAgICAgICAgIHN0YXR1c1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHJld3JpdGUoZGVzdGluYXRpb24sIGluaXQpIHtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5oZWFkZXJzKTtcclxuICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1yZXdyaXRlXCIsICgwLCBfdXRpbHMpLnZhbGlkYXRlVVJMKGRlc3RpbmF0aW9uKSk7XHJcbiAgICAgICAgaGFuZGxlTWlkZGxld2FyZUZpZWxkKGluaXQsIGhlYWRlcnMpO1xyXG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHtcclxuICAgICAgICAgICAgLi4uaW5pdCxcclxuICAgICAgICAgICAgaGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIG5leHQoaW5pdCkge1xyXG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhpbml0ID09IG51bGwgPyB2b2lkIDAgOiBpbml0LmhlYWRlcnMpO1xyXG4gICAgICAgIGhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLW5leHRcIiwgXCIxXCIpO1xyXG4gICAgICAgIGhhbmRsZU1pZGRsZXdhcmVGaWVsZChpbml0LCBoZWFkZXJzKTtcclxuICAgICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XHJcbiAgICAgICAgICAgIC4uLmluaXQsXHJcbiAgICAgICAgICAgIGhlYWRlcnNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLk5leHRSZXNwb25zZSA9IE5leHRSZXNwb25zZTtcclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/response.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/spec-extension/user-agent.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/user-agent.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nexports.isBot = isBot;\r\nexports.userAgentFromString = userAgentFromString;\r\nexports.userAgent = userAgent;\r\nvar _uaParserJs = _interopRequireDefault(__webpack_require__(/*! next/dist/compiled/ua-parser-js */ \"./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\"));\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        default: obj\r\n    };\r\n}\r\nfunction isBot(input) {\r\n    return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(input);\r\n}\r\nfunction userAgentFromString(input) {\r\n    return {\r\n        ...(0, _uaParserJs).default(input),\r\n        isBot: input === undefined ? false : isBot(input)\r\n    };\r\n}\r\nfunction userAgent({ headers  }) {\r\n    return userAgentFromString(headers.get(\"user-agent\") || undefined);\r\n}\r\n\r\n//# sourceMappingURL=user-agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vdXNlci1hZ2VudC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGFBQWE7QUFDYiwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHlDQUF5QyxtQkFBTyxDQUFDLG9HQUFpQztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFVBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL3VzZXItYWdlbnQuanM/OTQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgICB2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5pc0JvdCA9IGlzQm90O1xyXG5leHBvcnRzLnVzZXJBZ2VudEZyb21TdHJpbmcgPSB1c2VyQWdlbnRGcm9tU3RyaW5nO1xyXG5leHBvcnRzLnVzZXJBZ2VudCA9IHVzZXJBZ2VudDtcclxudmFyIF91YVBhcnNlckpzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3VhLXBhcnNlci1qc1wiKSk7XHJcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XHJcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xyXG4gICAgICAgIGRlZmF1bHQ6IG9ialxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0JvdChpbnB1dCkge1xyXG4gICAgcmV0dXJuIC9Hb29nbGVib3R8TWVkaWFwYXJ0bmVycy1Hb29nbGV8QWRzQm90LUdvb2dsZXxnb29nbGV3ZWJsaWdodHxTdG9yZWJvdC1Hb29nbGV8R29vZ2xlLVBhZ2VSZW5kZXJlcnxCaW5nYm90fEJpbmdQcmV2aWV3fFNsdXJwfER1Y2tEdWNrQm90fGJhaWR1c3BpZGVyfHlhbmRleHxzb2dvdXxMaW5rZWRJbkJvdHxiaXRseWJvdHx0dW1ibHJ8dmtTaGFyZXxxdW9yYSBsaW5rIHByZXZpZXd8ZmFjZWJvb2tleHRlcm5hbGhpdHxmYWNlYm9va2NhdGFsb2d8VHdpdHRlcmJvdHxhcHBsZWJvdHxyZWRkaXRib3R8U2xhY2tib3R8RGlzY29yZGJvdHxXaGF0c0FwcHxTa3lwZVVyaVByZXZpZXd8aWFfYXJjaGl2ZXIvaS50ZXN0KGlucHV0KTtcclxufVxyXG5mdW5jdGlvbiB1c2VyQWdlbnRGcm9tU3RyaW5nKGlucHV0KSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLigwLCBfdWFQYXJzZXJKcykuZGVmYXVsdChpbnB1dCksXHJcbiAgICAgICAgaXNCb3Q6IGlucHV0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IGlzQm90KGlucHV0KVxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiB1c2VyQWdlbnQoeyBoZWFkZXJzICB9KSB7XHJcbiAgICByZXR1cm4gdXNlckFnZW50RnJvbVN0cmluZyhoZWFkZXJzLmdldChcInVzZXItYWdlbnRcIikgfHwgdW5kZWZpbmVkKTtcclxufVxyXG5cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci1hZ2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/spec-extension/user-agent.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/web/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/server/web/utils.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nObject.defineProperty(exports, \"__esModule\", ({\r\n    value: true\r\n}));\r\nexports.fromNodeHeaders = fromNodeHeaders;\r\nexports.splitCookiesString = splitCookiesString;\r\nexports.toNodeHeaders = toNodeHeaders;\r\nexports.validateURL = validateURL;\r\nfunction fromNodeHeaders(object) {\r\n    const headers = new Headers();\r\n    for (let [key, value] of Object.entries(object)){\r\n        const values = Array.isArray(value) ? value : [\r\n            value\r\n        ];\r\n        for (let v of values){\r\n            if (v !== undefined) {\r\n                headers.append(key, v);\r\n            }\r\n        }\r\n    }\r\n    return headers;\r\n}\r\nfunction splitCookiesString(cookiesString) {\r\n    var cookiesStrings = [];\r\n    var pos = 0;\r\n    var start;\r\n    var ch;\r\n    var lastComma;\r\n    var nextStart;\r\n    var cookiesSeparatorFound;\r\n    function skipWhitespace() {\r\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\r\n            pos += 1;\r\n        }\r\n        return pos < cookiesString.length;\r\n    }\r\n    function notSpecialChar() {\r\n        ch = cookiesString.charAt(pos);\r\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\r\n    }\r\n    while(pos < cookiesString.length){\r\n        start = pos;\r\n        cookiesSeparatorFound = false;\r\n        while(skipWhitespace()){\r\n            ch = cookiesString.charAt(pos);\r\n            if (ch === \",\") {\r\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\r\n                lastComma = pos;\r\n                pos += 1;\r\n                skipWhitespace();\r\n                nextStart = pos;\r\n                while(pos < cookiesString.length && notSpecialChar()){\r\n                    pos += 1;\r\n                }\r\n                // currently special character\r\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\r\n                    // we found cookies separator\r\n                    cookiesSeparatorFound = true;\r\n                    // pos is inside the next cookie, so back up and return it.\r\n                    pos = nextStart;\r\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\r\n                    start = pos;\r\n                } else {\r\n                    // in param ',' or param separator ';',\r\n                    // we continue from that comma\r\n                    pos = lastComma + 1;\r\n                }\r\n            } else {\r\n                pos += 1;\r\n            }\r\n        }\r\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\r\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\r\n        }\r\n    }\r\n    return cookiesStrings;\r\n}\r\nfunction toNodeHeaders(headers) {\r\n    const result = {};\r\n    if (headers) {\r\n        for (const [key, value] of headers.entries()){\r\n            result[key] = value;\r\n            if (key.toLowerCase() === \"set-cookie\") {\r\n                result[key] = splitCookiesString(value);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction validateURL(url) {\r\n    try {\r\n        return String(new URL(String(url)));\r\n    } catch (error) {\r\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\r\n            cause: error\r\n        });\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix1QkFBdUI7QUFDdkIsMEJBQTBCO0FBQzFCLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQix5REFBeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiw2Q0FBNkMsWUFBWTtBQUN6RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvdXRpbHMuanM/MmE3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XHJcbiAgICB2YWx1ZTogdHJ1ZVxyXG59KTtcclxuZXhwb3J0cy5mcm9tTm9kZUhlYWRlcnMgPSBmcm9tTm9kZUhlYWRlcnM7XHJcbmV4cG9ydHMuc3BsaXRDb29raWVzU3RyaW5nID0gc3BsaXRDb29raWVzU3RyaW5nO1xyXG5leHBvcnRzLnRvTm9kZUhlYWRlcnMgPSB0b05vZGVIZWFkZXJzO1xyXG5leHBvcnRzLnZhbGlkYXRlVVJMID0gdmFsaWRhdGVVUkw7XHJcbmZ1bmN0aW9uIGZyb21Ob2RlSGVhZGVycyhvYmplY3QpIHtcclxuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG4gICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG9iamVjdCkpe1xyXG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbXHJcbiAgICAgICAgICAgIHZhbHVlXHJcbiAgICAgICAgXTtcclxuICAgICAgICBmb3IgKGxldCB2IG9mIHZhbHVlcyl7XHJcbiAgICAgICAgICAgIGlmICh2ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaGVhZGVycztcclxufVxyXG5mdW5jdGlvbiBzcGxpdENvb2tpZXNTdHJpbmcoY29va2llc1N0cmluZykge1xyXG4gICAgdmFyIGNvb2tpZXNTdHJpbmdzID0gW107XHJcbiAgICB2YXIgcG9zID0gMDtcclxuICAgIHZhciBzdGFydDtcclxuICAgIHZhciBjaDtcclxuICAgIHZhciBsYXN0Q29tbWE7XHJcbiAgICB2YXIgbmV4dFN0YXJ0O1xyXG4gICAgdmFyIGNvb2tpZXNTZXBhcmF0b3JGb3VuZDtcclxuICAgIGZ1bmN0aW9uIHNraXBXaGl0ZXNwYWNlKCkge1xyXG4gICAgICAgIHdoaWxlKHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoICYmIC9cXHMvLnRlc3QoY29va2llc1N0cmluZy5jaGFyQXQocG9zKSkpe1xyXG4gICAgICAgICAgICBwb3MgKz0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gbm90U3BlY2lhbENoYXIoKSB7XHJcbiAgICAgICAgY2ggPSBjb29raWVzU3RyaW5nLmNoYXJBdChwb3MpO1xyXG4gICAgICAgIHJldHVybiBjaCAhPT0gXCI9XCIgJiYgY2ggIT09IFwiO1wiICYmIGNoICE9PSBcIixcIjtcclxuICAgIH1cclxuICAgIHdoaWxlKHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoKXtcclxuICAgICAgICBzdGFydCA9IHBvcztcclxuICAgICAgICBjb29raWVzU2VwYXJhdG9yRm91bmQgPSBmYWxzZTtcclxuICAgICAgICB3aGlsZShza2lwV2hpdGVzcGFjZSgpKXtcclxuICAgICAgICAgICAgY2ggPSBjb29raWVzU3RyaW5nLmNoYXJBdChwb3MpO1xyXG4gICAgICAgICAgICBpZiAoY2ggPT09IFwiLFwiKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAnLCcgaXMgYSBjb29raWUgc2VwYXJhdG9yIGlmIHdlIGhhdmUgbGF0ZXIgZmlyc3QgJz0nLCBub3QgJzsnIG9yICcsJ1xyXG4gICAgICAgICAgICAgICAgbGFzdENvbW1hID0gcG9zO1xyXG4gICAgICAgICAgICAgICAgcG9zICs9IDE7XHJcbiAgICAgICAgICAgICAgICBza2lwV2hpdGVzcGFjZSgpO1xyXG4gICAgICAgICAgICAgICAgbmV4dFN0YXJ0ID0gcG9zO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUocG9zIDwgY29va2llc1N0cmluZy5sZW5ndGggJiYgbm90U3BlY2lhbENoYXIoKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zICs9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyBjdXJyZW50bHkgc3BlY2lhbCBjaGFyYWN0ZXJcclxuICAgICAgICAgICAgICAgIGlmIChwb3MgPCBjb29raWVzU3RyaW5nLmxlbmd0aCAmJiBjb29raWVzU3RyaW5nLmNoYXJBdChwb3MpID09PSBcIj1cIikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHdlIGZvdW5kIGNvb2tpZXMgc2VwYXJhdG9yXHJcbiAgICAgICAgICAgICAgICAgICAgY29va2llc1NlcGFyYXRvckZvdW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBwb3MgaXMgaW5zaWRlIHRoZSBuZXh0IGNvb2tpZSwgc28gYmFjayB1cCBhbmQgcmV0dXJuIGl0LlxyXG4gICAgICAgICAgICAgICAgICAgIHBvcyA9IG5leHRTdGFydDtcclxuICAgICAgICAgICAgICAgICAgICBjb29raWVzU3RyaW5ncy5wdXNoKGNvb2tpZXNTdHJpbmcuc3Vic3RyaW5nKHN0YXJ0LCBsYXN0Q29tbWEpKTtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHBvcztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gaW4gcGFyYW0gJywnIG9yIHBhcmFtIHNlcGFyYXRvciAnOycsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgY29udGludWUgZnJvbSB0aGF0IGNvbW1hXHJcbiAgICAgICAgICAgICAgICAgICAgcG9zID0gbGFzdENvbW1hICsgMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBvcyArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghY29va2llc1NlcGFyYXRvckZvdW5kIHx8IHBvcyA+PSBjb29raWVzU3RyaW5nLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBjb29raWVzU3RyaW5ncy5wdXNoKGNvb2tpZXNTdHJpbmcuc3Vic3RyaW5nKHN0YXJ0LCBjb29raWVzU3RyaW5nLmxlbmd0aCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBjb29raWVzU3RyaW5ncztcclxufVxyXG5mdW5jdGlvbiB0b05vZGVIZWFkZXJzKGhlYWRlcnMpIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xyXG4gICAgaWYgKGhlYWRlcnMpIHtcclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBoZWFkZXJzLmVudHJpZXMoKSl7XHJcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gXCJzZXQtY29va2llXCIpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gc3BsaXRDb29raWVzU3RyaW5nKHZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuZnVuY3Rpb24gdmFsaWRhdGVVUkwodXJsKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBTdHJpbmcobmV3IFVSTChTdHJpbmcodXJsKSkpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVSTCBpcyBtYWxmb3JtZWQgXCIke1N0cmluZyh1cmwpfVwiLiBQbGVhc2UgdXNlIG9ubHkgYWJzb2x1dGUgVVJMcyAtIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVsYXRpdmUtdXJsc2AsIHtcclxuICAgICAgICAgICAgY2F1c2U6IGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/web/utils.js\n"));

/***/ }),

/***/ "./node_modules/next/server.js":
/*!*************************************!*\
  !*** ./node_modules/next/server.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("const serverExports = {\r\n  NextRequest: (__webpack_require__(/*! next/dist/server/web/spec-extension/request */ \"./node_modules/next/dist/server/web/spec-extension/request.js\").NextRequest),\r\n  NextResponse: (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"./node_modules/next/dist/server/web/spec-extension/response.js\").NextResponse),\r\n  userAgentFromString: (__webpack_require__(/*! next/dist/server/web/spec-extension/user-agent */ \"./node_modules/next/dist/server/web/spec-extension/user-agent.js\").userAgentFromString),\r\n  userAgent: (__webpack_require__(/*! next/dist/server/web/spec-extension/user-agent */ \"./node_modules/next/dist/server/web/spec-extension/user-agent.js\").userAgent),\r\n}\r\n\r\nif (typeof URLPattern !== 'undefined') {\r\n  // eslint-disable-next-line no-undef\r\n  serverExports.URLPattern = URLPattern\r\n}\r\n\r\n// https://nodejs.org/api/esm.html#commonjs-namespaces\r\n// When importing CommonJS modules, the module.exports object is provided as the default export\r\nmodule.exports = serverExports\r\n\r\n// make import { xxx } from 'next/server' work\r\nexports.NextRequest = serverExports.NextRequest\r\nexports.NextResponse = serverExports.NextResponse\r\nexports.userAgentFromString = serverExports.userAgentFromString\r\nexports.userAgent = serverExports.userAgent\r\nexports.URLPattern = serverExports.URLPattern\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9zZXJ2ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxlQUFlLHFKQUNDO0FBQ2hCLGdCQUFnQix3SkFDQztBQUNqQix1QkFBdUIsbUtBQ0M7QUFDeEIsYUFBYSx5SkFDQztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QixtQkFBbUI7QUFDbkIsb0JBQW9CO0FBQ3BCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3NlcnZlci5qcz8zMjJhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNlcnZlckV4cG9ydHMgPSB7XHJcbiAgTmV4dFJlcXVlc3Q6IHJlcXVpcmUoJ25leHQvZGlzdC9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL3JlcXVlc3QnKVxyXG4gICAgLk5leHRSZXF1ZXN0LFxyXG4gIE5leHRSZXNwb25zZTogcmVxdWlyZSgnbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVzcG9uc2UnKVxyXG4gICAgLk5leHRSZXNwb25zZSxcclxuICB1c2VyQWdlbnRGcm9tU3RyaW5nOiByZXF1aXJlKCduZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50JylcclxuICAgIC51c2VyQWdlbnRGcm9tU3RyaW5nLFxyXG4gIHVzZXJBZ2VudDogcmVxdWlyZSgnbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vdXNlci1hZ2VudCcpXHJcbiAgICAudXNlckFnZW50LFxyXG59XHJcblxyXG5pZiAodHlwZW9mIFVSTFBhdHRlcm4gIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXHJcbiAgc2VydmVyRXhwb3J0cy5VUkxQYXR0ZXJuID0gVVJMUGF0dGVyblxyXG59XHJcblxyXG4vLyBodHRwczovL25vZGVqcy5vcmcvYXBpL2VzbS5odG1sI2NvbW1vbmpzLW5hbWVzcGFjZXNcclxuLy8gV2hlbiBpbXBvcnRpbmcgQ29tbW9uSlMgbW9kdWxlcywgdGhlIG1vZHVsZS5leHBvcnRzIG9iamVjdCBpcyBwcm92aWRlZCBhcyB0aGUgZGVmYXVsdCBleHBvcnRcclxubW9kdWxlLmV4cG9ydHMgPSBzZXJ2ZXJFeHBvcnRzXHJcblxyXG4vLyBtYWtlIGltcG9ydCB7IHh4eCB9IGZyb20gJ25leHQvc2VydmVyJyB3b3JrXHJcbmV4cG9ydHMuTmV4dFJlcXVlc3QgPSBzZXJ2ZXJFeHBvcnRzLk5leHRSZXF1ZXN0XHJcbmV4cG9ydHMuTmV4dFJlc3BvbnNlID0gc2VydmVyRXhwb3J0cy5OZXh0UmVzcG9uc2VcclxuZXhwb3J0cy51c2VyQWdlbnRGcm9tU3RyaW5nID0gc2VydmVyRXhwb3J0cy51c2VyQWdlbnRGcm9tU3RyaW5nXHJcbmV4cG9ydHMudXNlckFnZW50ID0gc2VydmVyRXhwb3J0cy51c2VyQWdlbnRcclxuZXhwb3J0cy5VUkxQYXR0ZXJuID0gc2VydmVyRXhwb3J0cy5VUkxQYXR0ZXJuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/server.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\r\n * @license React\r\n * react-jsx-dev-runtime.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\nif (true) {\r\n  (function() {\r\n'use strict';\r\n\r\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n// The Symbol used to tag the ReactElement-like types.\r\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nfunction error(format) {\r\n  {\r\n    {\r\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n        args[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  {\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n\r\n    var argsWithFormat = args.map(function (item) {\r\n      return String(item);\r\n    }); // Careful: RN currently depends on this prefix\r\n\r\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\r\nvar enableCacheElement = false;\r\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\r\n\r\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\r\n// stuff. Intended to enable React core members to more easily debug scheduling\r\n// issues in DEV builds.\r\n\r\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\r\n\r\nvar REACT_MODULE_REFERENCE;\r\n\r\n{\r\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\r\n}\r\n\r\nfunction isValidElementType(type) {\r\n  if (typeof type === 'string' || typeof type === 'function') {\r\n    return true;\r\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\r\n\r\n\r\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof type === 'object' && type !== null) {\r\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\r\n    // types supported by any Flight configuration anywhere since\r\n    // we don't know which Flight build this will end up being used\r\n    // with.\r\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var displayName = outerType.displayName;\r\n\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\r\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\r\n\r\n\r\nfunction getContextName(type) {\r\n  return type.displayName || 'Context';\r\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\n\r\n\r\nfunction getComponentNameFromType(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n\r\n  {\r\n    if (typeof type.tag === 'number') {\r\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    return type.displayName || type.name || null;\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        var context = type;\r\n        return getContextName(context) + '.Consumer';\r\n\r\n      case REACT_PROVIDER_TYPE:\r\n        var provider = type;\r\n        return getContextName(provider._context) + '.Provider';\r\n\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n\r\n      case REACT_MEMO_TYPE:\r\n        var outerName = type.displayName || null;\r\n\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            return getComponentNameFromType(init(payload));\r\n          } catch (x) {\r\n            return null;\r\n          }\r\n        }\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar assign = Object.assign;\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\nvar disabledDepth = 0;\r\nvar prevLog;\r\nvar prevInfo;\r\nvar prevWarn;\r\nvar prevError;\r\nvar prevGroup;\r\nvar prevGroupCollapsed;\r\nvar prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\n\r\ndisabledLog.__reactDisabledLog = true;\r\nfunction disableLogs() {\r\n  {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\r\n\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    disabledDepth++;\r\n  }\r\n}\r\nfunction reenableLogs() {\r\n  {\r\n    disabledDepth--;\r\n\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        log: assign({}, props, {\r\n          value: prevLog\r\n        }),\r\n        info: assign({}, props, {\r\n          value: prevInfo\r\n        }),\r\n        warn: assign({}, props, {\r\n          value: prevWarn\r\n        }),\r\n        error: assign({}, props, {\r\n          value: prevError\r\n        }),\r\n        group: assign({}, props, {\r\n          value: prevGroup\r\n        }),\r\n        groupCollapsed: assign({}, props, {\r\n          value: prevGroupCollapsed\r\n        }),\r\n        groupEnd: assign({}, props, {\r\n          value: prevGroupEnd\r\n        })\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    if (disabledDepth < 0) {\r\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\nvar prefix;\r\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\r\n  {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = match && match[1] || '';\r\n      }\r\n    } // We use the prefix to ensure our stacks line up with native stack frames.\r\n\r\n\r\n    return '\\n' + prefix + name;\r\n  }\r\n}\r\nvar reentry = false;\r\nvar componentFrameCache;\r\n\r\n{\r\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nfunction describeNativeComponentFrame(fn, construct) {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if ( !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  {\r\n    var frame = componentFrameCache.get(fn);\r\n\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  var control;\r\n  reentry = true;\r\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\r\n\r\n  Error.prepareStackTrace = undefined;\r\n  var previousDispatcher;\r\n\r\n  {\r\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      var Fake = function () {\r\n        throw Error();\r\n      }; // $FlowFixMe\r\n\r\n\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function () {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        }\r\n      });\r\n\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      var sampleLines = sample.stack.split('\\n');\r\n      var controlLines = control.stack.split('\\n');\r\n      var s = sampleLines.length - 1;\r\n      var c = controlLines.length - 1;\r\n\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--; // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n\r\n\r\n                if (fn.displayName && _frame.includes('<anonymous>')) {\r\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, _frame);\r\n                  }\r\n                } // Return the line we found.\r\n\r\n\r\n                return _frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n\r\n    {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  } // Fallback to just using the name if we couldn't make it throw.\r\n\r\n\r\n  var name = fn ? fn.displayName || fn.name : '';\r\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n\r\n  {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n\r\n  return syntheticFrame;\r\n}\r\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\r\n  {\r\n    return describeNativeComponentFrame(fn, false);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\r\n\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type);\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense');\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList');\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render);\r\n\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            // Lazy may contain any component type so we recursively resolve it.\r\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\r\n          } catch (x) {}\r\n        }\r\n    }\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar loggedTypeFailures = {};\r\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\r\n  {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    var has = Function.call.bind(hasOwnProperty);\r\n\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n\r\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\r\n        } catch (ex) {\r\n          error$1 = ex;\r\n        }\r\n\r\n        if (error$1 && !(error$1 instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n\r\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error$1.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('Failed %s type: %s', location, error$1.message);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\r\n\r\nfunction isArray(a) {\r\n  return isArrayImpl(a);\r\n}\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value) {\r\n  {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\r\n    return type;\r\n  }\r\n} // $FlowFixMe only called in DEV, so void return is not possible.\r\n\r\n\r\nfunction willCoercionThrow(value) {\r\n  {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + value;\r\n}\r\nfunction checkKeyStringCoercion(value) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nvar RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true\r\n};\r\nvar specialPropKeyWarningShown;\r\nvar specialPropRefWarningShown;\r\nvar didWarnAboutStringRefs;\r\n\r\n{\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\r\n  {\r\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\r\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\r\n\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  {\r\n    var warnAboutAccessingKey = function () {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n\r\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\r\n      }\r\n    };\r\n\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  {\r\n    var warnAboutAccessingRef = function () {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n\r\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\r\n      }\r\n    };\r\n\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true\r\n    });\r\n  }\r\n}\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\n\r\n\r\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\r\n  var element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner\r\n  };\r\n\r\n  {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false\r\n    }); // self and source are DEV only properties.\r\n\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self\r\n    }); // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source\r\n    });\r\n\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\n\r\nfunction jsxDEV(type, config, maybeKey, source, self) {\r\n  {\r\n    var propName; // Reserved names are extracted\r\n\r\n    var props = {};\r\n    var key = null;\r\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\r\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n    // but as an intermediary step, we will use jsxDEV for everything except\r\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n    // key is explicitly declared to be undefined or not.\r\n\r\n    if (maybeKey !== undefined) {\r\n      {\r\n        checkKeyStringCoercion(maybeKey);\r\n      }\r\n\r\n      key = '' + maybeKey;\r\n    }\r\n\r\n    if (hasValidKey(config)) {\r\n      {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n\r\n      key = '' + config.key;\r\n    }\r\n\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n      warnIfStringRefCannotBeAutoConverted(config, self);\r\n    } // Remaining properties are added to a new props object\r\n\r\n\r\n    for (propName in config) {\r\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n        props[propName] = config[propName];\r\n      }\r\n    } // Resolve default props\r\n\r\n\r\n    if (type && type.defaultProps) {\r\n      var defaultProps = type.defaultProps;\r\n\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (key || ref) {\r\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\r\n\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n\r\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\r\n  }\r\n}\r\n\r\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\r\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement$1(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\r\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nvar propTypesMisspellWarningShown;\r\n\r\n{\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\n\r\n\r\nfunction isValidElement(object) {\r\n  {\r\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n  }\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  {\r\n    if (ReactCurrentOwner$1.current) {\r\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\r\n\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(source) {\r\n  {\r\n    if (source !== undefined) {\r\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      var lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\n\r\n\r\nvar ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  {\r\n    var info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\r\n\r\n      if (parentName) {\r\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\n\r\n\r\nfunction validateExplicitKey(element, parentType) {\r\n  {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n\r\n    element._store.validated = true;\r\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n\r\n    var childOwner = '';\r\n\r\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\r\n      // Give the component that originally created this child.\r\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\r\n    }\r\n\r\n    setCurrentlyValidatingElement$1(element);\r\n\r\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\r\n\r\n    setCurrentlyValidatingElement$1(null);\r\n  }\r\n}\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\n\r\n\r\nfunction validateChildKeys(node, parentType) {\r\n  {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n\r\n    if (isArray(node)) {\r\n      for (var i = 0; i < node.length; i++) {\r\n        var child = node[i];\r\n\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      var iteratorFn = getIteratorFn(node);\r\n\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          var iterator = iteratorFn.call(node);\r\n          var step;\r\n\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\n\r\n\r\nfunction validatePropTypes(element) {\r\n  {\r\n    var type = element.type;\r\n\r\n    if (type === null || type === undefined || typeof type === 'string') {\r\n      return;\r\n    }\r\n\r\n    var propTypes;\r\n\r\n    if (typeof type === 'function') {\r\n      propTypes = type.propTypes;\r\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\r\n    // Inner props are checked in the reconciler.\r\n    type.$$typeof === REACT_MEMO_TYPE)) {\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (propTypes) {\r\n      // Intentionally inside to avoid triggering lazy initializers:\r\n      var name = getComponentNameFromType(type);\r\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\r\n\r\n      var _name = getComponentNameFromType(type);\r\n\r\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\r\n    }\r\n\r\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\r\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\r\n    }\r\n  }\r\n}\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\n\r\n\r\nfunction validateFragmentProps(fragment) {\r\n  {\r\n    var keys = Object.keys(fragment.props);\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n\r\n      if (key !== 'children' && key !== 'key') {\r\n        setCurrentlyValidatingElement$1(fragment);\r\n\r\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\r\n\r\n        setCurrentlyValidatingElement$1(null);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      setCurrentlyValidatingElement$1(fragment);\r\n\r\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\r\n\r\n      setCurrentlyValidatingElement$1(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\r\n  {\r\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n\r\n    if (!validType) {\r\n      var info = '';\r\n\r\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      var sourceInfo = getSourceInfoErrorAddendum(source);\r\n\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      var typeString;\r\n\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\r\n        info = ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\r\n    }\r\n\r\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n\r\n    if (element == null) {\r\n      return element;\r\n    } // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n\r\n\r\n    if (validType) {\r\n      var children = props.children;\r\n\r\n      if (children !== undefined) {\r\n        if (isStaticChildren) {\r\n          if (isArray(children)) {\r\n            for (var i = 0; i < children.length; i++) {\r\n              validateChildKeys(children[i], type);\r\n            }\r\n\r\n            if (Object.freeze) {\r\n              Object.freeze(children);\r\n            }\r\n          } else {\r\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\r\n          }\r\n        } else {\r\n          validateChildKeys(children, type);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n} // These two functions exist to still get child warnings in dev\r\n\r\nvar jsxDEV$1 =  jsxWithValidation ;\r\n\r\nexports.Fragment = REACT_FRAGMENT_TYPE;\r\nexports.jsxDEV = jsxDEV$1;\r\n  })();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsdUpBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NTc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/websocket/lib/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/websocket/lib/browser.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var _globalThis;\r\nif (typeof globalThis === 'object') {\r\n\t_globalThis = globalThis;\r\n} else {\r\n\ttry {\r\n\t\t_globalThis = __webpack_require__(/*! es5-ext/global */ \"./node_modules/es5-ext/global.js\");\r\n\t} catch (error) {\r\n\t} finally {\r\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\r\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\r\n\t}\r\n}\r\n\r\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\r\nvar websocket_version = __webpack_require__(/*! ./version */ \"./node_modules/websocket/lib/version.js\");\r\n\r\n\r\n/**\r\n * Expose a W3C WebSocket class with just one or two arguments.\r\n */\r\nfunction W3CWebSocket(uri, protocols) {\r\n\tvar native_instance;\r\n\r\n\tif (protocols) {\r\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\r\n\t}\r\n\telse {\r\n\t\tnative_instance = new NativeWebSocket(uri);\r\n\t}\r\n\r\n\t/**\r\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\r\n\t * class). Since it is an Object it will be returned as it is when creating an\r\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\r\n\t *\r\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\r\n\t */\r\n\treturn native_instance;\r\n}\r\nif (NativeWebSocket) {\r\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\r\n\t\tObject.defineProperty(W3CWebSocket, prop, {\r\n\t\t\tget: function() { return NativeWebSocket[prop]; }\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Module exports.\r\n */\r\nmodule.exports = {\r\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\r\n    'version'      : websocket_version\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0L2xpYi9icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLHdEQUFnQjtBQUN4QyxHQUFHO0FBQ0gsR0FBRztBQUNILHVEQUF1RDtBQUN2RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbUJBQU8sQ0FBQywwREFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsR0FBRztBQUNILEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC9saWIvYnJvd3Nlci5qcz9lY2NmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfZ2xvYmFsVGhpcztcclxuaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0Jykge1xyXG5cdF9nbG9iYWxUaGlzID0gZ2xvYmFsVGhpcztcclxufSBlbHNlIHtcclxuXHR0cnkge1xyXG5cdFx0X2dsb2JhbFRoaXMgPSByZXF1aXJlKCdlczUtZXh0L2dsb2JhbCcpO1xyXG5cdH0gY2F0Y2ggKGVycm9yKSB7XHJcblx0fSBmaW5hbGx5IHtcclxuXHRcdGlmICghX2dsb2JhbFRoaXMgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHsgX2dsb2JhbFRoaXMgPSB3aW5kb3c7IH1cclxuXHRcdGlmICghX2dsb2JhbFRoaXMpIHsgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZGV0ZXJtaW5lIGdsb2JhbCB0aGlzJyk7IH1cclxuXHR9XHJcbn1cclxuXHJcbnZhciBOYXRpdmVXZWJTb2NrZXQgPSBfZ2xvYmFsVGhpcy5XZWJTb2NrZXQgfHwgX2dsb2JhbFRoaXMuTW96V2ViU29ja2V0O1xyXG52YXIgd2Vic29ja2V0X3ZlcnNpb24gPSByZXF1aXJlKCcuL3ZlcnNpb24nKTtcclxuXHJcblxyXG4vKipcclxuICogRXhwb3NlIGEgVzNDIFdlYlNvY2tldCBjbGFzcyB3aXRoIGp1c3Qgb25lIG9yIHR3byBhcmd1bWVudHMuXHJcbiAqL1xyXG5mdW5jdGlvbiBXM0NXZWJTb2NrZXQodXJpLCBwcm90b2NvbHMpIHtcclxuXHR2YXIgbmF0aXZlX2luc3RhbmNlO1xyXG5cclxuXHRpZiAocHJvdG9jb2xzKSB7XHJcblx0XHRuYXRpdmVfaW5zdGFuY2UgPSBuZXcgTmF0aXZlV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzKTtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRuYXRpdmVfaW5zdGFuY2UgPSBuZXcgTmF0aXZlV2ViU29ja2V0KHVyaSk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiAnbmF0aXZlX2luc3RhbmNlJyBpcyBhbiBpbnN0YW5jZSBvZiBuYXRpdmVXZWJTb2NrZXQgKHRoZSBicm93c2VyJ3MgV2ViU29ja2V0XHJcblx0ICogY2xhc3MpLiBTaW5jZSBpdCBpcyBhbiBPYmplY3QgaXQgd2lsbCBiZSByZXR1cm5lZCBhcyBpdCBpcyB3aGVuIGNyZWF0aW5nIGFuXHJcblx0ICogaW5zdGFuY2Ugb2YgVzNDV2ViU29ja2V0IHZpYSAnbmV3IFczQ1dlYlNvY2tldCgpJy5cclxuXHQgKlxyXG5cdCAqIEVDTUFTY3JpcHQgNTogaHR0cDovL2JjbGFyeS5jb20vMjAwNC8xMS8wNy8jYS0xMy4yLjJcclxuXHQgKi9cclxuXHRyZXR1cm4gbmF0aXZlX2luc3RhbmNlO1xyXG59XHJcbmlmIChOYXRpdmVXZWJTb2NrZXQpIHtcclxuXHRbJ0NPTk5FQ1RJTkcnLCAnT1BFTicsICdDTE9TSU5HJywgJ0NMT1NFRCddLmZvckVhY2goZnVuY3Rpb24ocHJvcCkge1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KFczQ1dlYlNvY2tldCwgcHJvcCwge1xyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gTmF0aXZlV2ViU29ja2V0W3Byb3BdOyB9XHJcblx0XHR9KTtcclxuXHR9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIE1vZHVsZSBleHBvcnRzLlxyXG4gKi9cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICAndzNjd2Vic29ja2V0JyA6IE5hdGl2ZVdlYlNvY2tldCA/IFczQ1dlYlNvY2tldCA6IG51bGwsXHJcbiAgICAndmVyc2lvbicgICAgICA6IHdlYnNvY2tldF92ZXJzaW9uXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/websocket/lib/browser.js\n"));

/***/ }),

/***/ "./node_modules/websocket/lib/version.js":
/*!***********************************************!*\
  !*** ./node_modules/websocket/lib/version.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ../package.json */ \"./node_modules/websocket/package.json\").version;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0L2xpYi92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLDRHQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0L2xpYi92ZXJzaW9uLmpzPzE0MjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9wYWNrYWdlLmpzb24nKS52ZXJzaW9uO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/websocket/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-helpers-shared/dist/index.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-helpers-shared/dist/index.mjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccessTokenNotFound\": function() { return /* binding */ AccessTokenNotFound; },\n/* harmony export */   \"AuthHelperError\": function() { return /* binding */ AuthHelperError; },\n/* harmony export */   \"CallbackUrlFailed\": function() { return /* binding */ CallbackUrlFailed; },\n/* harmony export */   \"CookieNotFound\": function() { return /* binding */ CookieNotFound; },\n/* harmony export */   \"CookieNotParsed\": function() { return /* binding */ CookieNotParsed; },\n/* harmony export */   \"CookieNotSaved\": function() { return /* binding */ CookieNotSaved; },\n/* harmony export */   \"JWTInvalid\": function() { return /* binding */ JWTInvalid; },\n/* harmony export */   \"JWTPayloadFailed\": function() { return /* binding */ JWTPayloadFailed; },\n/* harmony export */   \"ProviderTokenNotFound\": function() { return /* binding */ ProviderTokenNotFound; },\n/* harmony export */   \"RefreshTokenNotFound\": function() { return /* binding */ RefreshTokenNotFound; },\n/* harmony export */   \"createBrowserSupabaseClient\": function() { return /* binding */ createBrowserSupabaseClient; },\n/* harmony export */   \"createServerSupabaseClient\": function() { return /* binding */ createServerSupabaseClient; },\n/* harmony export */   \"ensureArray\": function() { return /* binding */ ensureArray; },\n/* harmony export */   \"filterCookies\": function() { return /* binding */ filterCookies; },\n/* harmony export */   \"isBrowser\": function() { return /* binding */ isBrowser; },\n/* harmony export */   \"parseCookies\": function() { return /* binding */ export_parseCookies; },\n/* harmony export */   \"parseSupabaseCookie\": function() { return /* binding */ parseSupabaseCookie; },\n/* harmony export */   \"serializeCookie\": function() { return /* binding */ export_serializeCookie; },\n/* harmony export */   \"stringifySupabaseSession\": function() { return /* binding */ stringifySupabaseSession; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var js_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-base64 */ \"./node_modules/js-base64/base64.mjs\");\nvar __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __commonJS = (cb, mod) => function __require() {\r\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\n\r\n// ../../node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\r\nvar require_cookie = __commonJS({\r\n  \"../../node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\"(exports) {\r\n    \"use strict\";\r\n    exports.parse = parse3;\r\n    exports.serialize = serialize3;\r\n    var __toString = Object.prototype.toString;\r\n    var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n    function parse3(str, options) {\r\n      if (typeof str !== \"string\") {\r\n        throw new TypeError(\"argument str must be a string\");\r\n      }\r\n      var obj = {};\r\n      var opt = options || {};\r\n      var dec = opt.decode || decode;\r\n      var index = 0;\r\n      while (index < str.length) {\r\n        var eqIdx = str.indexOf(\"=\", index);\r\n        if (eqIdx === -1) {\r\n          break;\r\n        }\r\n        var endIdx = str.indexOf(\";\", index);\r\n        if (endIdx === -1) {\r\n          endIdx = str.length;\r\n        } else if (endIdx < eqIdx) {\r\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\r\n          continue;\r\n        }\r\n        var key = str.slice(index, eqIdx).trim();\r\n        if (void 0 === obj[key]) {\r\n          var val = str.slice(eqIdx + 1, endIdx).trim();\r\n          if (val.charCodeAt(0) === 34) {\r\n            val = val.slice(1, -1);\r\n          }\r\n          obj[key] = tryDecode(val, dec);\r\n        }\r\n        index = endIdx + 1;\r\n      }\r\n      return obj;\r\n    }\r\n    function serialize3(name, val, options) {\r\n      var opt = options || {};\r\n      var enc = opt.encode || encode;\r\n      if (typeof enc !== \"function\") {\r\n        throw new TypeError(\"option encode is invalid\");\r\n      }\r\n      if (!fieldContentRegExp.test(name)) {\r\n        throw new TypeError(\"argument name is invalid\");\r\n      }\r\n      var value = enc(val);\r\n      if (value && !fieldContentRegExp.test(value)) {\r\n        throw new TypeError(\"argument val is invalid\");\r\n      }\r\n      var str = name + \"=\" + value;\r\n      if (null != opt.maxAge) {\r\n        var maxAge = opt.maxAge - 0;\r\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\r\n          throw new TypeError(\"option maxAge is invalid\");\r\n        }\r\n        str += \"; Max-Age=\" + Math.floor(maxAge);\r\n      }\r\n      if (opt.domain) {\r\n        if (!fieldContentRegExp.test(opt.domain)) {\r\n          throw new TypeError(\"option domain is invalid\");\r\n        }\r\n        str += \"; Domain=\" + opt.domain;\r\n      }\r\n      if (opt.path) {\r\n        if (!fieldContentRegExp.test(opt.path)) {\r\n          throw new TypeError(\"option path is invalid\");\r\n        }\r\n        str += \"; Path=\" + opt.path;\r\n      }\r\n      if (opt.expires) {\r\n        var expires = opt.expires;\r\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\r\n          throw new TypeError(\"option expires is invalid\");\r\n        }\r\n        str += \"; Expires=\" + expires.toUTCString();\r\n      }\r\n      if (opt.httpOnly) {\r\n        str += \"; HttpOnly\";\r\n      }\r\n      if (opt.secure) {\r\n        str += \"; Secure\";\r\n      }\r\n      if (opt.priority) {\r\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\r\n        switch (priority) {\r\n          case \"low\":\r\n            str += \"; Priority=Low\";\r\n            break;\r\n          case \"medium\":\r\n            str += \"; Priority=Medium\";\r\n            break;\r\n          case \"high\":\r\n            str += \"; Priority=High\";\r\n            break;\r\n          default:\r\n            throw new TypeError(\"option priority is invalid\");\r\n        }\r\n      }\r\n      if (opt.sameSite) {\r\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\r\n        switch (sameSite) {\r\n          case true:\r\n            str += \"; SameSite=Strict\";\r\n            break;\r\n          case \"lax\":\r\n            str += \"; SameSite=Lax\";\r\n            break;\r\n          case \"strict\":\r\n            str += \"; SameSite=Strict\";\r\n            break;\r\n          case \"none\":\r\n            str += \"; SameSite=None\";\r\n            break;\r\n          default:\r\n            throw new TypeError(\"option sameSite is invalid\");\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n    function decode(str) {\r\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\r\n    }\r\n    function encode(val) {\r\n      return encodeURIComponent(val);\r\n    }\r\n    function isDate(val) {\r\n      return __toString.call(val) === \"[object Date]\" || val instanceof Date;\r\n    }\r\n    function tryDecode(str, decode2) {\r\n      try {\r\n        return decode2(str);\r\n      } catch (e) {\r\n        return str;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// src/supabase-browser.ts\r\nvar import_cookie2 = __toESM(require_cookie());\r\n\r\n\r\n// src/utils/cookies.ts\r\nvar import_cookie = __toESM(require_cookie());\r\n\r\nfunction filterCookies(cookies, key) {\r\n  const indexes = new Set(\r\n    cookies.map((cookie) => (0, import_cookie.parse)(cookie)).reduce((acc, cookie, i) => {\r\n      if (key in cookie) {\r\n        acc.push(i);\r\n      }\r\n      return acc;\r\n    }, new Array())\r\n  );\r\n  return cookies.filter((_, i) => !indexes.has(i));\r\n}\r\nfunction isSecureEnvironment(headerHost) {\r\n  if (!headerHost) {\r\n    throw new Error('The \"host\" request header is not available');\r\n  }\r\n  const headerHostStr = Array.isArray(headerHost) ? headerHost[0] : headerHost;\r\n  const host = headerHostStr.indexOf(\":\") > -1 && headerHostStr.split(\":\")[0] || headerHostStr;\r\n  if ([\"localhost\", \"127.0.0.1\"].indexOf(host) > -1 || host.endsWith(\".local\")) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction parseSupabaseCookie(str) {\r\n  if (!str) {\r\n    return null;\r\n  }\r\n  try {\r\n    const session = JSON.parse(str);\r\n    if (!session) {\r\n      return null;\r\n    }\r\n    if (session.constructor.name === \"Object\") {\r\n      return session;\r\n    }\r\n    if (session.constructor.name !== \"Array\") {\r\n      throw new Error(`Unexpected format: ${session.constructor.name}`);\r\n    }\r\n    const [_header, payloadStr, _signature] = session[0].split(\".\");\r\n    const payload = (0,js_base64__WEBPACK_IMPORTED_MODULE_0__.fromBase64)(payloadStr);\r\n    const { exp, sub, ...user } = JSON.parse(payload);\r\n    return {\r\n      expires_at: exp,\r\n      expires_in: exp - Math.round(Date.now() / 1e3),\r\n      token_type: \"bearer\",\r\n      access_token: session[0],\r\n      refresh_token: session[1],\r\n      provider_token: session[2],\r\n      provider_refresh_token: session[3],\r\n      user: {\r\n        id: sub,\r\n        factors: session[4],\r\n        ...user\r\n      }\r\n    };\r\n  } catch (err) {\r\n    console.warn(\"Failed to parse cookie string:\", err);\r\n    return null;\r\n  }\r\n}\r\nfunction stringifySupabaseSession(session) {\r\n  return JSON.stringify([\r\n    session.access_token,\r\n    session.refresh_token,\r\n    session.provider_token,\r\n    session.provider_refresh_token,\r\n    session.user.factors\r\n  ]);\r\n}\r\n\r\n// src/utils/helpers.ts\r\nfunction ensureArray(data) {\r\n  return Array.isArray(data) ? data : [data];\r\n}\r\nfunction isBrowser() {\r\n  return typeof window !== \"undefined\";\r\n}\r\n\r\n// src/supabase-browser.ts\r\nfunction createBrowserSupabaseClient({\r\n  supabaseUrl,\r\n  supabaseKey,\r\n  options,\r\n  cookieOptions: {\r\n    name = \"supabase-auth-token\",\r\n    domain,\r\n    path = \"/\",\r\n    sameSite = \"lax\",\r\n    secure,\r\n    maxAge = 1e3 * 60 * 60 * 24 * 365\r\n  } = {}\r\n}) {\r\n  return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseKey, {\r\n    ...options,\r\n    auth: {\r\n      storageKey: name,\r\n      storage: {\r\n        getItem(key) {\r\n          if (!isBrowser()) {\r\n            return null;\r\n          }\r\n          const cookies = (0, import_cookie2.parse)(document.cookie);\r\n          const session = parseSupabaseCookie(cookies[key]);\r\n          return session ? JSON.stringify(session) : null;\r\n        },\r\n        setItem(key, _value) {\r\n          var _a;\r\n          if (!isBrowser()) {\r\n            return;\r\n          }\r\n          let session = JSON.parse(_value);\r\n          const value = stringifySupabaseSession(session);\r\n          document.cookie = (0, import_cookie2.serialize)(key, value, {\r\n            domain,\r\n            path,\r\n            maxAge,\r\n            httpOnly: false,\r\n            sameSite,\r\n            secure: secure ?? ((_a = document.location) == null ? void 0 : _a.protocol) === \"https:\"\r\n          });\r\n        },\r\n        removeItem(key) {\r\n          if (!isBrowser()) {\r\n            return;\r\n          }\r\n          document.cookie = (0, import_cookie2.serialize)(key, \"\", {\r\n            domain,\r\n            path,\r\n            expires: new Date(0),\r\n            httpOnly: false,\r\n            sameSite,\r\n            secure\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// src/supabase-server.ts\r\n\r\nfunction createServerSupabaseClient({\r\n  supabaseUrl,\r\n  supabaseKey,\r\n  getCookie,\r\n  setCookie,\r\n  getRequestHeader,\r\n  options,\r\n  cookieOptions: {\r\n    name = \"supabase-auth-token\",\r\n    domain,\r\n    path = \"/\",\r\n    sameSite = \"lax\",\r\n    secure,\r\n    maxAge = 1e3 * 60 * 60 * 24 * 365\r\n  } = {}\r\n}) {\r\n  let currentSession = parseSupabaseCookie(getCookie(name)) ?? null;\r\n  return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseKey, {\r\n    ...options,\r\n    auth: {\r\n      detectSessionInUrl: false,\r\n      autoRefreshToken: false,\r\n      storageKey: name,\r\n      storage: {\r\n        getItem(key) {\r\n          return JSON.stringify(currentSession);\r\n        },\r\n        setItem(key, _value) {\r\n          let session = JSON.parse(_value);\r\n          const value = stringifySupabaseSession(session);\r\n          currentSession = session;\r\n          setCookie(key, value, {\r\n            domain,\r\n            path,\r\n            maxAge,\r\n            httpOnly: false,\r\n            sameSite,\r\n            secure: secure ?? isSecureEnvironment(getRequestHeader(\"host\"))\r\n          });\r\n        },\r\n        removeItem(key) {\r\n          if (!currentSession) {\r\n            return;\r\n          }\r\n          setCookie(key, \"\", {\r\n            domain,\r\n            path,\r\n            expires: new Date(0),\r\n            httpOnly: false,\r\n            sameSite,\r\n            secure: secure ?? isSecureEnvironment(getRequestHeader(\"host\"))\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// src/utils/errors.ts\r\nvar AuthHelperError = class extends Error {\r\n  constructor(message, errorType) {\r\n    super(message);\r\n    this.errorType = errorType;\r\n    this.source = \"sb_auth_helpers\";\r\n  }\r\n  toObj() {\r\n    return {\r\n      type: this.errorType,\r\n      message: this.message,\r\n      source: this.source\r\n    };\r\n  }\r\n  toString() {\r\n    return JSON.stringify(this.toObj());\r\n  }\r\n};\r\nvar CookieNotFound = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"No cookie was found!\", \"cookie_not_found\");\r\n  }\r\n};\r\nvar CookieNotSaved = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"Cookies cannot be saved!\", \"cookie_not_saved\");\r\n  }\r\n};\r\nvar AccessTokenNotFound = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"No access token was found!\", \"cookie_not_found\");\r\n  }\r\n};\r\nvar RefreshTokenNotFound = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"No refresh token was found!\", \"cookie_not_found\");\r\n  }\r\n};\r\nvar ProviderTokenNotFound = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"No provider token was found!\", \"cookie_not_found\");\r\n  }\r\n};\r\nvar CookieNotParsed = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"Not able to parse cookies!\", \"cookie_not_parsed\");\r\n  }\r\n};\r\nvar CallbackUrlFailed = class extends AuthHelperError {\r\n  constructor(callbackUrl) {\r\n    super(`The request to ${callbackUrl} failed!`, \"callback_url_failed\");\r\n  }\r\n};\r\nvar JWTPayloadFailed = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"Not able to parse JWT payload!\", \"jwt_payload_failed\");\r\n  }\r\n};\r\nvar JWTInvalid = class extends AuthHelperError {\r\n  constructor() {\r\n    super(\"Invalid jwt!\", \"jwt_invalid\");\r\n  }\r\n};\r\nvar export_parseCookies = import_cookie.parse;\r\nvar export_serializeCookie = import_cookie.serialize;\r\n\r\n/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/index.js":
/*!***************************************************!*\
  !*** ./node_modules/javascript-time-ago/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _modules_TimeAgo_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"intlDateTimeFormatSupported\": function() { return /* reexport safe */ _modules_locale_js__WEBPACK_IMPORTED_MODULE_1__.intlDateTimeFormatSupported; },\n/* harmony export */   \"intlDateTimeFormatSupportedLocale\": function() { return /* reexport safe */ _modules_locale_js__WEBPACK_IMPORTED_MODULE_1__.intlDateTimeFormatSupportedLocale; }\n/* harmony export */ });\n/* harmony import */ var _modules_TimeAgo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/TimeAgo.js */ \"./node_modules/javascript-time-ago/modules/TimeAgo.js\");\n/* harmony import */ var _modules_locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/locale.js */ \"./node_modules/javascript-time-ago/modules/locale.js\");\n\r\n\r\n// I guess these two are deprecated.\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QztBQUM5QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL2luZGV4LmpzPzdhOWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vbW9kdWxlcy9UaW1lQWdvLmpzJ1xyXG5cclxuLy8gSSBndWVzcyB0aGVzZSB0d28gYXJlIGRlcHJlY2F0ZWQuXHJcbmV4cG9ydCB7XHJcblx0aW50bERhdGVUaW1lRm9ybWF0U3VwcG9ydGVkIGFzIGludGxEYXRlVGltZUZvcm1hdFN1cHBvcnRlZCxcclxuXHRpbnRsRGF0ZVRpbWVGb3JtYXRTdXBwb3J0ZWRMb2NhbGUgYXMgaW50bERhdGVUaW1lRm9ybWF0U3VwcG9ydGVkTG9jYWxlXHJcbn0gZnJvbSAnLi9tb2R1bGVzL2xvY2FsZS5qcyciXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/index.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/locale/en.json.js":
/*!************************************************************!*\
  !*** ./node_modules/javascript-time-ago/locale/en.json.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n\t\"locale\": \"en\",\r\n\t\"long\": {\r\n\t\t\"year\": {\r\n\t\t\t\"previous\": \"last year\",\r\n\t\t\t\"current\": \"this year\",\r\n\t\t\t\"next\": \"next year\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} year ago\",\r\n\t\t\t\t\"other\": \"{0} years ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} year\",\r\n\t\t\t\t\"other\": \"in {0} years\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"quarter\": {\r\n\t\t\t\"previous\": \"last quarter\",\r\n\t\t\t\"current\": \"this quarter\",\r\n\t\t\t\"next\": \"next quarter\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} quarter ago\",\r\n\t\t\t\t\"other\": \"{0} quarters ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} quarter\",\r\n\t\t\t\t\"other\": \"in {0} quarters\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"month\": {\r\n\t\t\t\"previous\": \"last month\",\r\n\t\t\t\"current\": \"this month\",\r\n\t\t\t\"next\": \"next month\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} month ago\",\r\n\t\t\t\t\"other\": \"{0} months ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} month\",\r\n\t\t\t\t\"other\": \"in {0} months\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"week\": {\r\n\t\t\t\"previous\": \"last week\",\r\n\t\t\t\"current\": \"this week\",\r\n\t\t\t\"next\": \"next week\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} week ago\",\r\n\t\t\t\t\"other\": \"{0} weeks ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} week\",\r\n\t\t\t\t\"other\": \"in {0} weeks\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"day\": {\r\n\t\t\t\"previous\": \"yesterday\",\r\n\t\t\t\"current\": \"today\",\r\n\t\t\t\"next\": \"tomorrow\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} day ago\",\r\n\t\t\t\t\"other\": \"{0} days ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} day\",\r\n\t\t\t\t\"other\": \"in {0} days\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"hour\": {\r\n\t\t\t\"current\": \"this hour\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} hour ago\",\r\n\t\t\t\t\"other\": \"{0} hours ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} hour\",\r\n\t\t\t\t\"other\": \"in {0} hours\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"minute\": {\r\n\t\t\t\"current\": \"this minute\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} minute ago\",\r\n\t\t\t\t\"other\": \"{0} minutes ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} minute\",\r\n\t\t\t\t\"other\": \"in {0} minutes\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"second\": {\r\n\t\t\t\"current\": \"now\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} second ago\",\r\n\t\t\t\t\"other\": \"{0} seconds ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} second\",\r\n\t\t\t\t\"other\": \"in {0} seconds\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"short\": {\r\n\t\t\"year\": {\r\n\t\t\t\"previous\": \"last yr.\",\r\n\t\t\t\"current\": \"this yr.\",\r\n\t\t\t\"next\": \"next yr.\",\r\n\t\t\t\"past\": \"{0} yr. ago\",\r\n\t\t\t\"future\": \"in {0} yr.\"\r\n\t\t},\r\n\t\t\"quarter\": {\r\n\t\t\t\"previous\": \"last qtr.\",\r\n\t\t\t\"current\": \"this qtr.\",\r\n\t\t\t\"next\": \"next qtr.\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} qtr. ago\",\r\n\t\t\t\t\"other\": \"{0} qtrs. ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} qtr.\",\r\n\t\t\t\t\"other\": \"in {0} qtrs.\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"month\": {\r\n\t\t\t\"previous\": \"last mo.\",\r\n\t\t\t\"current\": \"this mo.\",\r\n\t\t\t\"next\": \"next mo.\",\r\n\t\t\t\"past\": \"{0} mo. ago\",\r\n\t\t\t\"future\": \"in {0} mo.\"\r\n\t\t},\r\n\t\t\"week\": {\r\n\t\t\t\"previous\": \"last wk.\",\r\n\t\t\t\"current\": \"this wk.\",\r\n\t\t\t\"next\": \"next wk.\",\r\n\t\t\t\"past\": \"{0} wk. ago\",\r\n\t\t\t\"future\": \"in {0} wk.\"\r\n\t\t},\r\n\t\t\"day\": {\r\n\t\t\t\"previous\": \"yesterday\",\r\n\t\t\t\"current\": \"today\",\r\n\t\t\t\"next\": \"tomorrow\",\r\n\t\t\t\"past\": {\r\n\t\t\t\t\"one\": \"{0} day ago\",\r\n\t\t\t\t\"other\": \"{0} days ago\"\r\n\t\t\t},\r\n\t\t\t\"future\": {\r\n\t\t\t\t\"one\": \"in {0} day\",\r\n\t\t\t\t\"other\": \"in {0} days\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"hour\": {\r\n\t\t\t\"current\": \"this hour\",\r\n\t\t\t\"past\": \"{0} hr. ago\",\r\n\t\t\t\"future\": \"in {0} hr.\"\r\n\t\t},\r\n\t\t\"minute\": {\r\n\t\t\t\"current\": \"this minute\",\r\n\t\t\t\"past\": \"{0} min. ago\",\r\n\t\t\t\"future\": \"in {0} min.\"\r\n\t\t},\r\n\t\t\"second\": {\r\n\t\t\t\"current\": \"now\",\r\n\t\t\t\"past\": \"{0} sec. ago\",\r\n\t\t\t\"future\": \"in {0} sec.\"\r\n\t\t}\r\n\t},\r\n\t\"narrow\": {\r\n\t\t\"year\": {\r\n\t\t\t\"previous\": \"last yr.\",\r\n\t\t\t\"current\": \"this yr.\",\r\n\t\t\t\"next\": \"next yr.\",\r\n\t\t\t\"past\": \"{0}y ago\",\r\n\t\t\t\"future\": \"in {0}y\"\r\n\t\t},\r\n\t\t\"quarter\": {\r\n\t\t\t\"previous\": \"last qtr.\",\r\n\t\t\t\"current\": \"this qtr.\",\r\n\t\t\t\"next\": \"next qtr.\",\r\n\t\t\t\"past\": \"{0}q ago\",\r\n\t\t\t\"future\": \"in {0}q\"\r\n\t\t},\r\n\t\t\"month\": {\r\n\t\t\t\"previous\": \"last mo.\",\r\n\t\t\t\"current\": \"this mo.\",\r\n\t\t\t\"next\": \"next mo.\",\r\n\t\t\t\"past\": \"{0}mo ago\",\r\n\t\t\t\"future\": \"in {0}mo\"\r\n\t\t},\r\n\t\t\"week\": {\r\n\t\t\t\"previous\": \"last wk.\",\r\n\t\t\t\"current\": \"this wk.\",\r\n\t\t\t\"next\": \"next wk.\",\r\n\t\t\t\"past\": \"{0}w ago\",\r\n\t\t\t\"future\": \"in {0}w\"\r\n\t\t},\r\n\t\t\"day\": {\r\n\t\t\t\"previous\": \"yesterday\",\r\n\t\t\t\"current\": \"today\",\r\n\t\t\t\"next\": \"tomorrow\",\r\n\t\t\t\"past\": \"{0}d ago\",\r\n\t\t\t\"future\": \"in {0}d\"\r\n\t\t},\r\n\t\t\"hour\": {\r\n\t\t\t\"current\": \"this hour\",\r\n\t\t\t\"past\": \"{0}h ago\",\r\n\t\t\t\"future\": \"in {0}h\"\r\n\t\t},\r\n\t\t\"minute\": {\r\n\t\t\t\"current\": \"this minute\",\r\n\t\t\t\"past\": \"{0}m ago\",\r\n\t\t\t\"future\": \"in {0}m\"\r\n\t\t},\r\n\t\t\"second\": {\r\n\t\t\t\"current\": \"now\",\r\n\t\t\t\"past\": \"{0}s ago\",\r\n\t\t\t\"future\": \"in {0}s\"\r\n\t\t}\r\n\t},\r\n\t\"now\": {\r\n\t\t\"now\": {\r\n\t\t\t\"current\": \"now\",\r\n\t\t\t\"future\": \"in a moment\",\r\n\t\t\t\"past\": \"just now\"\r\n\t\t}\r\n\t},\r\n\t\"mini\": {\r\n\t\t\"year\": \"{0}yr\",\r\n\t\t\"month\": \"{0}mo\",\r\n\t\t\"week\": \"{0}wk\",\r\n\t\t\"day\": \"{0}d\",\r\n\t\t\"hour\": \"{0}h\",\r\n\t\t\"minute\": \"{0}m\",\r\n\t\t\"second\": \"{0}s\",\r\n\t\t\"now\": \"now\"\r\n\t},\r\n\t\"short-time\": {\r\n\t\t\"year\": \"{0} yr.\",\r\n\t\t\"month\": \"{0} mo.\",\r\n\t\t\"week\": \"{0} wk.\",\r\n\t\t\"day\": {\r\n\t\t\t\"one\": \"{0} day\",\r\n\t\t\t\"other\": \"{0} days\"\r\n\t\t},\r\n\t\t\"hour\": \"{0} hr.\",\r\n\t\t\"minute\": \"{0} min.\",\r\n\t\t\"second\": \"{0} sec.\"\r\n\t},\r\n\t\"long-time\": {\r\n\t\t\"year\": {\r\n\t\t\t\"one\": \"{0} year\",\r\n\t\t\t\"other\": \"{0} years\"\r\n\t\t},\r\n\t\t\"month\": {\r\n\t\t\t\"one\": \"{0} month\",\r\n\t\t\t\"other\": \"{0} months\"\r\n\t\t},\r\n\t\t\"week\": {\r\n\t\t\t\"one\": \"{0} week\",\r\n\t\t\t\"other\": \"{0} weeks\"\r\n\t\t},\r\n\t\t\"day\": {\r\n\t\t\t\"one\": \"{0} day\",\r\n\t\t\t\"other\": \"{0} days\"\r\n\t\t},\r\n\t\t\"hour\": {\r\n\t\t\t\"one\": \"{0} hour\",\r\n\t\t\t\"other\": \"{0} hours\"\r\n\t\t},\r\n\t\t\"minute\": {\r\n\t\t\t\"one\": \"{0} minute\",\r\n\t\t\t\"other\": \"{0} minutes\"\r\n\t\t},\r\n\t\t\"second\": {\r\n\t\t\t\"one\": \"{0} second\",\r\n\t\t\t\"other\": \"{0} seconds\"\r\n\t\t}\r\n\t}\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/locale/en.json.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/LocaleDataStore.js":
/*!*********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/LocaleDataStore.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addLocaleData\": function() { return /* binding */ addLocaleData; },\n/* harmony export */   \"getLocaleData\": function() { return /* binding */ getLocaleData; }\n/* harmony export */ });\n// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nvar localesData = {};\r\nfunction getLocaleData(locale) {\r\n  return localesData[locale];\r\n}\r\nfunction addLocaleData(localeData) {\r\n  if (!localeData) {\r\n    throw new Error('[javascript-time-ago] No locale data passed.');\r\n  } // This locale data is stored in a global variable\r\n  // and later used when calling `.format(time)`.\r\n\r\n\r\n  localesData[localeData.locale] = localeData;\r\n}\r\n//# sourceMappingURL=LocaleDataStore.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL0xvY2FsZURhdGFTdG9yZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9Mb2NhbGVEYXRhU3RvcmUuanM/MjM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGb3IgYWxsIGxvY2FsZXMgYWRkZWRcclxuLy8gdGhlaXIgcmVsYXRpdmUgdGltZSBmb3JtYXR0ZXIgbWVzc2FnZXMgd2lsbCBiZSBzdG9yZWQgaGVyZS5cclxudmFyIGxvY2FsZXNEYXRhID0ge307XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2NhbGVEYXRhKGxvY2FsZSkge1xyXG4gIHJldHVybiBsb2NhbGVzRGF0YVtsb2NhbGVdO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRMb2NhbGVEYXRhKGxvY2FsZURhdGEpIHtcclxuICBpZiAoIWxvY2FsZURhdGEpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignW2phdmFzY3JpcHQtdGltZS1hZ29dIE5vIGxvY2FsZSBkYXRhIHBhc3NlZC4nKTtcclxuICB9IC8vIFRoaXMgbG9jYWxlIGRhdGEgaXMgc3RvcmVkIGluIGEgZ2xvYmFsIHZhcmlhYmxlXHJcbiAgLy8gYW5kIGxhdGVyIHVzZWQgd2hlbiBjYWxsaW5nIGAuZm9ybWF0KHRpbWUpYC5cclxuXHJcblxyXG4gIGxvY2FsZXNEYXRhW2xvY2FsZURhdGEubG9jYWxlXSA9IGxvY2FsZURhdGE7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TG9jYWxlRGF0YVN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/LocaleDataStore.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/TimeAgo.js":
/*!*************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/TimeAgo.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TimeAgo; }\n/* harmony export */ });\n/* harmony import */ var relative_time_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! relative-time-format */ \"./node_modules/relative-time-format/index.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cache.js */ \"./node_modules/javascript-time-ago/modules/cache.js\");\n/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ \"./node_modules/javascript-time-ago/modules/locale.js\");\n/* harmony import */ var _isStyleObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./isStyleObject.js */ \"./node_modules/javascript-time-ago/modules/isStyleObject.js\");\n/* harmony import */ var _steps_getStep_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./steps/getStep.js */ \"./node_modules/javascript-time-ago/modules/steps/getStep.js\");\n/* harmony import */ var _steps_getStepDenominator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./steps/getStepDenominator.js */ \"./node_modules/javascript-time-ago/modules/steps/getStepDenominator.js\");\n/* harmony import */ var _steps_getTimeToNextUpdate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./steps/getTimeToNextUpdate.js */ \"./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdate.js\");\n/* harmony import */ var _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LocaleDataStore.js */ \"./node_modules/javascript-time-ago/modules/LocaleDataStore.js\");\n/* harmony import */ var _style_roundMinute_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./style/roundMinute.js */ \"./node_modules/javascript-time-ago/modules/style/roundMinute.js\");\n/* harmony import */ var _style_getStyleByName_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./style/getStyleByName.js */ \"./node_modules/javascript-time-ago/modules/style/getStyleByName.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./round.js */ \"./node_modules/javascript-time-ago/modules/round.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // Valid time units.\r\n\r\nvar UNITS = ['now', // The rest are the same as in `Intl.RelativeTimeFormat`.\r\n'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'];\r\n\r\nvar TimeAgo = /*#__PURE__*/function () {\r\n  /**\r\n   * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n   * @param {boolean} [polyfill] — Pass `false` to use native `Intl.RelativeTimeFormat` and `Intl.PluralRules` instead of the polyfills.\r\n   */\r\n  function TimeAgo() {\r\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\r\n        polyfill = _ref.polyfill;\r\n\r\n    _classCallCheck(this, TimeAgo);\r\n\r\n    // Convert `locales` to an array.\r\n    if (typeof locales === 'string') {\r\n      locales = [locales];\r\n    } // Choose the most appropriate locale\r\n    // from the list of `locales` added by the user.\r\n    // For example, new TimeAgo(\"en-US\") -> \"en\".\r\n\r\n\r\n    this.locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(locales.concat(TimeAgo.getDefaultLocale()), _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData);\r\n\r\n    if (typeof Intl !== 'undefined') {\r\n      // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n      if (Intl.NumberFormat) {\r\n        this.numberFormat = new Intl.NumberFormat(this.locale);\r\n      }\r\n    } // Some people have requested the ability to use native\r\n    // `Intl.RelativeTimeFormat` and `Intl.PluralRules`\r\n    // instead of the polyfills.\r\n    // https://github.com/catamphetamine/javascript-time-ago/issues/21\r\n\r\n\r\n    if (polyfill === false) {\r\n      this.IntlRelativeTimeFormat = Intl.RelativeTimeFormat;\r\n      this.IntlPluralRules = Intl.PluralRules;\r\n    } else {\r\n      this.IntlRelativeTimeFormat = relative_time_format__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n      this.IntlPluralRules = relative_time_format__WEBPACK_IMPORTED_MODULE_2__[\"default\"].PluralRules;\r\n    } // Cache `Intl.RelativeTimeFormat` instance.\r\n\r\n\r\n    this.relativeTimeFormatCache = new _cache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](); // Cache `Intl.PluralRules` instance.\r\n\r\n    this.pluralRulesCache = new _cache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  }\r\n  /**\r\n   * Formats relative date/time.\r\n   *\r\n   * @param {(number|Date)} input — A `Date` or a javascript timestamp.\r\n   *\r\n   * @param {(string|object)} style — Date/time formatting style. Either one of the built-in style names or a \"custom\" style definition object having `steps: object[]` and `labels: string[]`.\r\n   *\r\n   * @param {number} [options.now] - Sets the current date timestamp.\r\n   *\r\n   * @param  {boolean} [options.future] — Tells how to format value `0`:\r\n   *         as \"future\" (`true`) or \"past\" (`false`).\r\n   *         Is `false` by default, but should have been `true` actually,\r\n   *         in order to correspond to `Intl.RelativeTimeFormat`\r\n   *         that uses `future` formatting for `0` unless `-0` is passed.\r\n   *\r\n   * @param {string} [options.round] — Rounding method. Overrides the style's one.\r\n   *\r\n   * @param {boolean} [options.getTimeToNextUpdate] — Pass `true` to return `[formattedDate, timeToNextUpdate]` instead of just `formattedDate`.\r\n   *\r\n   * @return {string} The formatted relative date/time. If no eligible `step` is found, then an empty string is returned.\r\n   */\r\n\r\n\r\n  _createClass(TimeAgo, [{\r\n    key: \"format\",\r\n    value: function format(input, style, options) {\r\n      if (!options) {\r\n        if (style && !isStyle(style)) {\r\n          options = style;\r\n          style = undefined;\r\n        } else {\r\n          options = {};\r\n        }\r\n      }\r\n\r\n      if (!style) {\r\n        style = _style_roundMinute_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n      }\r\n\r\n      if (typeof style === 'string') {\r\n        style = (0,_style_getStyleByName_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(style);\r\n      }\r\n\r\n      var timestamp = getTimestamp(input); // Get locale messages for this type of labels.\r\n      // \"flavour\" is a legacy name for \"labels\".\r\n\r\n      var _this$getLabels = this.getLabels(style.flavour || style.labels),\r\n          labels = _this$getLabels.labels,\r\n          labelsType = _this$getLabels.labelsType;\r\n\r\n      var now; // Can pass a custom `now`, e.g. for testing purposes.\r\n      //\r\n      // Legacy way was passing `now` in `style`.\r\n      // That way is deprecated.\r\n\r\n      if (style.now !== undefined) {\r\n        now = style.now;\r\n      } // The new way is passing `now` option to `.format()`.\r\n\r\n\r\n      if (now === undefined && options.now !== undefined) {\r\n        now = options.now;\r\n      }\r\n\r\n      if (now === undefined) {\r\n        now = Date.now();\r\n      } // how much time has passed (in seconds)\r\n\r\n\r\n      var secondsPassed = (now - timestamp) / 1000; // in seconds\r\n\r\n      var future = options.future || secondsPassed < 0;\r\n      var nowLabel = getNowLabel(labels, (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData)(this.locale).now, (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData)(this.locale)[\"long\"], future); // `custom` – A function of `{ elapsed, time, date, now, locale }`.\r\n      //\r\n      // Looks like `custom` function is deprecated and will be removed\r\n      // in the next major version.\r\n      //\r\n      // If this function returns a value, then the `.format()` call will return that value.\r\n      // Otherwise the relative date/time is formatted as usual.\r\n      // This feature is currently not used anywhere and is here\r\n      // just for providing the ultimate customization point\r\n      // in case anyone would ever need that. Prefer using\r\n      // `steps[step].format(value, locale)` instead.\r\n      //\r\n\r\n      if (style.custom) {\r\n        var custom = style.custom({\r\n          now: now,\r\n          date: new Date(timestamp),\r\n          time: timestamp,\r\n          elapsed: secondsPassed,\r\n          locale: this.locale\r\n        });\r\n\r\n        if (custom !== undefined) {\r\n          // Won't return `timeToNextUpdate` here\r\n          // because `custom()` seems deprecated.\r\n          return custom;\r\n        }\r\n      } // Get the list of available time interval units.\r\n\r\n\r\n      var units = getTimeIntervalMeasurementUnits( // Controlling `style.steps` through `style.units` seems to be deprecated:\r\n      // create a new custom `style` instead.\r\n      style.units, labels, nowLabel); // // If no available time unit is suitable, just output an empty string.\r\n      // if (units.length === 0) {\r\n      // \tconsole.error(`None of the \"${units.join(', ')}\" time units have been found in \"${labelsType}\" labels for \"${this.locale}\" locale.`)\r\n      // \treturn ''\r\n      // }\r\n\r\n      var round = options.round || style.round; // Choose the appropriate time measurement unit\r\n      // and get the corresponding rounded time amount.\r\n\r\n      var _getStep = (0,_steps_getStep_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])( // \"gradation\" is a legacy name for \"steps\".\r\n      // For historical reasons, \"approximate\" steps are used by default.\r\n      // In the next major version, there'll be no default for `steps`.\r\n      style.gradation || style.steps || _style_roundMinute_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].steps, secondsPassed, {\r\n        now: now,\r\n        units: units,\r\n        round: round,\r\n        future: future,\r\n        getNextStep: true\r\n      }),\r\n          _getStep2 = _slicedToArray(_getStep, 3),\r\n          prevStep = _getStep2[0],\r\n          step = _getStep2[1],\r\n          nextStep = _getStep2[2];\r\n\r\n      var formattedDate = this.formatDateForStep(timestamp, step, secondsPassed, {\r\n        labels: labels,\r\n        labelsType: labelsType,\r\n        nowLabel: nowLabel,\r\n        now: now,\r\n        future: future,\r\n        round: round\r\n      }) || '';\r\n\r\n      if (options.getTimeToNextUpdate) {\r\n        var timeToNextUpdate = (0,_steps_getTimeToNextUpdate_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(timestamp, step, {\r\n          nextStep: nextStep,\r\n          prevStep: prevStep,\r\n          now: now,\r\n          future: future,\r\n          round: round\r\n        });\r\n        return [formattedDate, timeToNextUpdate];\r\n      }\r\n\r\n      return formattedDate;\r\n    }\r\n  }, {\r\n    key: \"formatDateForStep\",\r\n    value: function formatDateForStep(timestamp, step, secondsPassed, _ref2) {\r\n      var _this = this;\r\n\r\n      var labels = _ref2.labels,\r\n          labelsType = _ref2.labelsType,\r\n          nowLabel = _ref2.nowLabel,\r\n          now = _ref2.now,\r\n          future = _ref2.future,\r\n          round = _ref2.round;\r\n\r\n      // If no step matches, then output an empty string.\r\n      if (!step) {\r\n        return;\r\n      }\r\n\r\n      if (step.format) {\r\n        return step.format(timestamp, this.locale, {\r\n          formatAs: function formatAs(unit, value) {\r\n            // Mimicks `Intl.RelativeTimeFormat.format()`.\r\n            return _this.formatValue(value, unit, {\r\n              labels: labels,\r\n              future: future\r\n            });\r\n          },\r\n          now: now,\r\n          future: future\r\n        });\r\n      } // \"unit\" is now called \"formatAs\".\r\n\r\n\r\n      var unit = step.unit || step.formatAs;\r\n\r\n      if (!unit) {\r\n        throw new Error(\"[javascript-time-ago] Each step must define either `formatAs` or `format()`. Step: \".concat(JSON.stringify(step)));\r\n      } // `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\r\n      // Therefore, threat \"now\" as a special case.\r\n\r\n\r\n      if (unit === 'now') {\r\n        return nowLabel;\r\n      } // Amount in units.\r\n\r\n\r\n      var amount = Math.abs(secondsPassed) / (0,_steps_getStepDenominator_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(step); // Apply granularity to the time amount\r\n      // (and fallback to the previous step\r\n      //  if the first level of granularity\r\n      //  isn't met by this amount)\r\n      //\r\n      // `granularity` — (advanced) Time interval value \"granularity\".\r\n      // For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n      // when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n      // Perhaps this feature will be removed because there seem to be no use cases\r\n      // of it in the real world.\r\n      //\r\n\r\n      if (step.granularity) {\r\n        // Recalculate the amount of seconds passed based on granularity\r\n        amount = (0,_round_js__WEBPACK_IMPORTED_MODULE_9__.getRoundFunction)(round)(amount / step.granularity) * step.granularity;\r\n      }\r\n\r\n      var valueForFormatting = -1 * Math.sign(secondsPassed) * (0,_round_js__WEBPACK_IMPORTED_MODULE_9__.getRoundFunction)(round)(amount); // By default, this library formats a `0` in \"past\" mode,\r\n      // unless `future: true` option is passed.\r\n      // This is different to `relative-time-format`'s behavior\r\n      // which formats a `0` in \"future\" mode by default, unless it's a `-0`.\r\n      // So, convert `0` to `-0` if `future: true` option wasn't passed.\r\n      // `=== 0` matches both `0` and `-0`.\r\n\r\n      if (valueForFormatting === 0) {\r\n        if (future) {\r\n          valueForFormatting = 0;\r\n        } else {\r\n          valueForFormatting = -0;\r\n        }\r\n      }\r\n\r\n      switch (labelsType) {\r\n        case 'long':\r\n        case 'short':\r\n        case 'narrow':\r\n          // Format the amount using `Intl.RelativeTimeFormat`.\r\n          return this.getFormatter(labelsType).format(valueForFormatting, unit);\r\n\r\n        default:\r\n          // Format the amount.\r\n          // (mimicks `Intl.RelativeTimeFormat` behavior for other time label styles)\r\n          return this.formatValue(valueForFormatting, unit, {\r\n            labels: labels,\r\n            future: future\r\n          });\r\n      }\r\n    }\r\n    /**\r\n     * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n     * @param  {number} value\r\n     * @param  {string} unit\r\n     * @param  {object} options.labels — Relative time labels.\r\n     * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default, but should have been `true` actually.\r\n     * @return {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"formatValue\",\r\n    value: function formatValue(value, unit, _ref3) {\r\n      var labels = _ref3.labels,\r\n          future = _ref3.future;\r\n      return this.getFormattingRule(labels, unit, value, {\r\n        future: future\r\n      }).replace('{0}', this.formatNumber(Math.abs(value)));\r\n    }\r\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {object} formattingRules — Relative time labels for different units.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @param {number} value - Time interval value.\r\n     * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default.\r\n     * @return {string}\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getFormattingRule(en.long, \"day\", -2, 'en')\r\n     */\r\n\r\n  }, {\r\n    key: \"getFormattingRule\",\r\n    value: function getFormattingRule(formattingRules, unit, value, _ref4) {\r\n      var future = _ref4.future;\r\n      // Passing the language is required in order to\r\n      // be able to correctly classify the `value` as a number.\r\n      var locale = this.locale;\r\n      formattingRules = formattingRules[unit]; // Check for a special \"compacted\" rules case:\r\n      // if formatting rules are the same for \"past\" and \"future\",\r\n      // and also for all possible `value`s, then those rules are\r\n      // stored as a single string.\r\n\r\n      if (typeof formattingRules === 'string') {\r\n        return formattingRules;\r\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\r\n      // If \"past\" is same as \"future\" then they're stored as \"other\".\r\n      // If there's only \"other\" then it's being collapsed.\r\n\r\n\r\n      var pastOrFuture = value === 0 ? future ? 'future' : 'past' : value < 0 ? 'past' : 'future';\r\n      var quantifierRules = formattingRules[pastOrFuture] || formattingRules; // Bundle size optimization technique.\r\n\r\n      if (typeof quantifierRules === 'string') {\r\n        return quantifierRules;\r\n      } // Quantify `value`.\r\n\r\n\r\n      var quantifier = this.getPluralRules().select(Math.abs(value)); // \"other\" rule is supposed to always be present.\r\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\r\n      return quantifierRules[quantifier] || quantifierRules.other;\r\n    }\r\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"formatNumber\",\r\n    value: function formatNumber(number) {\r\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\r\n    }\r\n    /**\r\n     * Returns an `Intl.RelativeTimeFormat` for a given `labelsType`.\r\n     * @param {string} labelsType\r\n     * @return {object} `Intl.RelativeTimeFormat` instance\r\n     */\r\n\r\n  }, {\r\n    key: \"getFormatter\",\r\n    value: function getFormatter(labelsType) {\r\n      // `Intl.RelativeTimeFormat` instance creation is (hypothetically) assumed\r\n      // a lengthy operation so the instances are cached and reused.\r\n      return this.relativeTimeFormatCache.get(this.locale, labelsType) || this.relativeTimeFormatCache.put(this.locale, labelsType, new this.IntlRelativeTimeFormat(this.locale, {\r\n        style: labelsType\r\n      }));\r\n    }\r\n    /**\r\n     * Returns an `Intl.PluralRules` instance.\r\n     * @return {object} `Intl.PluralRules` instance\r\n     */\r\n\r\n  }, {\r\n    key: \"getPluralRules\",\r\n    value: function getPluralRules() {\r\n      // `Intl.PluralRules` instance creation is (hypothetically) assumed\r\n      // a lengthy operation so the instances are cached and reused.\r\n      return this.pluralRulesCache.get(this.locale) || this.pluralRulesCache.put(this.locale, new this.IntlPluralRules(this.locale));\r\n    }\r\n    /**\r\n     * Gets localized labels for this type of labels.\r\n     *\r\n     * @param {(string|string[])} labelsType - Relative date/time labels type.\r\n     *                                     If it's an array then all label types are tried\r\n     *                                     until a suitable one is found.\r\n     *\r\n     * @returns {Object} Returns an object of shape { labelsType, labels }\r\n     */\r\n\r\n  }, {\r\n    key: \"getLabels\",\r\n    value: function getLabels() {\r\n      var labelsType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n      // Convert `labels` to an array.\r\n      if (typeof labelsType === 'string') {\r\n        labelsType = [labelsType];\r\n      } // Supports legacy \"tiny\" and \"mini-time\" label styles.\r\n\r\n\r\n      labelsType = labelsType.map(function (labelsType) {\r\n        switch (labelsType) {\r\n          case 'tiny':\r\n          case 'mini-time':\r\n            return 'mini';\r\n\r\n          default:\r\n            return labelsType;\r\n        }\r\n      }); // \"long\" labels type is the default one.\r\n      // (it's always present for all languages)\r\n\r\n      labelsType = labelsType.concat('long'); // Find a suitable labels type.\r\n\r\n      var localeData = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData)(this.locale);\r\n\r\n      for (var _iterator = _createForOfIteratorHelperLoose(labelsType), _step; !(_step = _iterator()).done;) {\r\n        var _labelsType = _step.value;\r\n\r\n        if (localeData[_labelsType]) {\r\n          return {\r\n            labelsType: _labelsType,\r\n            labels: localeData[_labelsType]\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return TimeAgo;\r\n}();\r\n/**\r\n * Default locale global variable.\r\n */\r\n\r\n\r\n\r\nvar defaultLocale = 'en';\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\n\r\nTimeAgo.getDefaultLocale = function () {\r\n  return defaultLocale;\r\n};\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\n\r\n\r\nTimeAgo.setDefaultLocale = function (locale) {\r\n  return defaultLocale = locale;\r\n};\r\n/**\r\n * Adds locale data for a specific locale and marks the locale as default.\r\n * @param {Object} localeData\r\n */\r\n\r\n\r\nTimeAgo.addDefaultLocale = function (localeData) {\r\n  if (defaultLocaleHasBeenSpecified) {\r\n    return console.error('[javascript-time-ago] `TimeAgo.addDefaultLocale()` can only be called once. To add other locales, use `TimeAgo.addLocale()`.');\r\n  }\r\n\r\n  defaultLocaleHasBeenSpecified = true;\r\n  TimeAgo.setDefaultLocale(localeData.locale);\r\n  TimeAgo.addLocale(localeData);\r\n};\r\n\r\nvar defaultLocaleHasBeenSpecified;\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\n\r\nTimeAgo.addLocale = function (localeData) {\r\n  (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.addLocaleData)(localeData);\r\n  relative_time_format__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addLocale(localeData);\r\n};\r\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\r\n\r\n\r\nTimeAgo.locale = TimeAgo.addLocale;\r\n/**\r\n * Adds custom labels to locale data.\r\n * @param {string} locale\r\n * @param {string} name\r\n * @param {object} labels\r\n */\r\n\r\nTimeAgo.addLabels = function (locale, name, labels) {\r\n  var localeData = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData)(locale);\r\n\r\n  if (!localeData) {\r\n    (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.addLocaleData)({\r\n      locale: locale\r\n    });\r\n    localeData = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_1__.getLocaleData)(locale); // throw new Error(`[javascript-time-ago] No data for locale \"${locale}\"`)\r\n  }\r\n\r\n  localeData[name] = labels;\r\n}; // Normalizes `.format()` `time` argument.\r\n\r\n\r\nfunction getTimestamp(input) {\r\n  if (input.constructor === Date || isMockedDate(input)) {\r\n    return input.getTime();\r\n  }\r\n\r\n  if (typeof input === 'number') {\r\n    return input;\r\n  } // For some weird reason istanbul doesn't see this `throw` covered.\r\n\r\n  /* istanbul ignore next */\r\n\r\n\r\n  throw new Error(\"Unsupported relative time formatter input: \".concat(_typeof(input), \", \").concat(input));\r\n} // During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\n\r\n\r\nfunction isMockedDate(object) {\r\n  return _typeof(object) === 'object' && typeof object.getTime === 'function';\r\n} // Get available time interval measurement units.\r\n\r\n\r\nfunction getTimeIntervalMeasurementUnits(allowedUnits, labels, nowLabel) {\r\n  // Get all time interval measurement units that're available\r\n  // in locale data for a given time labels style.\r\n  var units = Object.keys(labels); // `now` unit is handled separately and is shipped in its own `now.json` file.\r\n  // `now.json` isn't present for all locales, so it could be substituted with\r\n  // \".second.current\".\r\n  // Add `now` unit if it's available in locale data.\r\n\r\n  if (nowLabel) {\r\n    units.push('now');\r\n  } // If only a specific set of available time measurement units can be used\r\n  // then only those units are allowed (if they're present in locale data).\r\n\r\n\r\n  if (allowedUnits) {\r\n    units = allowedUnits.filter(function (unit) {\r\n      return unit === 'now' || units.indexOf(unit) >= 0;\r\n    });\r\n  }\r\n\r\n  return units;\r\n}\r\n\r\nfunction getNowLabel(labels, nowLabels, longLabels, future) {\r\n  var nowLabel = labels.now || nowLabels && nowLabels.now; // Specific \"now\" message form extended locale data (if present).\r\n\r\n  if (nowLabel) {\r\n    // Bundle size optimization technique.\r\n    if (typeof nowLabel === 'string') {\r\n      return nowLabel;\r\n    } // Not handling `value === 0` as `localeData.now.current` here\r\n    // because it wouldn't make sense: \"now\" is a moment,\r\n    // so one can't possibly differentiate between a\r\n    // \"previous\" moment, a \"current\" moment and a \"next moment\".\r\n    // It can only be differentiated between \"past\" and \"future\".\r\n\r\n\r\n    if (future) {\r\n      return nowLabel.future;\r\n    } else {\r\n      return nowLabel.past;\r\n    }\r\n  } // Use \".second.current\" as \"now\" message.\r\n\r\n\r\n  if (longLabels && longLabels.second && longLabels.second.current) {\r\n    return longLabels.second.current;\r\n  }\r\n}\r\n\r\nfunction isStyle(variable) {\r\n  return typeof variable === 'string' || (0,_isStyleObject_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(variable);\r\n}\r\n//# sourceMappingURL=TimeAgo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL1RpbWVBZ28uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsd0JBQXdCLDJCQUEyQixzR0FBc0cscUJBQXFCLG1CQUFtQiw4SEFBOEg7QUFDL1Q7QUFDQSw4REFBOEQsaUZBQWlGLGdEQUFnRCx3SEFBd0gsZ0JBQWdCLFdBQVcscUJBQXFCLDRCQUE0QixjQUFjLFNBQVMsbUNBQW1DO0FBQzdiO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0Esa0RBQWtELGdCQUFnQixnRUFBZ0Usd0RBQXdELDZEQUE2RCxzREFBc0Q7QUFDN1M7QUFDQSx1Q0FBdUMsdURBQXVELHVDQUF1QyxTQUFTLE9BQU8sb0JBQW9CO0FBQ3pLO0FBQ0EseUNBQXlDLDBHQUEwRyx3QkFBd0IsZUFBZSxlQUFlLGdCQUFnQixZQUFZLE1BQU0sd0JBQXdCLCtCQUErQixhQUFhLHFCQUFxQix1Q0FBdUMsY0FBYyxXQUFXLFlBQVksVUFBVSxNQUFNLG1EQUFtRCxVQUFVLHNCQUFzQjtBQUNuZjtBQUNBLGdDQUFnQztBQUNoQztBQUNBLGtEQUFrRCwwQ0FBMEM7QUFDNUY7QUFDQSw0Q0FBNEMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RDtBQUMvUDtBQUNBLDhEQUE4RCxzRUFBc0UsOERBQThELGtEQUFrRCxpQkFBaUIsR0FBRztBQUN4UTtBQUM4RDtBQUMvQjtBQUNRO0FBQ1E7QUFDTjtBQUNzQjtBQUNFO0FBQ0c7QUFDbEI7QUFDSztBQUNULENBQUM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBbUI7QUFDaEMsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFZLDZDQUE2Qyw4REFBYTtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixvQ0FBb0MsNERBQTBCO0FBQzlELDZCQUE2Qix3RUFBc0M7QUFDbkUsTUFBTTtBQUNOO0FBQ0E7QUFDQSx1Q0FBdUMsaURBQUssSUFBSTtBQUNoRDtBQUNBLGdDQUFnQyxpREFBSztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZUFBZTtBQUM1QjtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2REFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0VBQWM7QUFDOUI7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0EseUNBQXlDLGtFQUFhLG1CQUFtQixrRUFBYSxnQ0FBZ0MsK0JBQStCLGtDQUFrQztBQUN2TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQSx3Q0FBd0MsaUJBQWlCLG1DQUFtQyxXQUFXLGdCQUFnQixZQUFZO0FBQ25JO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUJBQXFCLDZEQUFPO0FBQzVCO0FBQ0E7QUFDQSx3Q0FBd0MsbUVBQWtCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSwrQkFBK0IseUVBQW1CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsNkNBQTZDLHdFQUFrQixRQUFRO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJEQUFnQjtBQUNqQztBQUNBO0FBQ0EsK0RBQStELDJEQUFnQixpQkFBaUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0IsU0FBUztBQUN6QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLFlBQVksRUFBRTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixnQkFBZ0IsU0FBUztBQUN6QixnQkFBZ0I7QUFDaEI7QUFDQSxvQkFBb0IsR0FBRztBQUN2QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0Esc0VBQXNFO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVEsNkJBQTZCO0FBQ3REO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sR0FBRztBQUNWO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx1QkFBdUIsa0VBQWE7QUFDcEM7QUFDQSwrRUFBK0UsNEJBQTRCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFhO0FBQ2YsRUFBRSxzRUFBb0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWE7QUFDaEM7QUFDQTtBQUNBLElBQUksa0VBQWE7QUFDakI7QUFDQSxLQUFLO0FBQ0wsaUJBQWlCLGtFQUFhLFVBQVUsZ0VBQWdFLE9BQU87QUFDL0c7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDhEQUFhO0FBQ3REO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9UaW1lQWdvLmpzPzMwNDAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH0sIF90eXBlb2Yob2JqKTsgfVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXSB8fCBvW1wiQEBpdGVyYXRvclwiXTsgaWYgKGl0KSByZXR1cm4gKGl0ID0gaXQuY2FsbChvKSkubmV4dC5iaW5kKGl0KTsgaWYgKEFycmF5LmlzQXJyYXkobykgfHwgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fCBhbGxvd0FycmF5TGlrZSAmJiBvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgeyBpZiAoaXQpIG8gPSBpdDsgdmFyIGkgPSAwOyByZXR1cm4gZnVuY3Rpb24gKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxyXG5cclxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cclxuXHJcbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cclxuXHJcbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxyXG5cclxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XHJcblxyXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxyXG5cclxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cclxuXHJcbmltcG9ydCBSZWxhdGl2ZVRpbWVGb3JtYXRQb2x5ZmlsbCBmcm9tICdyZWxhdGl2ZS10aW1lLWZvcm1hdCc7XHJcbmltcG9ydCBDYWNoZSBmcm9tICcuL2NhY2hlLmpzJztcclxuaW1wb3J0IGNob29zZUxvY2FsZSBmcm9tICcuL2xvY2FsZS5qcyc7XHJcbmltcG9ydCBpc1N0eWxlT2JqZWN0IGZyb20gJy4vaXNTdHlsZU9iamVjdC5qcyc7XHJcbmltcG9ydCBnZXRTdGVwIGZyb20gJy4vc3RlcHMvZ2V0U3RlcC5qcyc7XHJcbmltcG9ydCBnZXRTdGVwRGVub21pbmF0b3IgZnJvbSAnLi9zdGVwcy9nZXRTdGVwRGVub21pbmF0b3IuanMnO1xyXG5pbXBvcnQgZ2V0VGltZVRvTmV4dFVwZGF0ZSBmcm9tICcuL3N0ZXBzL2dldFRpbWVUb05leHRVcGRhdGUuanMnO1xyXG5pbXBvcnQgeyBhZGRMb2NhbGVEYXRhLCBnZXRMb2NhbGVEYXRhIH0gZnJvbSAnLi9Mb2NhbGVEYXRhU3RvcmUuanMnO1xyXG5pbXBvcnQgZGVmYXVsdFN0eWxlIGZyb20gJy4vc3R5bGUvcm91bmRNaW51dGUuanMnO1xyXG5pbXBvcnQgZ2V0U3R5bGVCeU5hbWUgZnJvbSAnLi9zdHlsZS9nZXRTdHlsZUJ5TmFtZS5qcyc7XHJcbmltcG9ydCB7IGdldFJvdW5kRnVuY3Rpb24gfSBmcm9tICcuL3JvdW5kLmpzJzsgLy8gVmFsaWQgdGltZSB1bml0cy5cclxuXHJcbnZhciBVTklUUyA9IFsnbm93JywgLy8gVGhlIHJlc3QgYXJlIHRoZSBzYW1lIGFzIGluIGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAuXHJcbidzZWNvbmQnLCAnbWludXRlJywgJ2hvdXInLCAnZGF5JywgJ3dlZWsnLCAnbW9udGgnLCAncXVhcnRlcicsICd5ZWFyJ107XHJcblxyXG52YXIgVGltZUFnbyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHsoc3RyaW5nfHN0cmluZ1tdKX0gbG9jYWxlcz1bXSAtIFByZWZlcnJlZCBsb2NhbGVzIChvciBsb2NhbGUpLlxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3BvbHlmaWxsXSDigJQgUGFzcyBgZmFsc2VgIHRvIHVzZSBuYXRpdmUgYEludGwuUmVsYXRpdmVUaW1lRm9ybWF0YCBhbmQgYEludGwuUGx1cmFsUnVsZXNgIGluc3RlYWQgb2YgdGhlIHBvbHlmaWxscy5cclxuICAgKi9cclxuICBmdW5jdGlvbiBUaW1lQWdvKCkge1xyXG4gICAgdmFyIGxvY2FsZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xyXG5cclxuICAgIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSxcclxuICAgICAgICBwb2x5ZmlsbCA9IF9yZWYucG9seWZpbGw7XHJcblxyXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRpbWVBZ28pO1xyXG5cclxuICAgIC8vIENvbnZlcnQgYGxvY2FsZXNgIHRvIGFuIGFycmF5LlxyXG4gICAgaWYgKHR5cGVvZiBsb2NhbGVzID09PSAnc3RyaW5nJykge1xyXG4gICAgICBsb2NhbGVzID0gW2xvY2FsZXNdO1xyXG4gICAgfSAvLyBDaG9vc2UgdGhlIG1vc3QgYXBwcm9wcmlhdGUgbG9jYWxlXHJcbiAgICAvLyBmcm9tIHRoZSBsaXN0IG9mIGBsb2NhbGVzYCBhZGRlZCBieSB0aGUgdXNlci5cclxuICAgIC8vIEZvciBleGFtcGxlLCBuZXcgVGltZUFnbyhcImVuLVVTXCIpIC0+IFwiZW5cIi5cclxuXHJcblxyXG4gICAgdGhpcy5sb2NhbGUgPSBjaG9vc2VMb2NhbGUobG9jYWxlcy5jb25jYXQoVGltZUFnby5nZXREZWZhdWx0TG9jYWxlKCkpLCBnZXRMb2NhbGVEYXRhKTtcclxuXHJcbiAgICBpZiAodHlwZW9mIEludGwgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIC8vIFVzZSBgSW50bC5OdW1iZXJGb3JtYXRgIGZvciBmb3JtYXR0aW5nIG51bWJlcnMgKHdoZW4gYXZhaWxhYmxlKS5cclxuICAgICAgaWYgKEludGwuTnVtYmVyRm9ybWF0KSB7XHJcbiAgICAgICAgdGhpcy5udW1iZXJGb3JtYXQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQodGhpcy5sb2NhbGUpO1xyXG4gICAgICB9XHJcbiAgICB9IC8vIFNvbWUgcGVvcGxlIGhhdmUgcmVxdWVzdGVkIHRoZSBhYmlsaXR5IHRvIHVzZSBuYXRpdmVcclxuICAgIC8vIGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAgYW5kIGBJbnRsLlBsdXJhbFJ1bGVzYFxyXG4gICAgLy8gaW5zdGVhZCBvZiB0aGUgcG9seWZpbGxzLlxyXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2NhdGFtcGhldGFtaW5lL2phdmFzY3JpcHQtdGltZS1hZ28vaXNzdWVzLzIxXHJcblxyXG5cclxuICAgIGlmIChwb2x5ZmlsbCA9PT0gZmFsc2UpIHtcclxuICAgICAgdGhpcy5JbnRsUmVsYXRpdmVUaW1lRm9ybWF0ID0gSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXQ7XHJcbiAgICAgIHRoaXMuSW50bFBsdXJhbFJ1bGVzID0gSW50bC5QbHVyYWxSdWxlcztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuSW50bFJlbGF0aXZlVGltZUZvcm1hdCA9IFJlbGF0aXZlVGltZUZvcm1hdFBvbHlmaWxsO1xyXG4gICAgICB0aGlzLkludGxQbHVyYWxSdWxlcyA9IFJlbGF0aXZlVGltZUZvcm1hdFBvbHlmaWxsLlBsdXJhbFJ1bGVzO1xyXG4gICAgfSAvLyBDYWNoZSBgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXRgIGluc3RhbmNlLlxyXG5cclxuXHJcbiAgICB0aGlzLnJlbGF0aXZlVGltZUZvcm1hdENhY2hlID0gbmV3IENhY2hlKCk7IC8vIENhY2hlIGBJbnRsLlBsdXJhbFJ1bGVzYCBpbnN0YW5jZS5cclxuXHJcbiAgICB0aGlzLnBsdXJhbFJ1bGVzQ2FjaGUgPSBuZXcgQ2FjaGUoKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogRm9ybWF0cyByZWxhdGl2ZSBkYXRlL3RpbWUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0geyhudW1iZXJ8RGF0ZSl9IGlucHV0IOKAlCBBIGBEYXRlYCBvciBhIGphdmFzY3JpcHQgdGltZXN0YW1wLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHsoc3RyaW5nfG9iamVjdCl9IHN0eWxlIOKAlCBEYXRlL3RpbWUgZm9ybWF0dGluZyBzdHlsZS4gRWl0aGVyIG9uZSBvZiB0aGUgYnVpbHQtaW4gc3R5bGUgbmFtZXMgb3IgYSBcImN1c3RvbVwiIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0IGhhdmluZyBgc3RlcHM6IG9iamVjdFtdYCBhbmQgYGxhYmVsczogc3RyaW5nW11gLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm5vd10gLSBTZXRzIHRoZSBjdXJyZW50IGRhdGUgdGltZXN0YW1wLlxyXG4gICAqXHJcbiAgICogQHBhcmFtICB7Ym9vbGVhbn0gW29wdGlvbnMuZnV0dXJlXSDigJQgVGVsbHMgaG93IHRvIGZvcm1hdCB2YWx1ZSBgMGA6XHJcbiAgICogICAgICAgICBhcyBcImZ1dHVyZVwiIChgdHJ1ZWApIG9yIFwicGFzdFwiIChgZmFsc2VgKS5cclxuICAgKiAgICAgICAgIElzIGBmYWxzZWAgYnkgZGVmYXVsdCwgYnV0IHNob3VsZCBoYXZlIGJlZW4gYHRydWVgIGFjdHVhbGx5LFxyXG4gICAqICAgICAgICAgaW4gb3JkZXIgdG8gY29ycmVzcG9uZCB0byBgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXRgXHJcbiAgICogICAgICAgICB0aGF0IHVzZXMgYGZ1dHVyZWAgZm9ybWF0dGluZyBmb3IgYDBgIHVubGVzcyBgLTBgIGlzIHBhc3NlZC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5yb3VuZF0g4oCUIFJvdW5kaW5nIG1ldGhvZC4gT3ZlcnJpZGVzIHRoZSBzdHlsZSdzIG9uZS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuZ2V0VGltZVRvTmV4dFVwZGF0ZV0g4oCUIFBhc3MgYHRydWVgIHRvIHJldHVybiBgW2Zvcm1hdHRlZERhdGUsIHRpbWVUb05leHRVcGRhdGVdYCBpbnN0ZWFkIG9mIGp1c3QgYGZvcm1hdHRlZERhdGVgLlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHJlbGF0aXZlIGRhdGUvdGltZS4gSWYgbm8gZWxpZ2libGUgYHN0ZXBgIGlzIGZvdW5kLCB0aGVuIGFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZC5cclxuICAgKi9cclxuXHJcblxyXG4gIF9jcmVhdGVDbGFzcyhUaW1lQWdvLCBbe1xyXG4gICAga2V5OiBcImZvcm1hdFwiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdChpbnB1dCwgc3R5bGUsIG9wdGlvbnMpIHtcclxuICAgICAgaWYgKCFvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKHN0eWxlICYmICFpc1N0eWxlKHN0eWxlKSkge1xyXG4gICAgICAgICAgb3B0aW9ucyA9IHN0eWxlO1xyXG4gICAgICAgICAgc3R5bGUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIG9wdGlvbnMgPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICghc3R5bGUpIHtcclxuICAgICAgICBzdHlsZSA9IGRlZmF1bHRTdHlsZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHR5cGVvZiBzdHlsZSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBzdHlsZSA9IGdldFN0eWxlQnlOYW1lKHN0eWxlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHRpbWVzdGFtcCA9IGdldFRpbWVzdGFtcChpbnB1dCk7IC8vIEdldCBsb2NhbGUgbWVzc2FnZXMgZm9yIHRoaXMgdHlwZSBvZiBsYWJlbHMuXHJcbiAgICAgIC8vIFwiZmxhdm91clwiIGlzIGEgbGVnYWN5IG5hbWUgZm9yIFwibGFiZWxzXCIuXHJcblxyXG4gICAgICB2YXIgX3RoaXMkZ2V0TGFiZWxzID0gdGhpcy5nZXRMYWJlbHMoc3R5bGUuZmxhdm91ciB8fCBzdHlsZS5sYWJlbHMpLFxyXG4gICAgICAgICAgbGFiZWxzID0gX3RoaXMkZ2V0TGFiZWxzLmxhYmVscyxcclxuICAgICAgICAgIGxhYmVsc1R5cGUgPSBfdGhpcyRnZXRMYWJlbHMubGFiZWxzVHlwZTtcclxuXHJcbiAgICAgIHZhciBub3c7IC8vIENhbiBwYXNzIGEgY3VzdG9tIGBub3dgLCBlLmcuIGZvciB0ZXN0aW5nIHB1cnBvc2VzLlxyXG4gICAgICAvL1xyXG4gICAgICAvLyBMZWdhY3kgd2F5IHdhcyBwYXNzaW5nIGBub3dgIGluIGBzdHlsZWAuXHJcbiAgICAgIC8vIFRoYXQgd2F5IGlzIGRlcHJlY2F0ZWQuXHJcblxyXG4gICAgICBpZiAoc3R5bGUubm93ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBub3cgPSBzdHlsZS5ub3c7XHJcbiAgICAgIH0gLy8gVGhlIG5ldyB3YXkgaXMgcGFzc2luZyBgbm93YCBvcHRpb24gdG8gYC5mb3JtYXQoKWAuXHJcblxyXG5cclxuICAgICAgaWYgKG5vdyA9PT0gdW5kZWZpbmVkICYmIG9wdGlvbnMubm93ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBub3cgPSBvcHRpb25zLm5vdztcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKG5vdyA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgfSAvLyBob3cgbXVjaCB0aW1lIGhhcyBwYXNzZWQgKGluIHNlY29uZHMpXHJcblxyXG5cclxuICAgICAgdmFyIHNlY29uZHNQYXNzZWQgPSAobm93IC0gdGltZXN0YW1wKSAvIDEwMDA7IC8vIGluIHNlY29uZHNcclxuXHJcbiAgICAgIHZhciBmdXR1cmUgPSBvcHRpb25zLmZ1dHVyZSB8fCBzZWNvbmRzUGFzc2VkIDwgMDtcclxuICAgICAgdmFyIG5vd0xhYmVsID0gZ2V0Tm93TGFiZWwobGFiZWxzLCBnZXRMb2NhbGVEYXRhKHRoaXMubG9jYWxlKS5ub3csIGdldExvY2FsZURhdGEodGhpcy5sb2NhbGUpW1wibG9uZ1wiXSwgZnV0dXJlKTsgLy8gYGN1c3RvbWAg4oCTIEEgZnVuY3Rpb24gb2YgYHsgZWxhcHNlZCwgdGltZSwgZGF0ZSwgbm93LCBsb2NhbGUgfWAuXHJcbiAgICAgIC8vXHJcbiAgICAgIC8vIExvb2tzIGxpa2UgYGN1c3RvbWAgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkXHJcbiAgICAgIC8vIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24uXHJcbiAgICAgIC8vXHJcbiAgICAgIC8vIElmIHRoaXMgZnVuY3Rpb24gcmV0dXJucyBhIHZhbHVlLCB0aGVuIHRoZSBgLmZvcm1hdCgpYCBjYWxsIHdpbGwgcmV0dXJuIHRoYXQgdmFsdWUuXHJcbiAgICAgIC8vIE90aGVyd2lzZSB0aGUgcmVsYXRpdmUgZGF0ZS90aW1lIGlzIGZvcm1hdHRlZCBhcyB1c3VhbC5cclxuICAgICAgLy8gVGhpcyBmZWF0dXJlIGlzIGN1cnJlbnRseSBub3QgdXNlZCBhbnl3aGVyZSBhbmQgaXMgaGVyZVxyXG4gICAgICAvLyBqdXN0IGZvciBwcm92aWRpbmcgdGhlIHVsdGltYXRlIGN1c3RvbWl6YXRpb24gcG9pbnRcclxuICAgICAgLy8gaW4gY2FzZSBhbnlvbmUgd291bGQgZXZlciBuZWVkIHRoYXQuIFByZWZlciB1c2luZ1xyXG4gICAgICAvLyBgc3RlcHNbc3RlcF0uZm9ybWF0KHZhbHVlLCBsb2NhbGUpYCBpbnN0ZWFkLlxyXG4gICAgICAvL1xyXG5cclxuICAgICAgaWYgKHN0eWxlLmN1c3RvbSkge1xyXG4gICAgICAgIHZhciBjdXN0b20gPSBzdHlsZS5jdXN0b20oe1xyXG4gICAgICAgICAgbm93OiBub3csXHJcbiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSh0aW1lc3RhbXApLFxyXG4gICAgICAgICAgdGltZTogdGltZXN0YW1wLFxyXG4gICAgICAgICAgZWxhcHNlZDogc2Vjb25kc1Bhc3NlZCxcclxuICAgICAgICAgIGxvY2FsZTogdGhpcy5sb2NhbGVcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGN1c3RvbSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAvLyBXb24ndCByZXR1cm4gYHRpbWVUb05leHRVcGRhdGVgIGhlcmVcclxuICAgICAgICAgIC8vIGJlY2F1c2UgYGN1c3RvbSgpYCBzZWVtcyBkZXByZWNhdGVkLlxyXG4gICAgICAgICAgcmV0dXJuIGN1c3RvbTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gLy8gR2V0IHRoZSBsaXN0IG9mIGF2YWlsYWJsZSB0aW1lIGludGVydmFsIHVuaXRzLlxyXG5cclxuXHJcbiAgICAgIHZhciB1bml0cyA9IGdldFRpbWVJbnRlcnZhbE1lYXN1cmVtZW50VW5pdHMoIC8vIENvbnRyb2xsaW5nIGBzdHlsZS5zdGVwc2AgdGhyb3VnaCBgc3R5bGUudW5pdHNgIHNlZW1zIHRvIGJlIGRlcHJlY2F0ZWQ6XHJcbiAgICAgIC8vIGNyZWF0ZSBhIG5ldyBjdXN0b20gYHN0eWxlYCBpbnN0ZWFkLlxyXG4gICAgICBzdHlsZS51bml0cywgbGFiZWxzLCBub3dMYWJlbCk7IC8vIC8vIElmIG5vIGF2YWlsYWJsZSB0aW1lIHVuaXQgaXMgc3VpdGFibGUsIGp1c3Qgb3V0cHV0IGFuIGVtcHR5IHN0cmluZy5cclxuICAgICAgLy8gaWYgKHVuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAvLyBcdGNvbnNvbGUuZXJyb3IoYE5vbmUgb2YgdGhlIFwiJHt1bml0cy5qb2luKCcsICcpfVwiIHRpbWUgdW5pdHMgaGF2ZSBiZWVuIGZvdW5kIGluIFwiJHtsYWJlbHNUeXBlfVwiIGxhYmVscyBmb3IgXCIke3RoaXMubG9jYWxlfVwiIGxvY2FsZS5gKVxyXG4gICAgICAvLyBcdHJldHVybiAnJ1xyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICB2YXIgcm91bmQgPSBvcHRpb25zLnJvdW5kIHx8IHN0eWxlLnJvdW5kOyAvLyBDaG9vc2UgdGhlIGFwcHJvcHJpYXRlIHRpbWUgbWVhc3VyZW1lbnQgdW5pdFxyXG4gICAgICAvLyBhbmQgZ2V0IHRoZSBjb3JyZXNwb25kaW5nIHJvdW5kZWQgdGltZSBhbW91bnQuXHJcblxyXG4gICAgICB2YXIgX2dldFN0ZXAgPSBnZXRTdGVwKCAvLyBcImdyYWRhdGlvblwiIGlzIGEgbGVnYWN5IG5hbWUgZm9yIFwic3RlcHNcIi5cclxuICAgICAgLy8gRm9yIGhpc3RvcmljYWwgcmVhc29ucywgXCJhcHByb3hpbWF0ZVwiIHN0ZXBzIGFyZSB1c2VkIGJ5IGRlZmF1bHQuXHJcbiAgICAgIC8vIEluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24sIHRoZXJlJ2xsIGJlIG5vIGRlZmF1bHQgZm9yIGBzdGVwc2AuXHJcbiAgICAgIHN0eWxlLmdyYWRhdGlvbiB8fCBzdHlsZS5zdGVwcyB8fCBkZWZhdWx0U3R5bGUuc3RlcHMsIHNlY29uZHNQYXNzZWQsIHtcclxuICAgICAgICBub3c6IG5vdyxcclxuICAgICAgICB1bml0czogdW5pdHMsXHJcbiAgICAgICAgcm91bmQ6IHJvdW5kLFxyXG4gICAgICAgIGZ1dHVyZTogZnV0dXJlLFxyXG4gICAgICAgIGdldE5leHRTdGVwOiB0cnVlXHJcbiAgICAgIH0pLFxyXG4gICAgICAgICAgX2dldFN0ZXAyID0gX3NsaWNlZFRvQXJyYXkoX2dldFN0ZXAsIDMpLFxyXG4gICAgICAgICAgcHJldlN0ZXAgPSBfZ2V0U3RlcDJbMF0sXHJcbiAgICAgICAgICBzdGVwID0gX2dldFN0ZXAyWzFdLFxyXG4gICAgICAgICAgbmV4dFN0ZXAgPSBfZ2V0U3RlcDJbMl07XHJcblxyXG4gICAgICB2YXIgZm9ybWF0dGVkRGF0ZSA9IHRoaXMuZm9ybWF0RGF0ZUZvclN0ZXAodGltZXN0YW1wLCBzdGVwLCBzZWNvbmRzUGFzc2VkLCB7XHJcbiAgICAgICAgbGFiZWxzOiBsYWJlbHMsXHJcbiAgICAgICAgbGFiZWxzVHlwZTogbGFiZWxzVHlwZSxcclxuICAgICAgICBub3dMYWJlbDogbm93TGFiZWwsXHJcbiAgICAgICAgbm93OiBub3csXHJcbiAgICAgICAgZnV0dXJlOiBmdXR1cmUsXHJcbiAgICAgICAgcm91bmQ6IHJvdW5kXHJcbiAgICAgIH0pIHx8ICcnO1xyXG5cclxuICAgICAgaWYgKG9wdGlvbnMuZ2V0VGltZVRvTmV4dFVwZGF0ZSkge1xyXG4gICAgICAgIHZhciB0aW1lVG9OZXh0VXBkYXRlID0gZ2V0VGltZVRvTmV4dFVwZGF0ZSh0aW1lc3RhbXAsIHN0ZXAsIHtcclxuICAgICAgICAgIG5leHRTdGVwOiBuZXh0U3RlcCxcclxuICAgICAgICAgIHByZXZTdGVwOiBwcmV2U3RlcCxcclxuICAgICAgICAgIG5vdzogbm93LFxyXG4gICAgICAgICAgZnV0dXJlOiBmdXR1cmUsXHJcbiAgICAgICAgICByb3VuZDogcm91bmRcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gW2Zvcm1hdHRlZERhdGUsIHRpbWVUb05leHRVcGRhdGVdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZm9ybWF0dGVkRGF0ZTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6IFwiZm9ybWF0RGF0ZUZvclN0ZXBcIixcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXREYXRlRm9yU3RlcCh0aW1lc3RhbXAsIHN0ZXAsIHNlY29uZHNQYXNzZWQsIF9yZWYyKSB7XHJcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgICB2YXIgbGFiZWxzID0gX3JlZjIubGFiZWxzLFxyXG4gICAgICAgICAgbGFiZWxzVHlwZSA9IF9yZWYyLmxhYmVsc1R5cGUsXHJcbiAgICAgICAgICBub3dMYWJlbCA9IF9yZWYyLm5vd0xhYmVsLFxyXG4gICAgICAgICAgbm93ID0gX3JlZjIubm93LFxyXG4gICAgICAgICAgZnV0dXJlID0gX3JlZjIuZnV0dXJlLFxyXG4gICAgICAgICAgcm91bmQgPSBfcmVmMi5yb3VuZDtcclxuXHJcbiAgICAgIC8vIElmIG5vIHN0ZXAgbWF0Y2hlcywgdGhlbiBvdXRwdXQgYW4gZW1wdHkgc3RyaW5nLlxyXG4gICAgICBpZiAoIXN0ZXApIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChzdGVwLmZvcm1hdCkge1xyXG4gICAgICAgIHJldHVybiBzdGVwLmZvcm1hdCh0aW1lc3RhbXAsIHRoaXMubG9jYWxlLCB7XHJcbiAgICAgICAgICBmb3JtYXRBczogZnVuY3Rpb24gZm9ybWF0QXModW5pdCwgdmFsdWUpIHtcclxuICAgICAgICAgICAgLy8gTWltaWNrcyBgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXQuZm9ybWF0KClgLlxyXG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuZm9ybWF0VmFsdWUodmFsdWUsIHVuaXQsIHtcclxuICAgICAgICAgICAgICBsYWJlbHM6IGxhYmVscyxcclxuICAgICAgICAgICAgICBmdXR1cmU6IGZ1dHVyZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBub3c6IG5vdyxcclxuICAgICAgICAgIGZ1dHVyZTogZnV0dXJlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gLy8gXCJ1bml0XCIgaXMgbm93IGNhbGxlZCBcImZvcm1hdEFzXCIuXHJcblxyXG5cclxuICAgICAgdmFyIHVuaXQgPSBzdGVwLnVuaXQgfHwgc3RlcC5mb3JtYXRBcztcclxuXHJcbiAgICAgIGlmICghdW5pdCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIltqYXZhc2NyaXB0LXRpbWUtYWdvXSBFYWNoIHN0ZXAgbXVzdCBkZWZpbmUgZWl0aGVyIGBmb3JtYXRBc2Agb3IgYGZvcm1hdCgpYC4gU3RlcDogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHN0ZXApKSk7XHJcbiAgICAgIH0gLy8gYEludGwuUmVsYXRpdmVUaW1lRm9ybWF0YCBkb2Vzbid0IG9wZXJhdGUgaW4gXCJub3dcIiB1bml0cy5cclxuICAgICAgLy8gVGhlcmVmb3JlLCB0aHJlYXQgXCJub3dcIiBhcyBhIHNwZWNpYWwgY2FzZS5cclxuXHJcblxyXG4gICAgICBpZiAodW5pdCA9PT0gJ25vdycpIHtcclxuICAgICAgICByZXR1cm4gbm93TGFiZWw7XHJcbiAgICAgIH0gLy8gQW1vdW50IGluIHVuaXRzLlxyXG5cclxuXHJcbiAgICAgIHZhciBhbW91bnQgPSBNYXRoLmFicyhzZWNvbmRzUGFzc2VkKSAvIGdldFN0ZXBEZW5vbWluYXRvcihzdGVwKTsgLy8gQXBwbHkgZ3JhbnVsYXJpdHkgdG8gdGhlIHRpbWUgYW1vdW50XHJcbiAgICAgIC8vIChhbmQgZmFsbGJhY2sgdG8gdGhlIHByZXZpb3VzIHN0ZXBcclxuICAgICAgLy8gIGlmIHRoZSBmaXJzdCBsZXZlbCBvZiBncmFudWxhcml0eVxyXG4gICAgICAvLyAgaXNuJ3QgbWV0IGJ5IHRoaXMgYW1vdW50KVxyXG4gICAgICAvL1xyXG4gICAgICAvLyBgZ3JhbnVsYXJpdHlgIOKAlCAoYWR2YW5jZWQpIFRpbWUgaW50ZXJ2YWwgdmFsdWUgXCJncmFudWxhcml0eVwiLlxyXG4gICAgICAvLyBGb3IgZXhhbXBsZSwgaXQgY291bGQgYmUgc2V0IHRvIGA1YCBmb3IgbWludXRlcyB0byBhbGxvdyBvbmx5IDUtbWludXRlIGluY3JlbWVudHNcclxuICAgICAgLy8gd2hlbiBmb3JtYXR0aW5nIHRpbWUgaW50ZXJ2YWxzOiBgMCBtaW51dGVzYCwgYDUgbWludXRlc2AsIGAxMCBtaW51dGVzYCwgZXRjLlxyXG4gICAgICAvLyBQZXJoYXBzIHRoaXMgZmVhdHVyZSB3aWxsIGJlIHJlbW92ZWQgYmVjYXVzZSB0aGVyZSBzZWVtIHRvIGJlIG5vIHVzZSBjYXNlc1xyXG4gICAgICAvLyBvZiBpdCBpbiB0aGUgcmVhbCB3b3JsZC5cclxuICAgICAgLy9cclxuXHJcbiAgICAgIGlmIChzdGVwLmdyYW51bGFyaXR5KSB7XHJcbiAgICAgICAgLy8gUmVjYWxjdWxhdGUgdGhlIGFtb3VudCBvZiBzZWNvbmRzIHBhc3NlZCBiYXNlZCBvbiBncmFudWxhcml0eVxyXG4gICAgICAgIGFtb3VudCA9IGdldFJvdW5kRnVuY3Rpb24ocm91bmQpKGFtb3VudCAvIHN0ZXAuZ3JhbnVsYXJpdHkpICogc3RlcC5ncmFudWxhcml0eTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHZhbHVlRm9yRm9ybWF0dGluZyA9IC0xICogTWF0aC5zaWduKHNlY29uZHNQYXNzZWQpICogZ2V0Um91bmRGdW5jdGlvbihyb3VuZCkoYW1vdW50KTsgLy8gQnkgZGVmYXVsdCwgdGhpcyBsaWJyYXJ5IGZvcm1hdHMgYSBgMGAgaW4gXCJwYXN0XCIgbW9kZSxcclxuICAgICAgLy8gdW5sZXNzIGBmdXR1cmU6IHRydWVgIG9wdGlvbiBpcyBwYXNzZWQuXHJcbiAgICAgIC8vIFRoaXMgaXMgZGlmZmVyZW50IHRvIGByZWxhdGl2ZS10aW1lLWZvcm1hdGAncyBiZWhhdmlvclxyXG4gICAgICAvLyB3aGljaCBmb3JtYXRzIGEgYDBgIGluIFwiZnV0dXJlXCIgbW9kZSBieSBkZWZhdWx0LCB1bmxlc3MgaXQncyBhIGAtMGAuXHJcbiAgICAgIC8vIFNvLCBjb252ZXJ0IGAwYCB0byBgLTBgIGlmIGBmdXR1cmU6IHRydWVgIG9wdGlvbiB3YXNuJ3QgcGFzc2VkLlxyXG4gICAgICAvLyBgPT09IDBgIG1hdGNoZXMgYm90aCBgMGAgYW5kIGAtMGAuXHJcblxyXG4gICAgICBpZiAodmFsdWVGb3JGb3JtYXR0aW5nID09PSAwKSB7XHJcbiAgICAgICAgaWYgKGZ1dHVyZSkge1xyXG4gICAgICAgICAgdmFsdWVGb3JGb3JtYXR0aW5nID0gMDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFsdWVGb3JGb3JtYXR0aW5nID0gLTA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBzd2l0Y2ggKGxhYmVsc1R5cGUpIHtcclxuICAgICAgICBjYXNlICdsb25nJzpcclxuICAgICAgICBjYXNlICdzaG9ydCc6XHJcbiAgICAgICAgY2FzZSAnbmFycm93JzpcclxuICAgICAgICAgIC8vIEZvcm1hdCB0aGUgYW1vdW50IHVzaW5nIGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAuXHJcbiAgICAgICAgICByZXR1cm4gdGhpcy5nZXRGb3JtYXR0ZXIobGFiZWxzVHlwZSkuZm9ybWF0KHZhbHVlRm9yRm9ybWF0dGluZywgdW5pdCk7XHJcblxyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAvLyBGb3JtYXQgdGhlIGFtb3VudC5cclxuICAgICAgICAgIC8vIChtaW1pY2tzIGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAgYmVoYXZpb3IgZm9yIG90aGVyIHRpbWUgbGFiZWwgc3R5bGVzKVxyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0VmFsdWUodmFsdWVGb3JGb3JtYXR0aW5nLCB1bml0LCB7XHJcbiAgICAgICAgICAgIGxhYmVsczogbGFiZWxzLFxyXG4gICAgICAgICAgICBmdXR1cmU6IGZ1dHVyZVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTWltaWNrcyB3aGF0IGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAgZG9lcyBmb3IgYWRkaXRpb25hbCBsb2NhbGUgc3R5bGVzLlxyXG4gICAgICogQHBhcmFtICB7bnVtYmVyfSB2YWx1ZVxyXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSB1bml0XHJcbiAgICAgKiBAcGFyYW0gIHtvYmplY3R9IG9wdGlvbnMubGFiZWxzIOKAlCBSZWxhdGl2ZSB0aW1lIGxhYmVscy5cclxuICAgICAqIEBwYXJhbSAge2Jvb2xlYW59IFtvcHRpb25zLmZ1dHVyZV0g4oCUIFRlbGxzIGhvdyB0byBmb3JtYXQgdmFsdWUgYDBgOiBhcyBcImZ1dHVyZVwiIChgdHJ1ZWApIG9yIFwicGFzdFwiIChgZmFsc2VgKS4gSXMgYGZhbHNlYCBieSBkZWZhdWx0LCBidXQgc2hvdWxkIGhhdmUgYmVlbiBgdHJ1ZWAgYWN0dWFsbHkuXHJcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiBcImZvcm1hdFZhbHVlXCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0VmFsdWUodmFsdWUsIHVuaXQsIF9yZWYzKSB7XHJcbiAgICAgIHZhciBsYWJlbHMgPSBfcmVmMy5sYWJlbHMsXHJcbiAgICAgICAgICBmdXR1cmUgPSBfcmVmMy5mdXR1cmU7XHJcbiAgICAgIHJldHVybiB0aGlzLmdldEZvcm1hdHRpbmdSdWxlKGxhYmVscywgdW5pdCwgdmFsdWUsIHtcclxuICAgICAgICBmdXR1cmU6IGZ1dHVyZVxyXG4gICAgICB9KS5yZXBsYWNlKCd7MH0nLCB0aGlzLmZvcm1hdE51bWJlcihNYXRoLmFicyh2YWx1ZSkpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBmb3JtYXR0aW5nIHJ1bGUgZm9yIGB2YWx1ZWAgaW4gYHVuaXRzYCAoZWl0aGVyIGluIHBhc3Qgb3IgaW4gZnV0dXJlKS5cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBmb3JtYXR0aW5nUnVsZXMg4oCUIFJlbGF0aXZlIHRpbWUgbGFiZWxzIGZvciBkaWZmZXJlbnQgdW5pdHMuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdW5pdCAtIFRpbWUgaW50ZXJ2YWwgbWVhc3VyZW1lbnQgdW5pdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtIFRpbWUgaW50ZXJ2YWwgdmFsdWUuXHJcbiAgICAgKiBAcGFyYW0gIHtib29sZWFufSBbb3B0aW9ucy5mdXR1cmVdIOKAlCBUZWxscyBob3cgdG8gZm9ybWF0IHZhbHVlIGAwYDogYXMgXCJmdXR1cmVcIiAoYHRydWVgKSBvciBcInBhc3RcIiAoYGZhbHNlYCkuIElzIGBmYWxzZWAgYnkgZGVmYXVsdC5cclxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiAvLyBSZXR1cm5zIFwiezB9IGRheXMgYWdvXCJcclxuICAgICAqIGdldEZvcm1hdHRpbmdSdWxlKGVuLmxvbmcsIFwiZGF5XCIsIC0yLCAnZW4nKVxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogXCJnZXRGb3JtYXR0aW5nUnVsZVwiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEZvcm1hdHRpbmdSdWxlKGZvcm1hdHRpbmdSdWxlcywgdW5pdCwgdmFsdWUsIF9yZWY0KSB7XHJcbiAgICAgIHZhciBmdXR1cmUgPSBfcmVmNC5mdXR1cmU7XHJcbiAgICAgIC8vIFBhc3NpbmcgdGhlIGxhbmd1YWdlIGlzIHJlcXVpcmVkIGluIG9yZGVyIHRvXHJcbiAgICAgIC8vIGJlIGFibGUgdG8gY29ycmVjdGx5IGNsYXNzaWZ5IHRoZSBgdmFsdWVgIGFzIGEgbnVtYmVyLlxyXG4gICAgICB2YXIgbG9jYWxlID0gdGhpcy5sb2NhbGU7XHJcbiAgICAgIGZvcm1hdHRpbmdSdWxlcyA9IGZvcm1hdHRpbmdSdWxlc1t1bml0XTsgLy8gQ2hlY2sgZm9yIGEgc3BlY2lhbCBcImNvbXBhY3RlZFwiIHJ1bGVzIGNhc2U6XHJcbiAgICAgIC8vIGlmIGZvcm1hdHRpbmcgcnVsZXMgYXJlIHRoZSBzYW1lIGZvciBcInBhc3RcIiBhbmQgXCJmdXR1cmVcIixcclxuICAgICAgLy8gYW5kIGFsc28gZm9yIGFsbCBwb3NzaWJsZSBgdmFsdWVgcywgdGhlbiB0aG9zZSBydWxlcyBhcmVcclxuICAgICAgLy8gc3RvcmVkIGFzIGEgc2luZ2xlIHN0cmluZy5cclxuXHJcbiAgICAgIGlmICh0eXBlb2YgZm9ybWF0dGluZ1J1bGVzID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHJldHVybiBmb3JtYXR0aW5nUnVsZXM7XHJcbiAgICAgIH0gLy8gQ2hvb3NlIGVpdGhlciBcInBhc3RcIiBvciBcImZ1dHVyZVwiIGJhc2VkIG9uIHRpbWUgYHZhbHVlYCBzaWduLlxyXG4gICAgICAvLyBJZiBcInBhc3RcIiBpcyBzYW1lIGFzIFwiZnV0dXJlXCIgdGhlbiB0aGV5J3JlIHN0b3JlZCBhcyBcIm90aGVyXCIuXHJcbiAgICAgIC8vIElmIHRoZXJlJ3Mgb25seSBcIm90aGVyXCIgdGhlbiBpdCdzIGJlaW5nIGNvbGxhcHNlZC5cclxuXHJcblxyXG4gICAgICB2YXIgcGFzdE9yRnV0dXJlID0gdmFsdWUgPT09IDAgPyBmdXR1cmUgPyAnZnV0dXJlJyA6ICdwYXN0JyA6IHZhbHVlIDwgMCA/ICdwYXN0JyA6ICdmdXR1cmUnO1xyXG4gICAgICB2YXIgcXVhbnRpZmllclJ1bGVzID0gZm9ybWF0dGluZ1J1bGVzW3Bhc3RPckZ1dHVyZV0gfHwgZm9ybWF0dGluZ1J1bGVzOyAvLyBCdW5kbGUgc2l6ZSBvcHRpbWl6YXRpb24gdGVjaG5pcXVlLlxyXG5cclxuICAgICAgaWYgKHR5cGVvZiBxdWFudGlmaWVyUnVsZXMgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgcmV0dXJuIHF1YW50aWZpZXJSdWxlcztcclxuICAgICAgfSAvLyBRdWFudGlmeSBgdmFsdWVgLlxyXG5cclxuXHJcbiAgICAgIHZhciBxdWFudGlmaWVyID0gdGhpcy5nZXRQbHVyYWxSdWxlcygpLnNlbGVjdChNYXRoLmFicyh2YWx1ZSkpOyAvLyBcIm90aGVyXCIgcnVsZSBpcyBzdXBwb3NlZCB0byBhbHdheXMgYmUgcHJlc2VudC5cclxuICAgICAgLy8gSWYgb25seSBcIm90aGVyXCIgcnVsZSBpcyBwcmVzZW50IHRoZW4gXCJydWxlc1wiIGlzIG5vdCBhbiBvYmplY3QgYW5kIGlzIGEgc3RyaW5nLlxyXG5cclxuICAgICAgcmV0dXJuIHF1YW50aWZpZXJSdWxlc1txdWFudGlmaWVyXSB8fCBxdWFudGlmaWVyUnVsZXMub3RoZXI7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZvcm1hdHMgYSBudW1iZXIgaW50byBhIHN0cmluZy5cclxuICAgICAqIFVzZXMgYEludGwuTnVtYmVyRm9ybWF0YCB3aGVuIGF2YWlsYWJsZS5cclxuICAgICAqIEBwYXJhbSAge251bWJlcn0gbnVtYmVyXHJcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiBcImZvcm1hdE51bWJlclwiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW1iZXIpIHtcclxuICAgICAgcmV0dXJuIHRoaXMubnVtYmVyRm9ybWF0ID8gdGhpcy5udW1iZXJGb3JtYXQuZm9ybWF0KG51bWJlcikgOiBTdHJpbmcobnVtYmVyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbiBgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXRgIGZvciBhIGdpdmVuIGBsYWJlbHNUeXBlYC5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYWJlbHNUeXBlXHJcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IGBJbnRsLlJlbGF0aXZlVGltZUZvcm1hdGAgaW5zdGFuY2VcclxuICAgICAqL1xyXG5cclxuICB9LCB7XHJcbiAgICBrZXk6IFwiZ2V0Rm9ybWF0dGVyXCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Rm9ybWF0dGVyKGxhYmVsc1R5cGUpIHtcclxuICAgICAgLy8gYEludGwuUmVsYXRpdmVUaW1lRm9ybWF0YCBpbnN0YW5jZSBjcmVhdGlvbiBpcyAoaHlwb3RoZXRpY2FsbHkpIGFzc3VtZWRcclxuICAgICAgLy8gYSBsZW5ndGh5IG9wZXJhdGlvbiBzbyB0aGUgaW5zdGFuY2VzIGFyZSBjYWNoZWQgYW5kIHJldXNlZC5cclxuICAgICAgcmV0dXJuIHRoaXMucmVsYXRpdmVUaW1lRm9ybWF0Q2FjaGUuZ2V0KHRoaXMubG9jYWxlLCBsYWJlbHNUeXBlKSB8fCB0aGlzLnJlbGF0aXZlVGltZUZvcm1hdENhY2hlLnB1dCh0aGlzLmxvY2FsZSwgbGFiZWxzVHlwZSwgbmV3IHRoaXMuSW50bFJlbGF0aXZlVGltZUZvcm1hdCh0aGlzLmxvY2FsZSwge1xyXG4gICAgICAgIHN0eWxlOiBsYWJlbHNUeXBlXHJcbiAgICAgIH0pKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbiBgSW50bC5QbHVyYWxSdWxlc2AgaW5zdGFuY2UuXHJcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IGBJbnRsLlBsdXJhbFJ1bGVzYCBpbnN0YW5jZVxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogXCJnZXRQbHVyYWxSdWxlc1wiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBsdXJhbFJ1bGVzKCkge1xyXG4gICAgICAvLyBgSW50bC5QbHVyYWxSdWxlc2AgaW5zdGFuY2UgY3JlYXRpb24gaXMgKGh5cG90aGV0aWNhbGx5KSBhc3N1bWVkXHJcbiAgICAgIC8vIGEgbGVuZ3RoeSBvcGVyYXRpb24gc28gdGhlIGluc3RhbmNlcyBhcmUgY2FjaGVkIGFuZCByZXVzZWQuXHJcbiAgICAgIHJldHVybiB0aGlzLnBsdXJhbFJ1bGVzQ2FjaGUuZ2V0KHRoaXMubG9jYWxlKSB8fCB0aGlzLnBsdXJhbFJ1bGVzQ2FjaGUucHV0KHRoaXMubG9jYWxlLCBuZXcgdGhpcy5JbnRsUGx1cmFsUnVsZXModGhpcy5sb2NhbGUpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBsb2NhbGl6ZWQgbGFiZWxzIGZvciB0aGlzIHR5cGUgb2YgbGFiZWxzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7KHN0cmluZ3xzdHJpbmdbXSl9IGxhYmVsc1R5cGUgLSBSZWxhdGl2ZSBkYXRlL3RpbWUgbGFiZWxzIHR5cGUuXHJcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBpdCdzIGFuIGFycmF5IHRoZW4gYWxsIGxhYmVsIHR5cGVzIGFyZSB0cmllZFxyXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW50aWwgYSBzdWl0YWJsZSBvbmUgaXMgZm91bmQuXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBhbiBvYmplY3Qgb2Ygc2hhcGUgeyBsYWJlbHNUeXBlLCBsYWJlbHMgfVxyXG4gICAgICovXHJcblxyXG4gIH0sIHtcclxuICAgIGtleTogXCJnZXRMYWJlbHNcIixcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMYWJlbHMoKSB7XHJcbiAgICAgIHZhciBsYWJlbHNUeXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTtcclxuXHJcbiAgICAgIC8vIENvbnZlcnQgYGxhYmVsc2AgdG8gYW4gYXJyYXkuXHJcbiAgICAgIGlmICh0eXBlb2YgbGFiZWxzVHlwZSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBsYWJlbHNUeXBlID0gW2xhYmVsc1R5cGVdO1xyXG4gICAgICB9IC8vIFN1cHBvcnRzIGxlZ2FjeSBcInRpbnlcIiBhbmQgXCJtaW5pLXRpbWVcIiBsYWJlbCBzdHlsZXMuXHJcblxyXG5cclxuICAgICAgbGFiZWxzVHlwZSA9IGxhYmVsc1R5cGUubWFwKGZ1bmN0aW9uIChsYWJlbHNUeXBlKSB7XHJcbiAgICAgICAgc3dpdGNoIChsYWJlbHNUeXBlKSB7XHJcbiAgICAgICAgICBjYXNlICd0aW55JzpcclxuICAgICAgICAgIGNhc2UgJ21pbmktdGltZSc6XHJcbiAgICAgICAgICAgIHJldHVybiAnbWluaSc7XHJcblxyXG4gICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIGxhYmVsc1R5cGU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTsgLy8gXCJsb25nXCIgbGFiZWxzIHR5cGUgaXMgdGhlIGRlZmF1bHQgb25lLlxyXG4gICAgICAvLyAoaXQncyBhbHdheXMgcHJlc2VudCBmb3IgYWxsIGxhbmd1YWdlcylcclxuXHJcbiAgICAgIGxhYmVsc1R5cGUgPSBsYWJlbHNUeXBlLmNvbmNhdCgnbG9uZycpOyAvLyBGaW5kIGEgc3VpdGFibGUgbGFiZWxzIHR5cGUuXHJcblxyXG4gICAgICB2YXIgbG9jYWxlRGF0YSA9IGdldExvY2FsZURhdGEodGhpcy5sb2NhbGUpO1xyXG5cclxuICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShsYWJlbHNUeXBlKSwgX3N0ZXA7ICEoX3N0ZXAgPSBfaXRlcmF0b3IoKSkuZG9uZTspIHtcclxuICAgICAgICB2YXIgX2xhYmVsc1R5cGUgPSBfc3RlcC52YWx1ZTtcclxuXHJcbiAgICAgICAgaWYgKGxvY2FsZURhdGFbX2xhYmVsc1R5cGVdKSB7XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBsYWJlbHNUeXBlOiBfbGFiZWxzVHlwZSxcclxuICAgICAgICAgICAgbGFiZWxzOiBsb2NhbGVEYXRhW19sYWJlbHNUeXBlXVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XSk7XHJcblxyXG4gIHJldHVybiBUaW1lQWdvO1xyXG59KCk7XHJcbi8qKlxyXG4gKiBEZWZhdWx0IGxvY2FsZSBnbG9iYWwgdmFyaWFibGUuXHJcbiAqL1xyXG5cclxuXHJcbmV4cG9ydCB7IFRpbWVBZ28gYXMgZGVmYXVsdCB9O1xyXG52YXIgZGVmYXVsdExvY2FsZSA9ICdlbic7XHJcbi8qKlxyXG4gKiBHZXRzIGRlZmF1bHQgbG9jYWxlLlxyXG4gKiBAcmV0dXJuICB7c3RyaW5nfSBsb2NhbGVcclxuICovXHJcblxyXG5UaW1lQWdvLmdldERlZmF1bHRMb2NhbGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgcmV0dXJuIGRlZmF1bHRMb2NhbGU7XHJcbn07XHJcbi8qKlxyXG4gKiBTZXRzIGRlZmF1bHQgbG9jYWxlLlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGxvY2FsZVxyXG4gKi9cclxuXHJcblxyXG5UaW1lQWdvLnNldERlZmF1bHRMb2NhbGUgPSBmdW5jdGlvbiAobG9jYWxlKSB7XHJcbiAgcmV0dXJuIGRlZmF1bHRMb2NhbGUgPSBsb2NhbGU7XHJcbn07XHJcbi8qKlxyXG4gKiBBZGRzIGxvY2FsZSBkYXRhIGZvciBhIHNwZWNpZmljIGxvY2FsZSBhbmQgbWFya3MgdGhlIGxvY2FsZSBhcyBkZWZhdWx0LlxyXG4gKiBAcGFyYW0ge09iamVjdH0gbG9jYWxlRGF0YVxyXG4gKi9cclxuXHJcblxyXG5UaW1lQWdvLmFkZERlZmF1bHRMb2NhbGUgPSBmdW5jdGlvbiAobG9jYWxlRGF0YSkge1xyXG4gIGlmIChkZWZhdWx0TG9jYWxlSGFzQmVlblNwZWNpZmllZCkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ1tqYXZhc2NyaXB0LXRpbWUtYWdvXSBgVGltZUFnby5hZGREZWZhdWx0TG9jYWxlKClgIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlLiBUbyBhZGQgb3RoZXIgbG9jYWxlcywgdXNlIGBUaW1lQWdvLmFkZExvY2FsZSgpYC4nKTtcclxuICB9XHJcblxyXG4gIGRlZmF1bHRMb2NhbGVIYXNCZWVuU3BlY2lmaWVkID0gdHJ1ZTtcclxuICBUaW1lQWdvLnNldERlZmF1bHRMb2NhbGUobG9jYWxlRGF0YS5sb2NhbGUpO1xyXG4gIFRpbWVBZ28uYWRkTG9jYWxlKGxvY2FsZURhdGEpO1xyXG59O1xyXG5cclxudmFyIGRlZmF1bHRMb2NhbGVIYXNCZWVuU3BlY2lmaWVkO1xyXG4vKipcclxuICogQWRkcyBsb2NhbGUgZGF0YSBmb3IgYSBzcGVjaWZpYyBsb2NhbGUuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBsb2NhbGVEYXRhXHJcbiAqL1xyXG5cclxuVGltZUFnby5hZGRMb2NhbGUgPSBmdW5jdGlvbiAobG9jYWxlRGF0YSkge1xyXG4gIGFkZExvY2FsZURhdGEobG9jYWxlRGF0YSk7XHJcbiAgUmVsYXRpdmVUaW1lRm9ybWF0UG9seWZpbGwuYWRkTG9jYWxlKGxvY2FsZURhdGEpO1xyXG59O1xyXG4vKipcclxuICogKGxlZ2FjeSBhbGlhcylcclxuICogQWRkcyBsb2NhbGUgZGF0YSBmb3IgYSBzcGVjaWZpYyBsb2NhbGUuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBsb2NhbGVEYXRhXHJcbiAqIEBkZXByZWNhdGVkXHJcbiAqL1xyXG5cclxuXHJcblRpbWVBZ28ubG9jYWxlID0gVGltZUFnby5hZGRMb2NhbGU7XHJcbi8qKlxyXG4gKiBBZGRzIGN1c3RvbSBsYWJlbHMgdG8gbG9jYWxlIGRhdGEuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhbGVcclxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcclxuICogQHBhcmFtIHtvYmplY3R9IGxhYmVsc1xyXG4gKi9cclxuXHJcblRpbWVBZ28uYWRkTGFiZWxzID0gZnVuY3Rpb24gKGxvY2FsZSwgbmFtZSwgbGFiZWxzKSB7XHJcbiAgdmFyIGxvY2FsZURhdGEgPSBnZXRMb2NhbGVEYXRhKGxvY2FsZSk7XHJcblxyXG4gIGlmICghbG9jYWxlRGF0YSkge1xyXG4gICAgYWRkTG9jYWxlRGF0YSh7XHJcbiAgICAgIGxvY2FsZTogbG9jYWxlXHJcbiAgICB9KTtcclxuICAgIGxvY2FsZURhdGEgPSBnZXRMb2NhbGVEYXRhKGxvY2FsZSk7IC8vIHRocm93IG5ldyBFcnJvcihgW2phdmFzY3JpcHQtdGltZS1hZ29dIE5vIGRhdGEgZm9yIGxvY2FsZSBcIiR7bG9jYWxlfVwiYClcclxuICB9XHJcblxyXG4gIGxvY2FsZURhdGFbbmFtZV0gPSBsYWJlbHM7XHJcbn07IC8vIE5vcm1hbGl6ZXMgYC5mb3JtYXQoKWAgYHRpbWVgIGFyZ3VtZW50LlxyXG5cclxuXHJcbmZ1bmN0aW9uIGdldFRpbWVzdGFtcChpbnB1dCkge1xyXG4gIGlmIChpbnB1dC5jb25zdHJ1Y3RvciA9PT0gRGF0ZSB8fCBpc01vY2tlZERhdGUoaW5wdXQpKSB7XHJcbiAgICByZXR1cm4gaW5wdXQuZ2V0VGltZSgpO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ251bWJlcicpIHtcclxuICAgIHJldHVybiBpbnB1dDtcclxuICB9IC8vIEZvciBzb21lIHdlaXJkIHJlYXNvbiBpc3RhbmJ1bCBkb2Vzbid0IHNlZSB0aGlzIGB0aHJvd2AgY292ZXJlZC5cclxuXHJcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuXHJcblxyXG4gIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHJlbGF0aXZlIHRpbWUgZm9ybWF0dGVyIGlucHV0OiBcIi5jb25jYXQoX3R5cGVvZihpbnB1dCksIFwiLCBcIikuY29uY2F0KGlucHV0KSk7XHJcbn0gLy8gRHVyaW5nIHRlc3RpbmcgdmlhIHNvbWUgdGVzdGluZyBsaWJyYXJpZXMgYERhdGVgcyBhcmVuJ3QgYWN0dWFsbHkgYERhdGVgcy5cclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2NhdGFtcGhldGFtaW5lL2phdmFzY3JpcHQtdGltZS1hZ28vaXNzdWVzLzIyXHJcblxyXG5cclxuZnVuY3Rpb24gaXNNb2NrZWREYXRlKG9iamVjdCkge1xyXG4gIHJldHVybiBfdHlwZW9mKG9iamVjdCkgPT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmplY3QuZ2V0VGltZSA9PT0gJ2Z1bmN0aW9uJztcclxufSAvLyBHZXQgYXZhaWxhYmxlIHRpbWUgaW50ZXJ2YWwgbWVhc3VyZW1lbnQgdW5pdHMuXHJcblxyXG5cclxuZnVuY3Rpb24gZ2V0VGltZUludGVydmFsTWVhc3VyZW1lbnRVbml0cyhhbGxvd2VkVW5pdHMsIGxhYmVscywgbm93TGFiZWwpIHtcclxuICAvLyBHZXQgYWxsIHRpbWUgaW50ZXJ2YWwgbWVhc3VyZW1lbnQgdW5pdHMgdGhhdCdyZSBhdmFpbGFibGVcclxuICAvLyBpbiBsb2NhbGUgZGF0YSBmb3IgYSBnaXZlbiB0aW1lIGxhYmVscyBzdHlsZS5cclxuICB2YXIgdW5pdHMgPSBPYmplY3Qua2V5cyhsYWJlbHMpOyAvLyBgbm93YCB1bml0IGlzIGhhbmRsZWQgc2VwYXJhdGVseSBhbmQgaXMgc2hpcHBlZCBpbiBpdHMgb3duIGBub3cuanNvbmAgZmlsZS5cclxuICAvLyBgbm93Lmpzb25gIGlzbid0IHByZXNlbnQgZm9yIGFsbCBsb2NhbGVzLCBzbyBpdCBjb3VsZCBiZSBzdWJzdGl0dXRlZCB3aXRoXHJcbiAgLy8gXCIuc2Vjb25kLmN1cnJlbnRcIi5cclxuICAvLyBBZGQgYG5vd2AgdW5pdCBpZiBpdCdzIGF2YWlsYWJsZSBpbiBsb2NhbGUgZGF0YS5cclxuXHJcbiAgaWYgKG5vd0xhYmVsKSB7XHJcbiAgICB1bml0cy5wdXNoKCdub3cnKTtcclxuICB9IC8vIElmIG9ubHkgYSBzcGVjaWZpYyBzZXQgb2YgYXZhaWxhYmxlIHRpbWUgbWVhc3VyZW1lbnQgdW5pdHMgY2FuIGJlIHVzZWRcclxuICAvLyB0aGVuIG9ubHkgdGhvc2UgdW5pdHMgYXJlIGFsbG93ZWQgKGlmIHRoZXkncmUgcHJlc2VudCBpbiBsb2NhbGUgZGF0YSkuXHJcblxyXG5cclxuICBpZiAoYWxsb3dlZFVuaXRzKSB7XHJcbiAgICB1bml0cyA9IGFsbG93ZWRVbml0cy5maWx0ZXIoZnVuY3Rpb24gKHVuaXQpIHtcclxuICAgICAgcmV0dXJuIHVuaXQgPT09ICdub3cnIHx8IHVuaXRzLmluZGV4T2YodW5pdCkgPj0gMDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVuaXRzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXROb3dMYWJlbChsYWJlbHMsIG5vd0xhYmVscywgbG9uZ0xhYmVscywgZnV0dXJlKSB7XHJcbiAgdmFyIG5vd0xhYmVsID0gbGFiZWxzLm5vdyB8fCBub3dMYWJlbHMgJiYgbm93TGFiZWxzLm5vdzsgLy8gU3BlY2lmaWMgXCJub3dcIiBtZXNzYWdlIGZvcm0gZXh0ZW5kZWQgbG9jYWxlIGRhdGEgKGlmIHByZXNlbnQpLlxyXG5cclxuICBpZiAobm93TGFiZWwpIHtcclxuICAgIC8vIEJ1bmRsZSBzaXplIG9wdGltaXphdGlvbiB0ZWNobmlxdWUuXHJcbiAgICBpZiAodHlwZW9mIG5vd0xhYmVsID09PSAnc3RyaW5nJykge1xyXG4gICAgICByZXR1cm4gbm93TGFiZWw7XHJcbiAgICB9IC8vIE5vdCBoYW5kbGluZyBgdmFsdWUgPT09IDBgIGFzIGBsb2NhbGVEYXRhLm5vdy5jdXJyZW50YCBoZXJlXHJcbiAgICAvLyBiZWNhdXNlIGl0IHdvdWxkbid0IG1ha2Ugc2Vuc2U6IFwibm93XCIgaXMgYSBtb21lbnQsXHJcbiAgICAvLyBzbyBvbmUgY2FuJ3QgcG9zc2libHkgZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIGFcclxuICAgIC8vIFwicHJldmlvdXNcIiBtb21lbnQsIGEgXCJjdXJyZW50XCIgbW9tZW50IGFuZCBhIFwibmV4dCBtb21lbnRcIi5cclxuICAgIC8vIEl0IGNhbiBvbmx5IGJlIGRpZmZlcmVudGlhdGVkIGJldHdlZW4gXCJwYXN0XCIgYW5kIFwiZnV0dXJlXCIuXHJcblxyXG5cclxuICAgIGlmIChmdXR1cmUpIHtcclxuICAgICAgcmV0dXJuIG5vd0xhYmVsLmZ1dHVyZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBub3dMYWJlbC5wYXN0O1xyXG4gICAgfVxyXG4gIH0gLy8gVXNlIFwiLnNlY29uZC5jdXJyZW50XCIgYXMgXCJub3dcIiBtZXNzYWdlLlxyXG5cclxuXHJcbiAgaWYgKGxvbmdMYWJlbHMgJiYgbG9uZ0xhYmVscy5zZWNvbmQgJiYgbG9uZ0xhYmVscy5zZWNvbmQuY3VycmVudCkge1xyXG4gICAgcmV0dXJuIGxvbmdMYWJlbHMuc2Vjb25kLmN1cnJlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBpc1N0eWxlKHZhcmlhYmxlKSB7XHJcbiAgcmV0dXJuIHR5cGVvZiB2YXJpYWJsZSA9PT0gJ3N0cmluZycgfHwgaXNTdHlsZU9iamVjdCh2YXJpYWJsZSk7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGltZUFnby5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/TimeAgo.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/cache.js":
/*!***********************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/cache.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Cache; }\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\n/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nvar Cache = /*#__PURE__*/function () {\r\n  function Cache() {\r\n    _classCallCheck(this, Cache);\r\n\r\n    this.cache = {};\r\n  }\r\n\r\n  _createClass(Cache, [{\r\n    key: \"get\",\r\n    value: function get() {\r\n      var cache = this.cache;\r\n\r\n      for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        keys[_key] = arguments[_key];\r\n      }\r\n\r\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\r\n        var key = _keys[_i];\r\n\r\n        if (_typeof(cache) !== 'object') {\r\n          return;\r\n        }\r\n\r\n        cache = cache[key];\r\n      }\r\n\r\n      return cache;\r\n    }\r\n  }, {\r\n    key: \"put\",\r\n    value: function put() {\r\n      for (var _len2 = arguments.length, keys = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        keys[_key2] = arguments[_key2];\r\n      }\r\n\r\n      var value = keys.pop();\r\n      var lastKey = keys.pop();\r\n      var cache = this.cache;\r\n\r\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\r\n        var key = _keys2[_i2];\r\n\r\n        if (_typeof(cache[key]) !== 'object') {\r\n          cache[key] = {};\r\n        }\r\n\r\n        cache = cache[key];\r\n      }\r\n\r\n      return cache[lastKey] = value;\r\n    }\r\n  }]);\r\n\r\n  return Cache;\r\n}();\r\n\r\n\r\n//# sourceMappingURL=cache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL2NhY2hlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx3QkFBd0IsMkJBQTJCLHNHQUFzRyxxQkFBcUIsbUJBQW1CLDhIQUE4SDtBQUMvVDtBQUNBLGtEQUFrRCwwQ0FBMEM7QUFDNUY7QUFDQSw0Q0FBNEMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RDtBQUMvUDtBQUNBLDhEQUE4RCxzRUFBc0UsOERBQThELGtEQUFrRCxpQkFBaUIsR0FBRztBQUN4UTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLGFBQWE7QUFDdkY7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG1CQUFtQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSw2RUFBNkUsZUFBZTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxxQkFBcUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQzRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvY2FjaGUuanM/MzMxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cclxuXHJcbi8qKlxyXG4gKiBBIGJhc2ljIGluLW1lbW9yeSBjYWNoZS5cclxuICpcclxuICogaW1wb3J0IENhY2hlIGZyb20gJ2phdmFzY3JpcHQtdGltZS1hZ28vQ2FjaGUnXHJcbiAqIGNvbnN0IGNhY2hlID0gbmV3IENhY2hlKClcclxuICogY29uc3Qgb2JqZWN0ID0gY2FjaGUuZ2V0KCdrZXkxJywgJ2tleTInLCAuLi4pIHx8IGNhY2hlLnB1dCgna2V5MScsICdrZXkyJywgLi4uLCBjcmVhdGVPYmplY3QoKSlcclxuICovXHJcbnZhciBDYWNoZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XHJcbiAgZnVuY3Rpb24gQ2FjaGUoKSB7XHJcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FjaGUpO1xyXG5cclxuICAgIHRoaXMuY2FjaGUgPSB7fTtcclxuICB9XHJcblxyXG4gIF9jcmVhdGVDbGFzcyhDYWNoZSwgW3tcclxuICAgIGtleTogXCJnZXRcIixcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXQoKSB7XHJcbiAgICAgIHZhciBjYWNoZSA9IHRoaXMuY2FjaGU7XHJcblxyXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwga2V5cyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgICBrZXlzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBmb3IgKHZhciBfaSA9IDAsIF9rZXlzID0ga2V5czsgX2kgPCBfa2V5cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICB2YXIga2V5ID0gX2tleXNbX2ldO1xyXG5cclxuICAgICAgICBpZiAoX3R5cGVvZihjYWNoZSkgIT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYWNoZSA9IGNhY2hlW2tleV07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBjYWNoZTtcclxuICAgIH1cclxuICB9LCB7XHJcbiAgICBrZXk6IFwicHV0XCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHV0KCkge1xyXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGtleXMgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcclxuICAgICAgICBrZXlzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciB2YWx1ZSA9IGtleXMucG9wKCk7XHJcbiAgICAgIHZhciBsYXN0S2V5ID0ga2V5cy5wb3AoKTtcclxuICAgICAgdmFyIGNhY2hlID0gdGhpcy5jYWNoZTtcclxuXHJcbiAgICAgIGZvciAodmFyIF9pMiA9IDAsIF9rZXlzMiA9IGtleXM7IF9pMiA8IF9rZXlzMi5sZW5ndGg7IF9pMisrKSB7XHJcbiAgICAgICAgdmFyIGtleSA9IF9rZXlzMltfaTJdO1xyXG5cclxuICAgICAgICBpZiAoX3R5cGVvZihjYWNoZVtrZXldKSAhPT0gJ29iamVjdCcpIHtcclxuICAgICAgICAgIGNhY2hlW2tleV0gPSB7fTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNhY2hlID0gY2FjaGVba2V5XTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGNhY2hlW2xhc3RLZXldID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfV0pO1xyXG5cclxuICByZXR1cm4gQ2FjaGU7XHJcbn0oKTtcclxuXHJcbmV4cG9ydCB7IENhY2hlIGFzIGRlZmF1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/cache.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/isStyleObject.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/isStyleObject.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isStyleObject; }\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction isStyleObject(object) {\r\n  return isObject(object) && (Array.isArray(object.steps) || // `gradation` property is deprecated: it has been renamed to `steps`.\r\n  Array.isArray(object.gradation) || // `flavour` property is deprecated: it has been renamed to `labels`.\r\n  Array.isArray(object.flavour) || typeof object.flavour === 'string' || Array.isArray(object.labels) || typeof object.labels === 'string' || // `units` property is deprecated.\r\n  Array.isArray(object.units) || // `custom` property is deprecated.\r\n  typeof object.custom === 'function');\r\n}\r\nvar OBJECT_CONSTRUCTOR = {}.constructor;\r\n\r\nfunction isObject(object) {\r\n  return _typeof(object) !== undefined && object !== null && object.constructor === OBJECT_CONSTRUCTOR;\r\n}\r\n//# sourceMappingURL=isStyleObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL2lzU3R5bGVPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdCQUF3QiwyQkFBMkIsc0dBQXNHLHFCQUFxQixtQkFBbUIsOEhBQThIO0FBQy9UO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL2lzU3R5bGVPYmplY3QuanM/ZDRmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1N0eWxlT2JqZWN0KG9iamVjdCkge1xyXG4gIHJldHVybiBpc09iamVjdChvYmplY3QpICYmIChBcnJheS5pc0FycmF5KG9iamVjdC5zdGVwcykgfHwgLy8gYGdyYWRhdGlvbmAgcHJvcGVydHkgaXMgZGVwcmVjYXRlZDogaXQgaGFzIGJlZW4gcmVuYW1lZCB0byBgc3RlcHNgLlxyXG4gIEFycmF5LmlzQXJyYXkob2JqZWN0LmdyYWRhdGlvbikgfHwgLy8gYGZsYXZvdXJgIHByb3BlcnR5IGlzIGRlcHJlY2F0ZWQ6IGl0IGhhcyBiZWVuIHJlbmFtZWQgdG8gYGxhYmVsc2AuXHJcbiAgQXJyYXkuaXNBcnJheShvYmplY3QuZmxhdm91cikgfHwgdHlwZW9mIG9iamVjdC5mbGF2b3VyID09PSAnc3RyaW5nJyB8fCBBcnJheS5pc0FycmF5KG9iamVjdC5sYWJlbHMpIHx8IHR5cGVvZiBvYmplY3QubGFiZWxzID09PSAnc3RyaW5nJyB8fCAvLyBgdW5pdHNgIHByb3BlcnR5IGlzIGRlcHJlY2F0ZWQuXHJcbiAgQXJyYXkuaXNBcnJheShvYmplY3QudW5pdHMpIHx8IC8vIGBjdXN0b21gIHByb3BlcnR5IGlzIGRlcHJlY2F0ZWQuXHJcbiAgdHlwZW9mIG9iamVjdC5jdXN0b20gPT09ICdmdW5jdGlvbicpO1xyXG59XHJcbnZhciBPQkpFQ1RfQ09OU1RSVUNUT1IgPSB7fS5jb25zdHJ1Y3RvcjtcclxuXHJcbmZ1bmN0aW9uIGlzT2JqZWN0KG9iamVjdCkge1xyXG4gIHJldHVybiBfdHlwZW9mKG9iamVjdCkgIT09IHVuZGVmaW5lZCAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LmNvbnN0cnVjdG9yID09PSBPQkpFQ1RfQ09OU1RSVUNUT1I7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNTdHlsZU9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/isStyleObject.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/locale.js":
/*!************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/locale.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ chooseLocale; },\n/* harmony export */   \"intlDateTimeFormatSupported\": function() { return /* binding */ intlDateTimeFormatSupported; },\n/* harmony export */   \"intlDateTimeFormatSupportedLocale\": function() { return /* binding */ intlDateTimeFormatSupportedLocale; }\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\n/**\r\n * Chooses the most appropriate locale\r\n * (one of the registered ones)\r\n * based on the list of preferred `locales` supplied by the user.\r\n *\r\n * @param {string[]} locales - the list of preferable locales (in [IETF format](https://en.wikipedia.org/wiki/IETF_language_tag)).\r\n * @param {Function} isLocaleDataAvailable - tests if a locale is available.\r\n *\r\n * @returns {string} The most suitable locale.\r\n *\r\n * @example\r\n * // Returns 'en'\r\n * chooseLocale(['en-US'], undefined, (locale) => locale === 'ru' || locale === 'en')\r\n */\r\nfunction chooseLocale(locales, isLocaleDataAvailable) {\r\n  // This is not an intelligent algorithm,\r\n  // but it will do for this library's case.\r\n  // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n  for (var _iterator = _createForOfIteratorHelperLoose(locales), _step; !(_step = _iterator()).done;) {\r\n    var locale = _step.value;\r\n\r\n    if (isLocaleDataAvailable(locale)) {\r\n      return locale;\r\n    }\r\n\r\n    var parts = locale.split('-');\r\n\r\n    while (parts.length > 1) {\r\n      parts.pop();\r\n      locale = parts.join('-');\r\n\r\n      if (isLocaleDataAvailable(locale)) {\r\n        return locale;\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(\"No locale data has been registered for any of the locales: \".concat(locales.join(', ')));\r\n}\r\n/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\n\r\nfunction intlDateTimeFormatSupportedLocale(locales) {\r\n  /* istanbul ignore else */\r\n  if (intlDateTimeFormatSupported()) {\r\n    return Intl.DateTimeFormat.supportedLocalesOf(locales)[0];\r\n  }\r\n}\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\n\r\nfunction intlDateTimeFormatSupported() {\r\n  // Babel transforms `typeof` into some \"branches\"\r\n  // so istanbul will show this as \"branch not covered\".\r\n\r\n  /* istanbul ignore next */\r\n  var isIntlAvailable = (typeof Intl === \"undefined\" ? \"undefined\" : _typeof(Intl)) === 'object';\r\n  return isIntlAvailable && typeof Intl.DateTimeFormat === 'function';\r\n}\r\n//# sourceMappingURL=locale.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL2xvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3QkFBd0IsMkJBQTJCLHNHQUFzRyxxQkFBcUIsbUJBQW1CLDhIQUE4SDtBQUMvVDtBQUNBLDhEQUE4RCxpRkFBaUYsZ0RBQWdELHdIQUF3SCxnQkFBZ0IsV0FBVyxxQkFBcUIsNEJBQTRCLGNBQWMsU0FBUyxtQ0FBbUM7QUFDN2I7QUFDQSxrREFBa0QsZ0JBQWdCLGdFQUFnRSx3REFBd0QsNkRBQTZELHNEQUFzRDtBQUM3UztBQUNBLHVDQUF1Qyx1REFBdUQsdUNBQXVDLFNBQVMsT0FBTyxvQkFBb0I7QUFDeks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsNEJBQTRCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQixZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL2xvY2FsZS5qcz9jYTUxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9LCBfdHlwZW9mKG9iaik7IH1cclxuXHJcbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0ID0gdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1tcIkBAaXRlcmF0b3JcIl07IGlmIChpdCkgcmV0dXJuIChpdCA9IGl0LmNhbGwobykpLm5leHQuYmluZChpdCk7IGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHsgaWYgKGl0KSBvID0gaXQ7IHZhciBpID0gMDsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cclxuXHJcbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxyXG5cclxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XHJcblxyXG4vKipcclxuICogQ2hvb3NlcyB0aGUgbW9zdCBhcHByb3ByaWF0ZSBsb2NhbGVcclxuICogKG9uZSBvZiB0aGUgcmVnaXN0ZXJlZCBvbmVzKVxyXG4gKiBiYXNlZCBvbiB0aGUgbGlzdCBvZiBwcmVmZXJyZWQgYGxvY2FsZXNgIHN1cHBsaWVkIGJ5IHRoZSB1c2VyLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBsb2NhbGVzIC0gdGhlIGxpc3Qgb2YgcHJlZmVyYWJsZSBsb2NhbGVzIChpbiBbSUVURiBmb3JtYXRdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0lFVEZfbGFuZ3VhZ2VfdGFnKSkuXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGlzTG9jYWxlRGF0YUF2YWlsYWJsZSAtIHRlc3RzIGlmIGEgbG9jYWxlIGlzIGF2YWlsYWJsZS5cclxuICpcclxuICogQHJldHVybnMge3N0cmluZ30gVGhlIG1vc3Qgc3VpdGFibGUgbG9jYWxlLlxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBSZXR1cm5zICdlbidcclxuICogY2hvb3NlTG9jYWxlKFsnZW4tVVMnXSwgdW5kZWZpbmVkLCAobG9jYWxlKSA9PiBsb2NhbGUgPT09ICdydScgfHwgbG9jYWxlID09PSAnZW4nKVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2hvb3NlTG9jYWxlKGxvY2FsZXMsIGlzTG9jYWxlRGF0YUF2YWlsYWJsZSkge1xyXG4gIC8vIFRoaXMgaXMgbm90IGFuIGludGVsbGlnZW50IGFsZ29yaXRobSxcclxuICAvLyBidXQgaXQgd2lsbCBkbyBmb3IgdGhpcyBsaWJyYXJ5J3MgY2FzZS5cclxuICAvLyBgc3ItQ3lybC1CQWAgLT4gYHNyLUN5cmxgIC0+IGBzcmAuXHJcbiAgZm9yICh2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXJMb29zZShsb2NhbGVzKSwgX3N0ZXA7ICEoX3N0ZXAgPSBfaXRlcmF0b3IoKSkuZG9uZTspIHtcclxuICAgIHZhciBsb2NhbGUgPSBfc3RlcC52YWx1ZTtcclxuXHJcbiAgICBpZiAoaXNMb2NhbGVEYXRhQXZhaWxhYmxlKGxvY2FsZSkpIHtcclxuICAgICAgcmV0dXJuIGxvY2FsZTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgcGFydHMgPSBsb2NhbGUuc3BsaXQoJy0nKTtcclxuXHJcbiAgICB3aGlsZSAocGFydHMubGVuZ3RoID4gMSkge1xyXG4gICAgICBwYXJ0cy5wb3AoKTtcclxuICAgICAgbG9jYWxlID0gcGFydHMuam9pbignLScpO1xyXG5cclxuICAgICAgaWYgKGlzTG9jYWxlRGF0YUF2YWlsYWJsZShsb2NhbGUpKSB7XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGhyb3cgbmV3IEVycm9yKFwiTm8gbG9jYWxlIGRhdGEgaGFzIGJlZW4gcmVnaXN0ZXJlZCBmb3IgYW55IG9mIHRoZSBsb2NhbGVzOiBcIi5jb25jYXQobG9jYWxlcy5qb2luKCcsICcpKSk7XHJcbn1cclxuLyoqXHJcbiAqIFdoZXRoZXIgY2FuIHVzZSBgSW50bC5EYXRlVGltZUZvcm1hdGAgZm9yIHRoZXNlIGBsb2NhbGVzYC5cclxuICogUmV0dXJucyB0aGUgZmlyc3Qgc3VpdGFibGUgb25lLlxyXG4gKiBAcGFyYW0gIHsoc3RyaW5nfHN0cmluZ1tdKX0gbG9jYWxlc1xyXG4gKiBAcmV0dXJuIHs/c3RyaW5nfSBUaGUgZmlyc3QgbG9jYWxlIHRoYXQgY2FuIGJlIHVzZWQuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGludGxEYXRlVGltZUZvcm1hdFN1cHBvcnRlZExvY2FsZShsb2NhbGVzKSB7XHJcbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cclxuICBpZiAoaW50bERhdGVUaW1lRm9ybWF0U3VwcG9ydGVkKCkpIHtcclxuICAgIHJldHVybiBJbnRsLkRhdGVUaW1lRm9ybWF0LnN1cHBvcnRlZExvY2FsZXNPZihsb2NhbGVzKVswXTtcclxuICB9XHJcbn1cclxuLyoqXHJcbiAqIFdoZXRoZXIgY2FuIHVzZSBgSW50bC5EYXRlVGltZUZvcm1hdGAuXHJcbiAqIEByZXR1cm4ge2Jvb2xlYW59XHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGludGxEYXRlVGltZUZvcm1hdFN1cHBvcnRlZCgpIHtcclxuICAvLyBCYWJlbCB0cmFuc2Zvcm1zIGB0eXBlb2ZgIGludG8gc29tZSBcImJyYW5jaGVzXCJcclxuICAvLyBzbyBpc3RhbmJ1bCB3aWxsIHNob3cgdGhpcyBhcyBcImJyYW5jaCBub3QgY292ZXJlZFwiLlxyXG5cclxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG4gIHZhciBpc0ludGxBdmFpbGFibGUgPSAodHlwZW9mIEludGwgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihJbnRsKSkgPT09ICdvYmplY3QnO1xyXG4gIHJldHVybiBpc0ludGxBdmFpbGFibGUgJiYgdHlwZW9mIEludGwuRGF0ZVRpbWVGb3JtYXQgPT09ICdmdW5jdGlvbic7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/locale.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/round.js":
/*!***********************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/round.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDiffRatioToNextRoundedNumber\": function() { return /* binding */ getDiffRatioToNextRoundedNumber; },\n/* harmony export */   \"getRoundFunction\": function() { return /* binding */ getRoundFunction; }\n/* harmony export */ });\nfunction getRoundFunction(round) {\r\n  switch (round) {\r\n    case 'floor':\r\n      return Math.floor;\r\n\r\n    default:\r\n      return Math.round;\r\n  }\r\n} // For non-negative numbers.\r\n\r\nfunction getDiffRatioToNextRoundedNumber(round) {\r\n  switch (round) {\r\n    case 'floor':\r\n      // Math.floor(x) = x\r\n      // Math.floor(x + 1) = x + 1\r\n      return 1;\r\n\r\n    default:\r\n      // Math.round(x) = x\r\n      // Math.round(x + 0.5) = x + 1\r\n      return 0.5;\r\n  }\r\n}\r\n//# sourceMappingURL=round.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3JvdW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9yb3VuZC5qcz8xYjY3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXRSb3VuZEZ1bmN0aW9uKHJvdW5kKSB7XHJcbiAgc3dpdGNoIChyb3VuZCkge1xyXG4gICAgY2FzZSAnZmxvb3InOlxyXG4gICAgICByZXR1cm4gTWF0aC5mbG9vcjtcclxuXHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gTWF0aC5yb3VuZDtcclxuICB9XHJcbn0gLy8gRm9yIG5vbi1uZWdhdGl2ZSBudW1iZXJzLlxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldERpZmZSYXRpb1RvTmV4dFJvdW5kZWROdW1iZXIocm91bmQpIHtcclxuICBzd2l0Y2ggKHJvdW5kKSB7XHJcbiAgICBjYXNlICdmbG9vcic6XHJcbiAgICAgIC8vIE1hdGguZmxvb3IoeCkgPSB4XHJcbiAgICAgIC8vIE1hdGguZmxvb3IoeCArIDEpID0geCArIDFcclxuICAgICAgcmV0dXJuIDE7XHJcblxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgLy8gTWF0aC5yb3VuZCh4KSA9IHhcclxuICAgICAgLy8gTWF0aC5yb3VuZCh4ICsgMC41KSA9IHggKyAxXHJcbiAgICAgIHJldHVybiAwLjU7XHJcbiAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/round.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/approximate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/approximate.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n // \"factor\" is a legacy property.\r\n// Developers shouldn't need to use it in their custom steps.\r\n// \"threshold\" is a legacy name of \"min\".\r\n// Developers should use \"min\" property name instead of \"threshold\".\r\n// \"threshold_for_idOrUnit: value\" is a legacy way of specifying \"min: { id: value }\".\r\n// Developers should use \"min\" property instead of \"threshold\".\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// 5 minutes ago\r\n// 10 minutes ago\r\n// 15 minutes ago\r\n// 20 minutes ago\r\n// …\r\n// 50 minutes ago\r\n// an hour ago\r\n// 2 hours ago\r\n// …\r\n// 20 hours ago\r\n// a day ago\r\n// 2 days ago\r\n// 5 days ago\r\n// a week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// a month ago\r\n// 2 months ago\r\n// 4 months ago\r\n// a year ago\r\n// 2 years ago\r\n// …\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\r\n  // This step returns the amount of seconds\r\n  // by dividing the amount of seconds by `1`.\r\n  factor: 1,\r\n  // \"now\" labels are used for formatting the output.\r\n  unit: 'now'\r\n}, {\r\n  // When the language doesn't support `now` unit,\r\n  // the first step is ignored, and it uses this `second` unit.\r\n  threshold: 1,\r\n  // `threshold_for_now` should be the same as `threshold` on minutes.\r\n  threshold_for_now: 45.5,\r\n  // This step returns the amount of seconds\r\n  // by dividing the amount of seconds by `1`.\r\n  factor: 1,\r\n  // \"second\" labels are used for formatting the output.\r\n  unit: 'second'\r\n}, {\r\n  // `threshold` should be the same as `threshold_for_now` on seconds.\r\n  threshold: 45.5,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a minute.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  // \"minute\" labels are used for formatting the output.\r\n  unit: 'minute'\r\n}, {\r\n  // This step is effective starting from 2.5 minutes.\r\n  threshold: 2.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  // Allow only 5-minute increments of minutes starting from 2.5 minutes.\r\n  // `granularity` — (advanced) Time interval value \"granularity\".\r\n  // For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n  // when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n  // Perhaps this feature will be removed because there seem to be no use cases\r\n  // of it in the real world.\r\n  granularity: 5,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a minute.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  // \"minute\" labels are used for formatting the output.\r\n  unit: 'minute'\r\n}, {\r\n  // This step is effective starting from 22.5 minutes.\r\n  threshold: 22.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in  half-an-hour.\r\n  factor: 0.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.hour,\r\n  // \"half-hour\" labels are used for formatting the output.\r\n  // (if available, which is no longer the case)\r\n  unit: 'half-hour'\r\n}, {\r\n  // This step is effective starting from 42.5 minutes.\r\n  threshold: 42.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  threshold_for_minute: 52.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.minute,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in an hour.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.hour,\r\n  // \"hour\" labels are used for formatting the output.\r\n  unit: 'hour'\r\n}, {\r\n  // This step is effective starting from 20.5 hours.\r\n  threshold: 20.5 / 24 * _units_js__WEBPACK_IMPORTED_MODULE_0__.day,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a day.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.day,\r\n  // \"day\" labels are used for formatting the output.\r\n  unit: 'day'\r\n}, {\r\n  // This step is effective starting from 5.5 days.\r\n  threshold: 5.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.day,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a week.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.week,\r\n  // \"week\" labels are used for formatting the output.\r\n  unit: 'week'\r\n}, {\r\n  // This step is effective starting from 3.5 weeks.\r\n  threshold: 3.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.week,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a month.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.month,\r\n  // \"month\" labels are used for formatting the output.\r\n  unit: 'month'\r\n}, {\r\n  // This step is effective starting from 10.5 months.\r\n  threshold: 10.5 * _units_js__WEBPACK_IMPORTED_MODULE_0__.month,\r\n  // Return the amount of minutes by dividing the amount\r\n  // of seconds by the amount of seconds in a year.\r\n  factor: _units_js__WEBPACK_IMPORTED_MODULE_0__.year,\r\n  // \"year\" labels are used for formatting the output.\r\n  unit: 'year'\r\n}]);\r\n//# sourceMappingURL=approximate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2FwcHJveGltYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWtFLENBQUM7QUFDbkU7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLFdBQVc7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2Q0FBTTtBQUNoQjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLDZDQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsNkNBQU07QUFDaEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQiw2Q0FBTTtBQUMxQjtBQUNBO0FBQ0EsZ0JBQWdCLDJDQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQiw2Q0FBTTtBQUMxQiwrQkFBK0IsNkNBQU07QUFDckM7QUFDQTtBQUNBLFVBQVUsMkNBQUk7QUFDZDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EseUJBQXlCLDBDQUFHO0FBQzVCO0FBQ0E7QUFDQSxVQUFVLDBDQUFHO0FBQ2I7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG1CQUFtQiwwQ0FBRztBQUN0QjtBQUNBO0FBQ0EsVUFBVSwyQ0FBSTtBQUNkO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxtQkFBbUIsMkNBQUk7QUFDdkI7QUFDQTtBQUNBLFVBQVUsNENBQUs7QUFDZjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0Esb0JBQW9CLDRDQUFLO0FBQ3pCO0FBQ0E7QUFDQSxVQUFVLDJDQUFJO0FBQ2Q7QUFDQTtBQUNBLENBQUMsQ0FBQyxFQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdGVwcy9hcHByb3hpbWF0ZS5qcz8xZDMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1pbnV0ZSwgaG91ciwgZGF5LCB3ZWVrLCBtb250aCwgeWVhciB9IGZyb20gJy4vdW5pdHMuanMnOyAvLyBcImZhY3RvclwiIGlzIGEgbGVnYWN5IHByb3BlcnR5LlxyXG4vLyBEZXZlbG9wZXJzIHNob3VsZG4ndCBuZWVkIHRvIHVzZSBpdCBpbiB0aGVpciBjdXN0b20gc3RlcHMuXHJcbi8vIFwidGhyZXNob2xkXCIgaXMgYSBsZWdhY3kgbmFtZSBvZiBcIm1pblwiLlxyXG4vLyBEZXZlbG9wZXJzIHNob3VsZCB1c2UgXCJtaW5cIiBwcm9wZXJ0eSBuYW1lIGluc3RlYWQgb2YgXCJ0aHJlc2hvbGRcIi5cclxuLy8gXCJ0aHJlc2hvbGRfZm9yX2lkT3JVbml0OiB2YWx1ZVwiIGlzIGEgbGVnYWN5IHdheSBvZiBzcGVjaWZ5aW5nIFwibWluOiB7IGlkOiB2YWx1ZSB9XCIuXHJcbi8vIERldmVsb3BlcnMgc2hvdWxkIHVzZSBcIm1pblwiIHByb3BlcnR5IGluc3RlYWQgb2YgXCJ0aHJlc2hvbGRcIi5cclxuLy8ganVzdCBub3dcclxuLy8gMSBtaW51dGUgYWdvXHJcbi8vIDIgbWludXRlcyBhZ29cclxuLy8gNSBtaW51dGVzIGFnb1xyXG4vLyAxMCBtaW51dGVzIGFnb1xyXG4vLyAxNSBtaW51dGVzIGFnb1xyXG4vLyAyMCBtaW51dGVzIGFnb1xyXG4vLyDigKZcclxuLy8gNTAgbWludXRlcyBhZ29cclxuLy8gYW4gaG91ciBhZ29cclxuLy8gMiBob3VycyBhZ29cclxuLy8g4oCmXHJcbi8vIDIwIGhvdXJzIGFnb1xyXG4vLyBhIGRheSBhZ29cclxuLy8gMiBkYXlzIGFnb1xyXG4vLyA1IGRheXMgYWdvXHJcbi8vIGEgd2VlayBhZ29cclxuLy8gMiB3ZWVrcyBhZ29cclxuLy8gMyB3ZWVrcyBhZ29cclxuLy8gYSBtb250aCBhZ29cclxuLy8gMiBtb250aHMgYWdvXHJcbi8vIDQgbW9udGhzIGFnb1xyXG4vLyBhIHllYXIgYWdvXHJcbi8vIDIgeWVhcnMgYWdvXHJcbi8vIOKAplxyXG5cclxuZXhwb3J0IGRlZmF1bHQgW3tcclxuICAvLyBUaGlzIHN0ZXAgcmV0dXJucyB0aGUgYW1vdW50IG9mIHNlY29uZHNcclxuICAvLyBieSBkaXZpZGluZyB0aGUgYW1vdW50IG9mIHNlY29uZHMgYnkgYDFgLlxyXG4gIGZhY3RvcjogMSxcclxuICAvLyBcIm5vd1wiIGxhYmVscyBhcmUgdXNlZCBmb3IgZm9ybWF0dGluZyB0aGUgb3V0cHV0LlxyXG4gIHVuaXQ6ICdub3cnXHJcbn0sIHtcclxuICAvLyBXaGVuIHRoZSBsYW5ndWFnZSBkb2Vzbid0IHN1cHBvcnQgYG5vd2AgdW5pdCxcclxuICAvLyB0aGUgZmlyc3Qgc3RlcCBpcyBpZ25vcmVkLCBhbmQgaXQgdXNlcyB0aGlzIGBzZWNvbmRgIHVuaXQuXHJcbiAgdGhyZXNob2xkOiAxLFxyXG4gIC8vIGB0aHJlc2hvbGRfZm9yX25vd2Agc2hvdWxkIGJlIHRoZSBzYW1lIGFzIGB0aHJlc2hvbGRgIG9uIG1pbnV0ZXMuXHJcbiAgdGhyZXNob2xkX2Zvcl9ub3c6IDQ1LjUsXHJcbiAgLy8gVGhpcyBzdGVwIHJldHVybnMgdGhlIGFtb3VudCBvZiBzZWNvbmRzXHJcbiAgLy8gYnkgZGl2aWRpbmcgdGhlIGFtb3VudCBvZiBzZWNvbmRzIGJ5IGAxYC5cclxuICBmYWN0b3I6IDEsXHJcbiAgLy8gXCJzZWNvbmRcIiBsYWJlbHMgYXJlIHVzZWQgZm9yIGZvcm1hdHRpbmcgdGhlIG91dHB1dC5cclxuICB1bml0OiAnc2Vjb25kJ1xyXG59LCB7XHJcbiAgLy8gYHRocmVzaG9sZGAgc2hvdWxkIGJlIHRoZSBzYW1lIGFzIGB0aHJlc2hvbGRfZm9yX25vd2Agb24gc2Vjb25kcy5cclxuICB0aHJlc2hvbGQ6IDQ1LjUsXHJcbiAgLy8gUmV0dXJuIHRoZSBhbW91bnQgb2YgbWludXRlcyBieSBkaXZpZGluZyB0aGUgYW1vdW50XHJcbiAgLy8gb2Ygc2Vjb25kcyBieSB0aGUgYW1vdW50IG9mIHNlY29uZHMgaW4gYSBtaW51dGUuXHJcbiAgZmFjdG9yOiBtaW51dGUsXHJcbiAgLy8gXCJtaW51dGVcIiBsYWJlbHMgYXJlIHVzZWQgZm9yIGZvcm1hdHRpbmcgdGhlIG91dHB1dC5cclxuICB1bml0OiAnbWludXRlJ1xyXG59LCB7XHJcbiAgLy8gVGhpcyBzdGVwIGlzIGVmZmVjdGl2ZSBzdGFydGluZyBmcm9tIDIuNSBtaW51dGVzLlxyXG4gIHRocmVzaG9sZDogMi41ICogbWludXRlLFxyXG4gIC8vIEFsbG93IG9ubHkgNS1taW51dGUgaW5jcmVtZW50cyBvZiBtaW51dGVzIHN0YXJ0aW5nIGZyb20gMi41IG1pbnV0ZXMuXHJcbiAgLy8gYGdyYW51bGFyaXR5YCDigJQgKGFkdmFuY2VkKSBUaW1lIGludGVydmFsIHZhbHVlIFwiZ3JhbnVsYXJpdHlcIi5cclxuICAvLyBGb3IgZXhhbXBsZSwgaXQgY291bGQgYmUgc2V0IHRvIGA1YCBmb3IgbWludXRlcyB0byBhbGxvdyBvbmx5IDUtbWludXRlIGluY3JlbWVudHNcclxuICAvLyB3aGVuIGZvcm1hdHRpbmcgdGltZSBpbnRlcnZhbHM6IGAwIG1pbnV0ZXNgLCBgNSBtaW51dGVzYCwgYDEwIG1pbnV0ZXNgLCBldGMuXHJcbiAgLy8gUGVyaGFwcyB0aGlzIGZlYXR1cmUgd2lsbCBiZSByZW1vdmVkIGJlY2F1c2UgdGhlcmUgc2VlbSB0byBiZSBubyB1c2UgY2FzZXNcclxuICAvLyBvZiBpdCBpbiB0aGUgcmVhbCB3b3JsZC5cclxuICBncmFudWxhcml0eTogNSxcclxuICAvLyBSZXR1cm4gdGhlIGFtb3VudCBvZiBtaW51dGVzIGJ5IGRpdmlkaW5nIHRoZSBhbW91bnRcclxuICAvLyBvZiBzZWNvbmRzIGJ5IHRoZSBhbW91bnQgb2Ygc2Vjb25kcyBpbiBhIG1pbnV0ZS5cclxuICBmYWN0b3I6IG1pbnV0ZSxcclxuICAvLyBcIm1pbnV0ZVwiIGxhYmVscyBhcmUgdXNlZCBmb3IgZm9ybWF0dGluZyB0aGUgb3V0cHV0LlxyXG4gIHVuaXQ6ICdtaW51dGUnXHJcbn0sIHtcclxuICAvLyBUaGlzIHN0ZXAgaXMgZWZmZWN0aXZlIHN0YXJ0aW5nIGZyb20gMjIuNSBtaW51dGVzLlxyXG4gIHRocmVzaG9sZDogMjIuNSAqIG1pbnV0ZSxcclxuICAvLyBSZXR1cm4gdGhlIGFtb3VudCBvZiBtaW51dGVzIGJ5IGRpdmlkaW5nIHRoZSBhbW91bnRcclxuICAvLyBvZiBzZWNvbmRzIGJ5IHRoZSBhbW91bnQgb2Ygc2Vjb25kcyBpbiAgaGFsZi1hbi1ob3VyLlxyXG4gIGZhY3RvcjogMC41ICogaG91cixcclxuICAvLyBcImhhbGYtaG91clwiIGxhYmVscyBhcmUgdXNlZCBmb3IgZm9ybWF0dGluZyB0aGUgb3V0cHV0LlxyXG4gIC8vIChpZiBhdmFpbGFibGUsIHdoaWNoIGlzIG5vIGxvbmdlciB0aGUgY2FzZSlcclxuICB1bml0OiAnaGFsZi1ob3VyJ1xyXG59LCB7XHJcbiAgLy8gVGhpcyBzdGVwIGlzIGVmZmVjdGl2ZSBzdGFydGluZyBmcm9tIDQyLjUgbWludXRlcy5cclxuICB0aHJlc2hvbGQ6IDQyLjUgKiBtaW51dGUsXHJcbiAgdGhyZXNob2xkX2Zvcl9taW51dGU6IDUyLjUgKiBtaW51dGUsXHJcbiAgLy8gUmV0dXJuIHRoZSBhbW91bnQgb2YgbWludXRlcyBieSBkaXZpZGluZyB0aGUgYW1vdW50XHJcbiAgLy8gb2Ygc2Vjb25kcyBieSB0aGUgYW1vdW50IG9mIHNlY29uZHMgaW4gYW4gaG91ci5cclxuICBmYWN0b3I6IGhvdXIsXHJcbiAgLy8gXCJob3VyXCIgbGFiZWxzIGFyZSB1c2VkIGZvciBmb3JtYXR0aW5nIHRoZSBvdXRwdXQuXHJcbiAgdW5pdDogJ2hvdXInXHJcbn0sIHtcclxuICAvLyBUaGlzIHN0ZXAgaXMgZWZmZWN0aXZlIHN0YXJ0aW5nIGZyb20gMjAuNSBob3Vycy5cclxuICB0aHJlc2hvbGQ6IDIwLjUgLyAyNCAqIGRheSxcclxuICAvLyBSZXR1cm4gdGhlIGFtb3VudCBvZiBtaW51dGVzIGJ5IGRpdmlkaW5nIHRoZSBhbW91bnRcclxuICAvLyBvZiBzZWNvbmRzIGJ5IHRoZSBhbW91bnQgb2Ygc2Vjb25kcyBpbiBhIGRheS5cclxuICBmYWN0b3I6IGRheSxcclxuICAvLyBcImRheVwiIGxhYmVscyBhcmUgdXNlZCBmb3IgZm9ybWF0dGluZyB0aGUgb3V0cHV0LlxyXG4gIHVuaXQ6ICdkYXknXHJcbn0sIHtcclxuICAvLyBUaGlzIHN0ZXAgaXMgZWZmZWN0aXZlIHN0YXJ0aW5nIGZyb20gNS41IGRheXMuXHJcbiAgdGhyZXNob2xkOiA1LjUgKiBkYXksXHJcbiAgLy8gUmV0dXJuIHRoZSBhbW91bnQgb2YgbWludXRlcyBieSBkaXZpZGluZyB0aGUgYW1vdW50XHJcbiAgLy8gb2Ygc2Vjb25kcyBieSB0aGUgYW1vdW50IG9mIHNlY29uZHMgaW4gYSB3ZWVrLlxyXG4gIGZhY3Rvcjogd2VlayxcclxuICAvLyBcIndlZWtcIiBsYWJlbHMgYXJlIHVzZWQgZm9yIGZvcm1hdHRpbmcgdGhlIG91dHB1dC5cclxuICB1bml0OiAnd2VlaydcclxufSwge1xyXG4gIC8vIFRoaXMgc3RlcCBpcyBlZmZlY3RpdmUgc3RhcnRpbmcgZnJvbSAzLjUgd2Vla3MuXHJcbiAgdGhyZXNob2xkOiAzLjUgKiB3ZWVrLFxyXG4gIC8vIFJldHVybiB0aGUgYW1vdW50IG9mIG1pbnV0ZXMgYnkgZGl2aWRpbmcgdGhlIGFtb3VudFxyXG4gIC8vIG9mIHNlY29uZHMgYnkgdGhlIGFtb3VudCBvZiBzZWNvbmRzIGluIGEgbW9udGguXHJcbiAgZmFjdG9yOiBtb250aCxcclxuICAvLyBcIm1vbnRoXCIgbGFiZWxzIGFyZSB1c2VkIGZvciBmb3JtYXR0aW5nIHRoZSBvdXRwdXQuXHJcbiAgdW5pdDogJ21vbnRoJ1xyXG59LCB7XHJcbiAgLy8gVGhpcyBzdGVwIGlzIGVmZmVjdGl2ZSBzdGFydGluZyBmcm9tIDEwLjUgbW9udGhzLlxyXG4gIHRocmVzaG9sZDogMTAuNSAqIG1vbnRoLFxyXG4gIC8vIFJldHVybiB0aGUgYW1vdW50IG9mIG1pbnV0ZXMgYnkgZGl2aWRpbmcgdGhlIGFtb3VudFxyXG4gIC8vIG9mIHNlY29uZHMgYnkgdGhlIGFtb3VudCBvZiBzZWNvbmRzIGluIGEgeWVhci5cclxuICBmYWN0b3I6IHllYXIsXHJcbiAgLy8gXCJ5ZWFyXCIgbGFiZWxzIGFyZSB1c2VkIGZvciBmb3JtYXR0aW5nIHRoZSBvdXRwdXQuXHJcbiAgdW5pdDogJ3llYXInXHJcbn1dO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHByb3hpbWF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/approximate.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/getStep.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/getStep.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getStep; }\n/* harmony export */ });\n/* harmony import */ var _getStepDenominator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getStepDenominator.js */ \"./node_modules/javascript-time-ago/modules/steps/getStepDenominator.js\");\n/* harmony import */ var _getStepMinTime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getStepMinTime.js */ \"./node_modules/javascript-time-ago/modules/steps/getStepMinTime.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../round.js */ \"./node_modules/javascript-time-ago/modules/round.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * Finds an appropriate `step` of `steps` for the time interval (in seconds).\r\n *\r\n * @param {Object[]} steps - Time formatting steps.\r\n *\r\n * @param {number} secondsPassed - Time interval (in seconds).\r\n *                                 `< 0` for past dates and `> 0` for future dates.\r\n *\r\n * @param {number} options.now - Current timestamp.\r\n *\r\n * @param {boolean} [options.future] - Whether the date should be formatted as a future one\r\n *                                     instead of a past one.\r\n *\r\n * @param {string} [options.round] - (undocumented) Rounding mechanism.\r\n *\r\n * @param {string[]} [options.units] - A list of allowed time units.\r\n *                                     (Example: ['second', 'minute', 'hour', …])\r\n *\r\n * @param {boolean} [options.getNextStep] - Pass true to return `[step, nextStep]` instead of just `step`.\r\n *\r\n * @return {Object|Object[]} [step] — Either a `step` or `[prevStep, step, nextStep]`.\r\n */\r\n\r\nfunction getStep(steps, secondsPassed, _ref) {\r\n  var now = _ref.now,\r\n      future = _ref.future,\r\n      round = _ref.round,\r\n      units = _ref.units,\r\n      getNextStep = _ref.getNextStep;\r\n  // Ignore steps having not-supported time units in `formatAs`.\r\n  steps = filterStepsByUnits(steps, units);\r\n\r\n  var step = _getStep(steps, secondsPassed, {\r\n    now: now,\r\n    future: future,\r\n    round: round\r\n  });\r\n\r\n  if (getNextStep) {\r\n    if (step) {\r\n      var prevStep = steps[steps.indexOf(step) - 1];\r\n      var nextStep = steps[steps.indexOf(step) + 1];\r\n      return [prevStep, step, nextStep];\r\n    }\r\n\r\n    return [undefined, undefined, steps[0]];\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nfunction _getStep(steps, secondsPassed, _ref2) {\r\n  var now = _ref2.now,\r\n      future = _ref2.future,\r\n      round = _ref2.round;\r\n\r\n  // If no steps fit the conditions then return nothing.\r\n  if (steps.length === 0) {\r\n    return;\r\n  } // Find the most appropriate step.\r\n\r\n\r\n  var i = getStepIndex(steps, secondsPassed, {\r\n    now: now,\r\n    future: future || secondsPassed < 0,\r\n    round: round\r\n  }); // If no step is applicable the return nothing.\r\n\r\n  if (i === -1) {\r\n    return;\r\n  }\r\n\r\n  var step = steps[i]; // Apply granularity to the time amount\r\n  // (and fall back to the previous step\r\n  //  if the first level of granularity\r\n  //  isn't met by this amount)\r\n\r\n  if (step.granularity) {\r\n    // Recalculate the amount of seconds passed based on `granularity`.\r\n    var secondsPassedGranular = (0,_round_js__WEBPACK_IMPORTED_MODULE_0__.getRoundFunction)(round)(Math.abs(secondsPassed) / (0,_getStepDenominator_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(step) / step.granularity) * step.granularity; // If the granularity for this step is too high,\r\n    // then fall back to the previous step.\r\n    // (if there is any previous step)\r\n\r\n    if (secondsPassedGranular === 0 && i > 0) {\r\n      return steps[i - 1];\r\n    }\r\n  }\r\n\r\n  return step;\r\n}\r\n/**\r\n * Iterates through steps until it finds the maximum one satisfying the `minTime` threshold.\r\n * @param  {Object} steps - Steps.\r\n * @param  {number} secondsPassed - How much seconds have passed since the date till `now`.\r\n * @param  {number} options.now - Current timestamp.\r\n * @param  {boolean} options.future - Whether the time interval should be formatted as a future one.\r\n * @param  {number} [i] - Gradation step currently being tested.\r\n * @return {number} Gradation step index.\r\n */\r\n\r\n\r\nfunction getStepIndex(steps, secondsPassed, options) {\r\n  var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\r\n  var minTime = (0,_getStepMinTime_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(steps[i], _objectSpread({\r\n    prevStep: steps[i - 1],\r\n    timestamp: options.now - secondsPassed * 1000\r\n  }, options)); // If `minTime` isn't defined or deduceable for this step, then stop.\r\n\r\n  if (minTime === undefined) {\r\n    return i - 1;\r\n  } // If the `minTime` threshold for moving from previous step\r\n  // to this step is too high then return the previous step.\r\n\r\n\r\n  if (Math.abs(secondsPassed) < minTime) {\r\n    return i - 1;\r\n  } // If it's the last step then return it.\r\n\r\n\r\n  if (i === steps.length - 1) {\r\n    return i;\r\n  } // Move to the next step.\r\n\r\n\r\n  return getStepIndex(steps, secondsPassed, options, i + 1);\r\n}\r\n/**\r\n * Leaves only allowed steps.\r\n * @param  {Object[]} steps\r\n * @param  {string[]} units - Allowed time units.\r\n * @return {Object[]}\r\n */\r\n\r\n\r\nfunction filterStepsByUnits(steps, units) {\r\n  return steps.filter(function (_ref3) {\r\n    var unit = _ref3.unit,\r\n        formatAs = _ref3.formatAs;\r\n    // \"unit\" is now called \"formatAs\".\r\n    unit = unit || formatAs; // If this step has a `unit` defined\r\n    // then this `unit` must be in the list of allowed `units`.\r\n\r\n    if (unit) {\r\n      return units.indexOf(unit) >= 0;\r\n    } // A step is not required to specify a `unit`:\r\n    // alternatively, it could specify `format()`.\r\n    // (see \"twitter\" style for an example)\r\n\r\n\r\n    return true;\r\n  });\r\n}\r\n//# sourceMappingURL=getStep.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/getStep.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/getStepDenominator.js":
/*!******************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/getStepDenominator.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getStepDenominator; }\n/* harmony export */ });\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n\r\nfunction getStepDenominator(step) {\r\n  // `factor` is a legacy property.\r\n  if (step.factor !== undefined) {\r\n    return step.factor;\r\n  } // \"unit\" is now called \"formatAs\".\r\n\r\n\r\n  return (0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(step.unit || step.formatAs) || 1;\r\n}\r\n//# sourceMappingURL=getStepDenominator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFN0ZXBEZW5vbWluYXRvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUMvQjtBQUNmO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsU0FBUywyREFBZ0I7QUFDekI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFN0ZXBEZW5vbWluYXRvci5qcz82YTMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNlY29uZHNJblVuaXQgfSBmcm9tICcuL3VuaXRzLmpzJztcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U3RlcERlbm9taW5hdG9yKHN0ZXApIHtcclxuICAvLyBgZmFjdG9yYCBpcyBhIGxlZ2FjeSBwcm9wZXJ0eS5cclxuICBpZiAoc3RlcC5mYWN0b3IgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuIHN0ZXAuZmFjdG9yO1xyXG4gIH0gLy8gXCJ1bml0XCIgaXMgbm93IGNhbGxlZCBcImZvcm1hdEFzXCIuXHJcblxyXG5cclxuICByZXR1cm4gZ2V0U2Vjb25kc0luVW5pdChzdGVwLnVuaXQgfHwgc3RlcC5mb3JtYXRBcykgfHwgMTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRTdGVwRGVub21pbmF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/getStepDenominator.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/getStepMinTime.js":
/*!**************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/getStepMinTime.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getStepMinTime; }\n/* harmony export */ });\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../round.js */ \"./node_modules/javascript-time-ago/modules/round.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\n\r\n\r\nfunction getStepMinTime(step, _ref) {\r\n  var prevStep = _ref.prevStep,\r\n      timestamp = _ref.timestamp,\r\n      now = _ref.now,\r\n      future = _ref.future,\r\n      round = _ref.round;\r\n  var minTime; // \"threshold_for_xxx\" is a legacy property.\r\n\r\n  if (prevStep) {\r\n    if (prevStep.id || prevStep.unit) {\r\n      minTime = step[\"threshold_for_\".concat(prevStep.id || prevStep.unit)];\r\n    }\r\n  }\r\n\r\n  if (minTime === undefined) {\r\n    // \"threshold\" is a legacy property.\r\n    if (step.threshold !== undefined) {\r\n      // \"threshold\" is a legacy name for \"minTime\".\r\n      minTime = step.threshold; // \"threshold\" function is deprecated.\r\n\r\n      if (typeof minTime === 'function') {\r\n        minTime = minTime(now, future);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (minTime === undefined) {\r\n    minTime = step.minTime;\r\n  } // A deprecated way of specifying a different threshold\r\n  // depending on the previous step's unit.\r\n\r\n\r\n  if (_typeof(minTime) === 'object') {\r\n    if (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n      minTime = minTime[prevStep.id];\r\n    } else {\r\n      minTime = minTime[\"default\"];\r\n    }\r\n  }\r\n\r\n  if (typeof minTime === 'function') {\r\n    minTime = minTime(timestamp, {\r\n      future: future,\r\n      getMinTimeForUnit: function getMinTimeForUnit(toUnit, fromUnit) {\r\n        return _getMinTimeForUnit(toUnit, fromUnit || prevStep && prevStep.formatAs, {\r\n          round: round\r\n        });\r\n      }\r\n    });\r\n  } // Evaluate the `test()` function.\r\n  // `test()` function is deprecated.\r\n\r\n\r\n  if (minTime === undefined) {\r\n    if (step.test) {\r\n      if (step.test(timestamp, {\r\n        now: now,\r\n        future: future\r\n      })) {\r\n        // `0` threshold always passes.\r\n        minTime = 0;\r\n      } else {\r\n        // `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n        minTime = 9007199254740991; // Number.MAX_SAFE_INTEGER\r\n      }\r\n    }\r\n  }\r\n\r\n  if (minTime === undefined) {\r\n    if (prevStep) {\r\n      if (step.formatAs && prevStep.formatAs) {\r\n        minTime = _getMinTimeForUnit(step.formatAs, prevStep.formatAs, {\r\n          round: round\r\n        });\r\n      }\r\n    } else {\r\n      // The first step's `minTime` is `0` by default.\r\n      minTime = 0;\r\n    }\r\n  } // Warn if no `minTime` was defined or could be deduced.\r\n\r\n\r\n  if (minTime === undefined) {\r\n    console.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2));\r\n  }\r\n\r\n  return minTime;\r\n}\r\n\r\nfunction _getMinTimeForUnit(toUnit, fromUnit, _ref2) {\r\n  var round = _ref2.round;\r\n  var toUnitAmount = (0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(toUnit); // if (!fromUnit) {\r\n  // \treturn toUnitAmount;\r\n  // }\r\n  // if (!fromUnit) {\r\n  // \tfromUnit = getPreviousUnitFor(toUnit)\r\n  // }\r\n\r\n  var fromUnitAmount;\r\n\r\n  if (fromUnit === 'now') {\r\n    fromUnitAmount = (0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(toUnit);\r\n  } else {\r\n    fromUnitAmount = (0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(fromUnit);\r\n  }\r\n\r\n  if (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n    return toUnitAmount - fromUnitAmount * (1 - (0,_round_js__WEBPACK_IMPORTED_MODULE_1__.getDiffRatioToNextRoundedNumber)(round));\r\n  }\r\n}\r\n//# sourceMappingURL=getStepMinTime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFN0ZXBNaW5UaW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHdCQUF3QiwyQkFBMkIsc0dBQXNHLHFCQUFxQixtQkFBbUIsOEhBQThIO0FBQy9UO0FBQzhDO0FBQ2dCO0FBQy9DO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMkRBQWdCLFVBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJEQUFnQjtBQUNyQyxJQUFJO0FBQ0oscUJBQXFCLDJEQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsMEVBQStCO0FBQy9FO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFN0ZXBNaW5UaW1lLmpzPzZmZWYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH0sIF90eXBlb2Yob2JqKTsgfVxyXG5cclxuaW1wb3J0IHsgZ2V0U2Vjb25kc0luVW5pdCB9IGZyb20gJy4vdW5pdHMuanMnO1xyXG5pbXBvcnQgeyBnZXREaWZmUmF0aW9Ub05leHRSb3VuZGVkTnVtYmVyIH0gZnJvbSAnLi4vcm91bmQuanMnO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTdGVwTWluVGltZShzdGVwLCBfcmVmKSB7XHJcbiAgdmFyIHByZXZTdGVwID0gX3JlZi5wcmV2U3RlcCxcclxuICAgICAgdGltZXN0YW1wID0gX3JlZi50aW1lc3RhbXAsXHJcbiAgICAgIG5vdyA9IF9yZWYubm93LFxyXG4gICAgICBmdXR1cmUgPSBfcmVmLmZ1dHVyZSxcclxuICAgICAgcm91bmQgPSBfcmVmLnJvdW5kO1xyXG4gIHZhciBtaW5UaW1lOyAvLyBcInRocmVzaG9sZF9mb3JfeHh4XCIgaXMgYSBsZWdhY3kgcHJvcGVydHkuXHJcblxyXG4gIGlmIChwcmV2U3RlcCkge1xyXG4gICAgaWYgKHByZXZTdGVwLmlkIHx8IHByZXZTdGVwLnVuaXQpIHtcclxuICAgICAgbWluVGltZSA9IHN0ZXBbXCJ0aHJlc2hvbGRfZm9yX1wiLmNvbmNhdChwcmV2U3RlcC5pZCB8fCBwcmV2U3RlcC51bml0KV07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAobWluVGltZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAvLyBcInRocmVzaG9sZFwiIGlzIGEgbGVnYWN5IHByb3BlcnR5LlxyXG4gICAgaWYgKHN0ZXAudGhyZXNob2xkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgLy8gXCJ0aHJlc2hvbGRcIiBpcyBhIGxlZ2FjeSBuYW1lIGZvciBcIm1pblRpbWVcIi5cclxuICAgICAgbWluVGltZSA9IHN0ZXAudGhyZXNob2xkOyAvLyBcInRocmVzaG9sZFwiIGZ1bmN0aW9uIGlzIGRlcHJlY2F0ZWQuXHJcblxyXG4gICAgICBpZiAodHlwZW9mIG1pblRpbWUgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICBtaW5UaW1lID0gbWluVGltZShub3csIGZ1dHVyZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChtaW5UaW1lID09PSB1bmRlZmluZWQpIHtcclxuICAgIG1pblRpbWUgPSBzdGVwLm1pblRpbWU7XHJcbiAgfSAvLyBBIGRlcHJlY2F0ZWQgd2F5IG9mIHNwZWNpZnlpbmcgYSBkaWZmZXJlbnQgdGhyZXNob2xkXHJcbiAgLy8gZGVwZW5kaW5nIG9uIHRoZSBwcmV2aW91cyBzdGVwJ3MgdW5pdC5cclxuXHJcblxyXG4gIGlmIChfdHlwZW9mKG1pblRpbWUpID09PSAnb2JqZWN0Jykge1xyXG4gICAgaWYgKHByZXZTdGVwICYmIHByZXZTdGVwLmlkICYmIG1pblRpbWVbcHJldlN0ZXAuaWRdICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgbWluVGltZSA9IG1pblRpbWVbcHJldlN0ZXAuaWRdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbWluVGltZSA9IG1pblRpbWVbXCJkZWZhdWx0XCJdO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBtaW5UaW1lID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICBtaW5UaW1lID0gbWluVGltZSh0aW1lc3RhbXAsIHtcclxuICAgICAgZnV0dXJlOiBmdXR1cmUsXHJcbiAgICAgIGdldE1pblRpbWVGb3JVbml0OiBmdW5jdGlvbiBnZXRNaW5UaW1lRm9yVW5pdCh0b1VuaXQsIGZyb21Vbml0KSB7XHJcbiAgICAgICAgcmV0dXJuIF9nZXRNaW5UaW1lRm9yVW5pdCh0b1VuaXQsIGZyb21Vbml0IHx8IHByZXZTdGVwICYmIHByZXZTdGVwLmZvcm1hdEFzLCB7XHJcbiAgICAgICAgICByb3VuZDogcm91bmRcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSAvLyBFdmFsdWF0ZSB0aGUgYHRlc3QoKWAgZnVuY3Rpb24uXHJcbiAgLy8gYHRlc3QoKWAgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZC5cclxuXHJcblxyXG4gIGlmIChtaW5UaW1lID09PSB1bmRlZmluZWQpIHtcclxuICAgIGlmIChzdGVwLnRlc3QpIHtcclxuICAgICAgaWYgKHN0ZXAudGVzdCh0aW1lc3RhbXAsIHtcclxuICAgICAgICBub3c6IG5vdyxcclxuICAgICAgICBmdXR1cmU6IGZ1dHVyZVxyXG4gICAgICB9KSkge1xyXG4gICAgICAgIC8vIGAwYCB0aHJlc2hvbGQgYWx3YXlzIHBhc3Nlcy5cclxuICAgICAgICBtaW5UaW1lID0gMDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBgTUFYX1NBRkVfSU5URUdFUmAgdGhyZXNob2xkIHdvbid0IGV2ZXIgcGFzcyBpbiByZWFsIGxpZmUuXHJcbiAgICAgICAgbWluVGltZSA9IDkwMDcxOTkyNTQ3NDA5OTE7IC8vIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChtaW5UaW1lID09PSB1bmRlZmluZWQpIHtcclxuICAgIGlmIChwcmV2U3RlcCkge1xyXG4gICAgICBpZiAoc3RlcC5mb3JtYXRBcyAmJiBwcmV2U3RlcC5mb3JtYXRBcykge1xyXG4gICAgICAgIG1pblRpbWUgPSBfZ2V0TWluVGltZUZvclVuaXQoc3RlcC5mb3JtYXRBcywgcHJldlN0ZXAuZm9ybWF0QXMsIHtcclxuICAgICAgICAgIHJvdW5kOiByb3VuZFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBUaGUgZmlyc3Qgc3RlcCdzIGBtaW5UaW1lYCBpcyBgMGAgYnkgZGVmYXVsdC5cclxuICAgICAgbWluVGltZSA9IDA7XHJcbiAgICB9XHJcbiAgfSAvLyBXYXJuIGlmIG5vIGBtaW5UaW1lYCB3YXMgZGVmaW5lZCBvciBjb3VsZCBiZSBkZWR1Y2VkLlxyXG5cclxuXHJcbiAgaWYgKG1pblRpbWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgY29uc29sZS53YXJuKCdbamF2YXNjcmlwdC10aW1lLWFnb10gQSBzdGVwIHNob3VsZCBzcGVjaWZ5IGBtaW5UaW1lYDpcXG4nICsgSlNPTi5zdHJpbmdpZnkoc3RlcCwgbnVsbCwgMikpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1pblRpbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9nZXRNaW5UaW1lRm9yVW5pdCh0b1VuaXQsIGZyb21Vbml0LCBfcmVmMikge1xyXG4gIHZhciByb3VuZCA9IF9yZWYyLnJvdW5kO1xyXG4gIHZhciB0b1VuaXRBbW91bnQgPSBnZXRTZWNvbmRzSW5Vbml0KHRvVW5pdCk7IC8vIGlmICghZnJvbVVuaXQpIHtcclxuICAvLyBcdHJldHVybiB0b1VuaXRBbW91bnQ7XHJcbiAgLy8gfVxyXG4gIC8vIGlmICghZnJvbVVuaXQpIHtcclxuICAvLyBcdGZyb21Vbml0ID0gZ2V0UHJldmlvdXNVbml0Rm9yKHRvVW5pdClcclxuICAvLyB9XHJcblxyXG4gIHZhciBmcm9tVW5pdEFtb3VudDtcclxuXHJcbiAgaWYgKGZyb21Vbml0ID09PSAnbm93Jykge1xyXG4gICAgZnJvbVVuaXRBbW91bnQgPSBnZXRTZWNvbmRzSW5Vbml0KHRvVW5pdCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGZyb21Vbml0QW1vdW50ID0gZ2V0U2Vjb25kc0luVW5pdChmcm9tVW5pdCk7XHJcbiAgfVxyXG5cclxuICBpZiAodG9Vbml0QW1vdW50ICE9PSB1bmRlZmluZWQgJiYgZnJvbVVuaXRBbW91bnQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuIHRvVW5pdEFtb3VudCAtIGZyb21Vbml0QW1vdW50ICogKDEgLSBnZXREaWZmUmF0aW9Ub05leHRSb3VuZGVkTnVtYmVyKHJvdW5kKSk7XHJcbiAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFN0ZXBNaW5UaW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/getStepMinTime.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdate.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdate.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"INFINITY\": function() { return /* binding */ INFINITY; },\n/* harmony export */   \"default\": function() { return /* binding */ getTimeToNextUpdate; },\n/* harmony export */   \"getStepChangesAt\": function() { return /* binding */ getStepChangesAt; },\n/* harmony export */   \"getTimeToStepChange\": function() { return /* binding */ getTimeToStepChange; }\n/* harmony export */ });\n/* harmony import */ var _getTimeToNextUpdateForUnit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getTimeToNextUpdateForUnit.js */ \"./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdateForUnit.js\");\n/* harmony import */ var _getStepMinTime_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getStepMinTime.js */ \"./node_modules/javascript-time-ago/modules/steps/getStepMinTime.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../round.js */ \"./node_modules/javascript-time-ago/modules/round.js\");\n\r\n\r\n // A thousand years is practically a metaphor for \"infinity\".\r\n\r\nvar YEAR = 365 * 24 * 60 * 60 * 1000;\r\nvar INFINITY = 1000 * YEAR;\r\n/**\r\n * Gets the time to next update for a date and a step.\r\n * @param  {number} date — The date passed to `.format()`, converted to a timestamp.\r\n * @param  {object} step\r\n * @param  {object} [options.previousStep]\r\n * @param  {object} [options.nextStep]\r\n * @param  {number} options.now\r\n * @param  {boolean} options.future\r\n * @param  {string} [options.round] - (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\n\r\nfunction getTimeToNextUpdate(date, step, _ref) {\r\n  var prevStep = _ref.prevStep,\r\n      nextStep = _ref.nextStep,\r\n      now = _ref.now,\r\n      future = _ref.future,\r\n      round = _ref.round;\r\n  var timestamp = date.getTime ? date.getTime() : date;\r\n\r\n  var getTimeToNextUpdateForUnit = function getTimeToNextUpdateForUnit(unit) {\r\n    return (0,_getTimeToNextUpdateForUnit_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(unit, timestamp, {\r\n      now: now,\r\n      round: round\r\n    });\r\n  }; // For future dates, steps move from the last one to the first one,\r\n  // while for past dates, steps move from the first one to the last one,\r\n  // due to the fact that time flows in one direction,\r\n  // and future dates' interval naturally becomes smaller\r\n  // while past dates' interval naturally grows larger.\r\n  //\r\n  // For future dates, it's the transition\r\n  // from the current step to the previous step,\r\n  // therefore check the `minTime` of the current step.\r\n  //\r\n  // For past dates, it's the transition\r\n  // from the current step to the next step,\r\n  // therefore check the `minTime` of the next step.\r\n  //\r\n\r\n\r\n  var timeToStepChange = getTimeToStepChange(future ? step : nextStep, timestamp, {\r\n    future: future,\r\n    now: now,\r\n    round: round,\r\n    prevStep: future ? prevStep : step // isFirstStep: future && isFirstStep\r\n\r\n  });\r\n\r\n  if (timeToStepChange === undefined) {\r\n    // Can't reliably determine \"time to next update\"\r\n    // if not all of the steps provide `minTime`.\r\n    return;\r\n  }\r\n\r\n  var timeToNextUpdate;\r\n\r\n  if (step) {\r\n    if (step.getTimeToNextUpdate) {\r\n      timeToNextUpdate = step.getTimeToNextUpdate(timestamp, {\r\n        getTimeToNextUpdateForUnit: getTimeToNextUpdateForUnit,\r\n        getRoundFunction: _round_js__WEBPACK_IMPORTED_MODULE_1__.getRoundFunction,\r\n        now: now,\r\n        future: future,\r\n        round: round\r\n      });\r\n    }\r\n\r\n    if (timeToNextUpdate === undefined) {\r\n      // \"unit\" is now called \"formatAs\".\r\n      var unit = step.unit || step.formatAs;\r\n\r\n      if (unit) {\r\n        // For some units, like \"now\", there's no defined amount of seconds in them.\r\n        // In such cases, `getTimeToNextUpdateForUnit()` returns `undefined`,\r\n        // and the next step's `minTime` could be used to calculate the update interval:\r\n        // it will just assume that the label never changes for this step.\r\n        timeToNextUpdate = getTimeToNextUpdateForUnit(unit);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (timeToNextUpdate === undefined) {\r\n    return timeToStepChange;\r\n  }\r\n\r\n  return Math.min(timeToNextUpdate, timeToStepChange);\r\n}\r\nfunction getStepChangesAt(currentOrNextStep, timestamp, _ref2) {\r\n  var now = _ref2.now,\r\n      future = _ref2.future,\r\n      round = _ref2.round,\r\n      prevStep = _ref2.prevStep;\r\n  // The first step's `minTime` is `0` by default.\r\n  // It doesn't \"change\" steps at zero point\r\n  // but it does change the wording when switching\r\n  // from \"future\" to \"past\": \"in ...\" -> \"... ago\".\r\n  // Therefore, the label should be updated at zero-point too.\r\n  var minTime = (0,_getStepMinTime_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentOrNextStep, {\r\n    timestamp: timestamp,\r\n    now: now,\r\n    future: future,\r\n    round: round,\r\n    prevStep: prevStep\r\n  });\r\n\r\n  if (minTime === undefined) {\r\n    return;\r\n  }\r\n\r\n  if (future) {\r\n    // The step changes to the previous step\r\n    // as soon as `timestamp - now` becomes\r\n    // less than the `minTime` of the current step:\r\n    // `timestamp - now === minTime - 1`\r\n    // => `now === timestamp - minTime + 1`.\r\n    return timestamp - minTime * 1000 + 1;\r\n  } else {\r\n    // The step changes to the next step\r\n    // as soon as `now - timestamp` becomes\r\n    // equal to `minTime` of the next step:\r\n    // `now - timestamp === minTime`\r\n    // => `now === timestamp + minTime`.\r\n    // This is a special case when double-update could be skipped.\r\n    if (minTime === 0 && timestamp === now) {\r\n      return INFINITY;\r\n    }\r\n\r\n    return timestamp + minTime * 1000;\r\n  }\r\n}\r\nfunction getTimeToStepChange(step, timestamp, _ref3) {\r\n  var now = _ref3.now,\r\n      future = _ref3.future,\r\n      round = _ref3.round,\r\n      prevStep = _ref3.prevStep;\r\n\r\n  if (step) {\r\n    var stepChangesAt = getStepChangesAt(step, timestamp, {\r\n      now: now,\r\n      future: future,\r\n      round: round,\r\n      prevStep: prevStep\r\n    });\r\n\r\n    if (stepChangesAt === undefined) {\r\n      return;\r\n    }\r\n\r\n    return stepChangesAt - now;\r\n  } else {\r\n    if (future) {\r\n      // No step.\r\n      // Update right after zero point, when it changes from \"future\" to \"past\".\r\n      return timestamp - now + 1;\r\n    } else {\r\n      // The last step doesn't ever change when `date` is in the past.\r\n      return INFINITY;\r\n    }\r\n  }\r\n}\r\n//# sourceMappingURL=getTimeToNextUpdate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdate.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdateForUnit.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdateForUnit.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getTimeToNextUpdateForUnit; }\n/* harmony export */ });\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../round.js */ \"./node_modules/javascript-time-ago/modules/round.js\");\n\r\n\r\n/**\r\n * Gets the time to next update for a step with a time unit defined.\r\n * @param  {string} unit\r\n * @param  {number} date — The date passed to `.format()`, converted to a timestamp.\r\n * @param  {number} options.now\r\n * @param  {string} [options.round] — (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\n\r\nfunction getTimeToNextUpdateForUnit(unit, timestamp, _ref) {\r\n  var now = _ref.now,\r\n      round = _ref.round;\r\n\r\n  // For some units, like \"now\", there's no defined amount of seconds in them.\r\n  if (!(0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(unit)) {\r\n    // If there's no amount of seconds defined for this unit\r\n    // then the update interval can't be determined reliably.\r\n    return;\r\n  }\r\n\r\n  var unitDenominator = (0,_units_js__WEBPACK_IMPORTED_MODULE_0__.getSecondsInUnit)(unit) * 1000;\r\n  var future = timestamp > now;\r\n  var preciseAmount = Math.abs(timestamp - now);\r\n  var roundedAmount = (0,_round_js__WEBPACK_IMPORTED_MODULE_1__.getRoundFunction)(round)(preciseAmount / unitDenominator) * unitDenominator;\r\n\r\n  if (future) {\r\n    if (roundedAmount > 0) {\r\n      // Amount decreases with time.\r\n      return preciseAmount - roundedAmount + getDiffToPreviousRoundedNumber(round, unitDenominator);\r\n    } else {\r\n      // Refresh right after the zero point,\r\n      // when \"future\" changes to \"past\".\r\n      return preciseAmount - roundedAmount + 1;\r\n    }\r\n  } // Amount increases with time.\r\n\r\n\r\n  return -(preciseAmount - roundedAmount) + getDiffToNextRoundedNumber(round, unitDenominator);\r\n}\r\n\r\nfunction getDiffToNextRoundedNumber(round, unitDenominator) {\r\n  return (0,_round_js__WEBPACK_IMPORTED_MODULE_1__.getDiffRatioToNextRoundedNumber)(round) * unitDenominator;\r\n}\r\n\r\nfunction getDiffToPreviousRoundedNumber(round, unitDenominator) {\r\n  return (1 - (0,_round_js__WEBPACK_IMPORTED_MODULE_1__.getDiffRatioToNextRoundedNumber)(round)) * unitDenominator + 1;\r\n}\r\n//# sourceMappingURL=getTimeToNextUpdateForUnit.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFRpbWVUb05leHRVcGRhdGVGb3JVbml0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUNrQztBQUNoRjtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sMkRBQWdCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQWdCO0FBQ3hDO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywwRUFBK0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsY0FBYywwRUFBK0I7QUFDN0M7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2dldFRpbWVUb05leHRVcGRhdGVGb3JVbml0LmpzPzJlZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2Vjb25kc0luVW5pdCB9IGZyb20gJy4vdW5pdHMuanMnO1xyXG5pbXBvcnQgeyBnZXRSb3VuZEZ1bmN0aW9uLCBnZXREaWZmUmF0aW9Ub05leHRSb3VuZGVkTnVtYmVyIH0gZnJvbSAnLi4vcm91bmQuanMnO1xyXG4vKipcclxuICogR2V0cyB0aGUgdGltZSB0byBuZXh0IHVwZGF0ZSBmb3IgYSBzdGVwIHdpdGggYSB0aW1lIHVuaXQgZGVmaW5lZC5cclxuICogQHBhcmFtICB7c3RyaW5nfSB1bml0XHJcbiAqIEBwYXJhbSAge251bWJlcn0gZGF0ZSDigJQgVGhlIGRhdGUgcGFzc2VkIHRvIGAuZm9ybWF0KClgLCBjb252ZXJ0ZWQgdG8gYSB0aW1lc3RhbXAuXHJcbiAqIEBwYXJhbSAge251bWJlcn0gb3B0aW9ucy5ub3dcclxuICogQHBhcmFtICB7c3RyaW5nfSBbb3B0aW9ucy5yb3VuZF0g4oCUICh1bmRvY3VtZW50ZWQpIFJvdW5kaW5nIG1lY2hhbmlzbS5cclxuICogQHJldHVybiB7bnVtYmVyfSBbdGltZVRvTmV4dFVwZGF0ZV1cclxuICovXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUaW1lVG9OZXh0VXBkYXRlRm9yVW5pdCh1bml0LCB0aW1lc3RhbXAsIF9yZWYpIHtcclxuICB2YXIgbm93ID0gX3JlZi5ub3csXHJcbiAgICAgIHJvdW5kID0gX3JlZi5yb3VuZDtcclxuXHJcbiAgLy8gRm9yIHNvbWUgdW5pdHMsIGxpa2UgXCJub3dcIiwgdGhlcmUncyBubyBkZWZpbmVkIGFtb3VudCBvZiBzZWNvbmRzIGluIHRoZW0uXHJcbiAgaWYgKCFnZXRTZWNvbmRzSW5Vbml0KHVuaXQpKSB7XHJcbiAgICAvLyBJZiB0aGVyZSdzIG5vIGFtb3VudCBvZiBzZWNvbmRzIGRlZmluZWQgZm9yIHRoaXMgdW5pdFxyXG4gICAgLy8gdGhlbiB0aGUgdXBkYXRlIGludGVydmFsIGNhbid0IGJlIGRldGVybWluZWQgcmVsaWFibHkuXHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICB2YXIgdW5pdERlbm9taW5hdG9yID0gZ2V0U2Vjb25kc0luVW5pdCh1bml0KSAqIDEwMDA7XHJcbiAgdmFyIGZ1dHVyZSA9IHRpbWVzdGFtcCA+IG5vdztcclxuICB2YXIgcHJlY2lzZUFtb3VudCA9IE1hdGguYWJzKHRpbWVzdGFtcCAtIG5vdyk7XHJcbiAgdmFyIHJvdW5kZWRBbW91bnQgPSBnZXRSb3VuZEZ1bmN0aW9uKHJvdW5kKShwcmVjaXNlQW1vdW50IC8gdW5pdERlbm9taW5hdG9yKSAqIHVuaXREZW5vbWluYXRvcjtcclxuXHJcbiAgaWYgKGZ1dHVyZSkge1xyXG4gICAgaWYgKHJvdW5kZWRBbW91bnQgPiAwKSB7XHJcbiAgICAgIC8vIEFtb3VudCBkZWNyZWFzZXMgd2l0aCB0aW1lLlxyXG4gICAgICByZXR1cm4gcHJlY2lzZUFtb3VudCAtIHJvdW5kZWRBbW91bnQgKyBnZXREaWZmVG9QcmV2aW91c1JvdW5kZWROdW1iZXIocm91bmQsIHVuaXREZW5vbWluYXRvcik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBSZWZyZXNoIHJpZ2h0IGFmdGVyIHRoZSB6ZXJvIHBvaW50LFxyXG4gICAgICAvLyB3aGVuIFwiZnV0dXJlXCIgY2hhbmdlcyB0byBcInBhc3RcIi5cclxuICAgICAgcmV0dXJuIHByZWNpc2VBbW91bnQgLSByb3VuZGVkQW1vdW50ICsgMTtcclxuICAgIH1cclxuICB9IC8vIEFtb3VudCBpbmNyZWFzZXMgd2l0aCB0aW1lLlxyXG5cclxuXHJcbiAgcmV0dXJuIC0ocHJlY2lzZUFtb3VudCAtIHJvdW5kZWRBbW91bnQpICsgZ2V0RGlmZlRvTmV4dFJvdW5kZWROdW1iZXIocm91bmQsIHVuaXREZW5vbWluYXRvcik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldERpZmZUb05leHRSb3VuZGVkTnVtYmVyKHJvdW5kLCB1bml0RGVub21pbmF0b3IpIHtcclxuICByZXR1cm4gZ2V0RGlmZlJhdGlvVG9OZXh0Um91bmRlZE51bWJlcihyb3VuZCkgKiB1bml0RGVub21pbmF0b3I7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldERpZmZUb1ByZXZpb3VzUm91bmRlZE51bWJlcihyb3VuZCwgdW5pdERlbm9taW5hdG9yKSB7XHJcbiAgcmV0dXJuICgxIC0gZ2V0RGlmZlJhdGlvVG9OZXh0Um91bmRlZE51bWJlcihyb3VuZCkpICogdW5pdERlbm9taW5hdG9yICsgMTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRUaW1lVG9OZXh0VXBkYXRlRm9yVW5pdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/getTimeToNextUpdateForUnit.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/helpers.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDate\": function() { return /* binding */ getDate; }\n/* harmony export */ });\n// Looks like this one's deprecated.\r\n// /**\r\n//  * Returns a step corresponding to the unit.\r\n//  * @param  {Object[]} steps\r\n//  * @param  {string} unit\r\n//  * @return {?Object}\r\n//  */\r\n// export function getStepForUnit(steps, unit) {\r\n// \tfor (const step of steps) {\r\n// \t\tif (step.unit === unit) {\r\n// \t\t\treturn step\r\n// \t\t}\r\n// \t}\r\n// }\r\n// Looks like this one won't be used in the next major version.\r\n\r\n/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nfunction getDate(value) {\r\n  return value instanceof Date ? value : new Date(value);\r\n}\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2hlbHBlcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsVUFBVTtBQUN6QixlQUFlLFFBQVE7QUFDdkIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixZQUFZO0FBQ1o7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2hlbHBlcnMuanM/NWYyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMb29rcyBsaWtlIHRoaXMgb25lJ3MgZGVwcmVjYXRlZC5cclxuLy8gLyoqXHJcbi8vICAqIFJldHVybnMgYSBzdGVwIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHVuaXQuXHJcbi8vICAqIEBwYXJhbSAge09iamVjdFtdfSBzdGVwc1xyXG4vLyAgKiBAcGFyYW0gIHtzdHJpbmd9IHVuaXRcclxuLy8gICogQHJldHVybiB7P09iamVjdH1cclxuLy8gICovXHJcbi8vIGV4cG9ydCBmdW5jdGlvbiBnZXRTdGVwRm9yVW5pdChzdGVwcywgdW5pdCkge1xyXG4vLyBcdGZvciAoY29uc3Qgc3RlcCBvZiBzdGVwcykge1xyXG4vLyBcdFx0aWYgKHN0ZXAudW5pdCA9PT0gdW5pdCkge1xyXG4vLyBcdFx0XHRyZXR1cm4gc3RlcFxyXG4vLyBcdFx0fVxyXG4vLyBcdH1cclxuLy8gfVxyXG4vLyBMb29rcyBsaWtlIHRoaXMgb25lIHdvbid0IGJlIHVzZWQgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvbi5cclxuXHJcbi8qKlxyXG4gKiBDb252ZXJ0cyB2YWx1ZSB0byBhIGBEYXRlYFxyXG4gKiBAcGFyYW0geyhudW1iZXJ8RGF0ZSl9IHZhbHVlXHJcbiAqIEByZXR1cm4ge0RhdGV9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGF0ZSh2YWx1ZSkge1xyXG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgPyB2YWx1ZSA6IG5ldyBEYXRlKHZhbHVlKTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/helpers.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"approximate\": function() { return /* reexport safe */ _approximate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"canonical\": function() { return /* reexport safe */ _round_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"convenient\": function() { return /* reexport safe */ _approximate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"day\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.day; },\n/* harmony export */   \"getDate\": function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_3__.getDate; },\n/* harmony export */   \"hour\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.hour; },\n/* harmony export */   \"minute\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.minute; },\n/* harmony export */   \"month\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.month; },\n/* harmony export */   \"round\": function() { return /* reexport safe */ _round_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"week\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.week; },\n/* harmony export */   \"year\": function() { return /* reexport safe */ _units_js__WEBPACK_IMPORTED_MODULE_2__.year; }\n/* harmony export */ });\n/* harmony import */ var _approximate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./approximate.js */ \"./node_modules/javascript-time-ago/modules/steps/approximate.js\");\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./round.js */ \"./node_modules/javascript-time-ago/modules/steps/round.js\");\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/javascript-time-ago/modules/steps/helpers.js\");\n// \"convenient\" is a legacy name of \"approximate\" steps.\r\n // \"canonical\" is a legacy name of \"round\" steps.\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2lGLENBQUM7QUFDbEY7QUFDb0U7QUFDRjtBQUMzQjtBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL2luZGV4LmpzP2UyMzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gXCJjb252ZW5pZW50XCIgaXMgYSBsZWdhY3kgbmFtZSBvZiBcImFwcHJveGltYXRlXCIgc3RlcHMuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYXBwcm94aW1hdGUsIGRlZmF1bHQgYXMgY29udmVuaWVudCB9IGZyb20gJy4vYXBwcm94aW1hdGUuanMnOyAvLyBcImNhbm9uaWNhbFwiIGlzIGEgbGVnYWN5IG5hbWUgb2YgXCJyb3VuZFwiIHN0ZXBzLlxyXG5cclxuZXhwb3J0IHsgZGVmYXVsdCBhcyByb3VuZCwgZGVmYXVsdCBhcyBjYW5vbmljYWwgfSBmcm9tICcuL3JvdW5kLmpzJztcclxuZXhwb3J0IHsgbWludXRlLCBob3VyLCBkYXksIHdlZWssIG1vbnRoLCB5ZWFyIH0gZnJvbSAnLi91bml0cy5qcyc7XHJcbmV4cG9ydCB7IGdldERhdGUgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/index.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/round.js":
/*!*****************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/round.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// …\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// …\r\n// 3 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\r\n  formatAs: 'now'\r\n}, {\r\n  formatAs: 'second'\r\n}, {\r\n  formatAs: 'minute'\r\n}, {\r\n  formatAs: 'hour'\r\n}, {\r\n  formatAs: 'day'\r\n}, {\r\n  formatAs: 'week'\r\n}, {\r\n  formatAs: 'month'\r\n}, {\r\n  formatAs: 'year'\r\n}]);\r\n//# sourceMappingURL=round.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL3JvdW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlO0FBQ2Y7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDLENBQUMsRUFBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3RlcHMvcm91bmQuanM/YWQ0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqdXN0IG5vd1xyXG4vLyAxIHNlY29uZCBhZ29cclxuLy8gMiBzZWNvbmRzIGFnb1xyXG4vLyDigKZcclxuLy8gNTkgc2Vjb25kcyBhZ29cclxuLy8gMSBtaW51dGUgYWdvXHJcbi8vIDIgbWludXRlcyBhZ29cclxuLy8g4oCmXHJcbi8vIDU5IG1pbnV0ZXMgYWdvXHJcbi8vIDEgaG91ciBhZ29cclxuLy8gMiBob3VycyBhZ29cclxuLy8g4oCmXHJcbi8vIDI0IGhvdXJzIGFnb1xyXG4vLyAxIGRheSBhZ29cclxuLy8gMiBkYXlzIGFnb1xyXG4vLyDigKZcclxuLy8gNiBkYXlzIGFnb1xyXG4vLyAxIHdlZWsgYWdvXHJcbi8vIDIgd2Vla3MgYWdvXHJcbi8vIOKAplxyXG4vLyAzIHdlZWtzIGFnb1xyXG4vLyAxIG1vbnRoIGFnb1xyXG4vLyAyIG1vbnRocyBhZ29cclxuLy8g4oCmXHJcbi8vIDExIG1vbnRocyBhZ29cclxuLy8gMSB5ZWFyIGFnb1xyXG4vLyAyIHllYXJzIGFnb1xyXG4vLyDigKZcclxuZXhwb3J0IGRlZmF1bHQgW3tcclxuICBmb3JtYXRBczogJ25vdydcclxufSwge1xyXG4gIGZvcm1hdEFzOiAnc2Vjb25kJ1xyXG59LCB7XHJcbiAgZm9ybWF0QXM6ICdtaW51dGUnXHJcbn0sIHtcclxuICBmb3JtYXRBczogJ2hvdXInXHJcbn0sIHtcclxuICBmb3JtYXRBczogJ2RheSdcclxufSwge1xyXG4gIGZvcm1hdEFzOiAnd2VlaydcclxufSwge1xyXG4gIGZvcm1hdEFzOiAnbW9udGgnXHJcbn0sIHtcclxuICBmb3JtYXRBczogJ3llYXInXHJcbn1dO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3VuZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/round.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/steps/units.js":
/*!*****************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/steps/units.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"day\": function() { return /* binding */ day; },\n/* harmony export */   \"getSecondsInUnit\": function() { return /* binding */ getSecondsInUnit; },\n/* harmony export */   \"hour\": function() { return /* binding */ hour; },\n/* harmony export */   \"minute\": function() { return /* binding */ minute; },\n/* harmony export */   \"month\": function() { return /* binding */ month; },\n/* harmony export */   \"week\": function() { return /* binding */ week; },\n/* harmony export */   \"year\": function() { return /* binding */ year; }\n/* harmony export */ });\nvar minute = 60; // in seconds\r\n\r\nvar hour = 60 * minute; // in seconds\r\n\r\nvar day = 24 * hour; // in seconds\r\n\r\nvar week = 7 * day; // in seconds\r\n// https://www.quora.com/What-is-the-average-number-of-days-in-a-month\r\n\r\nvar month = 30.44 * day; // in seconds\r\n// \"400 years have 146097 days (taking into account leap year rules)\"\r\n\r\nvar year = 146097 / 400 * day; // in seconds\r\n\r\nfunction getSecondsInUnit(unit) {\r\n  switch (unit) {\r\n    case 'second':\r\n      return 1;\r\n\r\n    case 'minute':\r\n      return minute;\r\n\r\n    case 'hour':\r\n      return hour;\r\n\r\n    case 'day':\r\n      return day;\r\n\r\n    case 'week':\r\n      return week;\r\n\r\n    case 'month':\r\n      return month;\r\n\r\n    case 'year':\r\n      return year;\r\n  }\r\n} // export function getPreviousUnitFor(unit) {\r\n// \tswitch (unit) {\r\n// \t\tcase 'second':\r\n// \t\t\treturn 'now'\r\n// \t\tcase 'minute':\r\n// \t\t\treturn 'second'\r\n// \t\tcase 'hour':\r\n// \t\t\treturn 'minute'\r\n// \t\tcase 'day':\r\n// \t\t\treturn 'hour'\r\n// \t\tcase 'week':\r\n// \t\t\treturn 'day'\r\n// \t\tcase 'month':\r\n// \t\t\treturn 'week'\r\n// \t\tcase 'year':\r\n// \t\t\treturn 'month'\r\n// \t}\r\n// }\r\n//# sourceMappingURL=units.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0ZXBzL3VuaXRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxpQkFBaUI7QUFDeEI7QUFDTyx3QkFBd0I7QUFDL0I7QUFDTyxxQkFBcUI7QUFDNUI7QUFDTyxvQkFBb0I7QUFDM0I7QUFDQTtBQUNPLHlCQUF5QjtBQUNoQztBQUNBO0FBQ08sK0JBQStCO0FBQ3RDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdGVwcy91bml0cy5qcz9kM2UyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgbWludXRlID0gNjA7IC8vIGluIHNlY29uZHNcclxuXHJcbmV4cG9ydCB2YXIgaG91ciA9IDYwICogbWludXRlOyAvLyBpbiBzZWNvbmRzXHJcblxyXG5leHBvcnQgdmFyIGRheSA9IDI0ICogaG91cjsgLy8gaW4gc2Vjb25kc1xyXG5cclxuZXhwb3J0IHZhciB3ZWVrID0gNyAqIGRheTsgLy8gaW4gc2Vjb25kc1xyXG4vLyBodHRwczovL3d3dy5xdW9yYS5jb20vV2hhdC1pcy10aGUtYXZlcmFnZS1udW1iZXItb2YtZGF5cy1pbi1hLW1vbnRoXHJcblxyXG5leHBvcnQgdmFyIG1vbnRoID0gMzAuNDQgKiBkYXk7IC8vIGluIHNlY29uZHNcclxuLy8gXCI0MDAgeWVhcnMgaGF2ZSAxNDYwOTcgZGF5cyAodGFraW5nIGludG8gYWNjb3VudCBsZWFwIHllYXIgcnVsZXMpXCJcclxuXHJcbmV4cG9ydCB2YXIgeWVhciA9IDE0NjA5NyAvIDQwMCAqIGRheTsgLy8gaW4gc2Vjb25kc1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFNlY29uZHNJblVuaXQodW5pdCkge1xyXG4gIHN3aXRjaCAodW5pdCkge1xyXG4gICAgY2FzZSAnc2Vjb25kJzpcclxuICAgICAgcmV0dXJuIDE7XHJcblxyXG4gICAgY2FzZSAnbWludXRlJzpcclxuICAgICAgcmV0dXJuIG1pbnV0ZTtcclxuXHJcbiAgICBjYXNlICdob3VyJzpcclxuICAgICAgcmV0dXJuIGhvdXI7XHJcblxyXG4gICAgY2FzZSAnZGF5JzpcclxuICAgICAgcmV0dXJuIGRheTtcclxuXHJcbiAgICBjYXNlICd3ZWVrJzpcclxuICAgICAgcmV0dXJuIHdlZWs7XHJcblxyXG4gICAgY2FzZSAnbW9udGgnOlxyXG4gICAgICByZXR1cm4gbW9udGg7XHJcblxyXG4gICAgY2FzZSAneWVhcic6XHJcbiAgICAgIHJldHVybiB5ZWFyO1xyXG4gIH1cclxufSAvLyBleHBvcnQgZnVuY3Rpb24gZ2V0UHJldmlvdXNVbml0Rm9yKHVuaXQpIHtcclxuLy8gXHRzd2l0Y2ggKHVuaXQpIHtcclxuLy8gXHRcdGNhc2UgJ3NlY29uZCc6XHJcbi8vIFx0XHRcdHJldHVybiAnbm93J1xyXG4vLyBcdFx0Y2FzZSAnbWludXRlJzpcclxuLy8gXHRcdFx0cmV0dXJuICdzZWNvbmQnXHJcbi8vIFx0XHRjYXNlICdob3VyJzpcclxuLy8gXHRcdFx0cmV0dXJuICdtaW51dGUnXHJcbi8vIFx0XHRjYXNlICdkYXknOlxyXG4vLyBcdFx0XHRyZXR1cm4gJ2hvdXInXHJcbi8vIFx0XHRjYXNlICd3ZWVrJzpcclxuLy8gXHRcdFx0cmV0dXJuICdkYXknXHJcbi8vIFx0XHRjYXNlICdtb250aCc6XHJcbi8vIFx0XHRcdHJldHVybiAnd2VlaydcclxuLy8gXHRcdGNhc2UgJ3llYXInOlxyXG4vLyBcdFx0XHRyZXR1cm4gJ21vbnRoJ1xyXG4vLyBcdH1cclxuLy8gfVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD11bml0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/steps/units.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/approximate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/approximate.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steps_approximate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../steps/approximate.js */ \"./node_modules/javascript-time-ago/modules/steps/approximate.js\");\n // \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  gradation: _steps_approximate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n  flavour: 'long',\r\n  units: ['now', 'minute', 'hour', 'day', 'week', 'month', 'year']\r\n});\r\n//# sourceMappingURL=approximate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL2FwcHJveGltYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQWtELENBQUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWU7QUFDZixhQUFhLDZEQUFXO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL2FwcHJveGltYXRlLmpzP2YxMDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcHJveGltYXRlIGZyb20gJy4uL3N0ZXBzL2FwcHJveGltYXRlLmpzJzsgLy8gXCJncmFkYXRpb25cIiBpcyBhIGxlZ2FjeSBuYW1lIGZvciBcInN0ZXBzXCIuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gVXNlIFwic3RlcHNcIiBuYW1lIGluc3RlYWQuXHJcbi8vIFwiZmxhdm91clwiIGlzIGEgbGVnYWN5IG5hbWUgZm9yIFwibGFiZWxzXCIuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gVXNlIFwibGFiZWxzXCIgbmFtZSBpbnN0ZWFkLlxyXG4vLyBcInVuaXRzXCIgaXMgYSBsZWdhY3kgcHJvcGVydHkuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gRGV2ZWxvcGVycyBzaG91bGRuJ3QgbmVlZCB0byB1c2UgaXQgaW4gdGhlaXIgY3VzdG9tIHN0eWxlcy5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBncmFkYXRpb246IGFwcHJveGltYXRlLFxyXG4gIGZsYXZvdXI6ICdsb25nJyxcclxuICB1bml0czogWydub3cnLCAnbWludXRlJywgJ2hvdXInLCAnZGF5JywgJ3dlZWsnLCAnbW9udGgnLCAneWVhciddXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcHJveGltYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/approximate.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/approximateTime.js":
/*!***************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/approximateTime.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steps_approximate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../steps/approximate.js */ \"./node_modules/javascript-time-ago/modules/steps/approximate.js\");\n // \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n// Similar to the default style but with \"ago\" omitted.\r\n//\r\n// just now\r\n// 5 minutes\r\n// 10 minutes\r\n// 15 minutes\r\n// 20 minutes\r\n// an hour\r\n// 2 hours\r\n// …\r\n// 20 hours\r\n// 1 day\r\n// 2 days\r\n// a week\r\n// 2 weeks\r\n// 3 weeks\r\n// a month\r\n// 2 months\r\n// 3 months\r\n// 4 months\r\n// a year\r\n// 2 years\r\n//\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  gradation: _steps_approximate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n  flavour: 'long-time',\r\n  units: ['now', 'minute', 'hour', 'day', 'week', 'month', 'year']\r\n});\r\n//# sourceMappingURL=approximateTime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL2FwcHJveGltYXRlVGltZS5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUFrRCxDQUFDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBZTtBQUNmLGFBQWEsNkRBQVc7QUFDeEI7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvYXBwcm94aW1hdGVUaW1lLmpzP2EzOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcHJveGltYXRlIGZyb20gJy4uL3N0ZXBzL2FwcHJveGltYXRlLmpzJzsgLy8gXCJncmFkYXRpb25cIiBpcyBhIGxlZ2FjeSBuYW1lIGZvciBcInN0ZXBzXCIuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gVXNlIFwic3RlcHNcIiBuYW1lIGluc3RlYWQuXHJcbi8vIFwiZmxhdm91clwiIGlzIGEgbGVnYWN5IG5hbWUgZm9yIFwibGFiZWxzXCIuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gVXNlIFwibGFiZWxzXCIgbmFtZSBpbnN0ZWFkLlxyXG4vLyBcInVuaXRzXCIgaXMgYSBsZWdhY3kgcHJvcGVydHkuXHJcbi8vIEl0J3MgaGVyZSBqdXN0IGZvciBsZWdhY3kgY29tcGF0aWJpbGl0eS5cclxuLy8gRGV2ZWxvcGVycyBzaG91bGRuJ3QgbmVlZCB0byB1c2UgaXQgaW4gdGhlaXIgY3VzdG9tIHN0eWxlcy5cclxuLy8gU2ltaWxhciB0byB0aGUgZGVmYXVsdCBzdHlsZSBidXQgd2l0aCBcImFnb1wiIG9taXR0ZWQuXHJcbi8vXHJcbi8vIGp1c3Qgbm93XHJcbi8vIDUgbWludXRlc1xyXG4vLyAxMCBtaW51dGVzXHJcbi8vIDE1IG1pbnV0ZXNcclxuLy8gMjAgbWludXRlc1xyXG4vLyBhbiBob3VyXHJcbi8vIDIgaG91cnNcclxuLy8g4oCmXHJcbi8vIDIwIGhvdXJzXHJcbi8vIDEgZGF5XHJcbi8vIDIgZGF5c1xyXG4vLyBhIHdlZWtcclxuLy8gMiB3ZWVrc1xyXG4vLyAzIHdlZWtzXHJcbi8vIGEgbW9udGhcclxuLy8gMiBtb250aHNcclxuLy8gMyBtb250aHNcclxuLy8gNCBtb250aHNcclxuLy8gYSB5ZWFyXHJcbi8vIDIgeWVhcnNcclxuLy9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBncmFkYXRpb246IGFwcHJveGltYXRlLFxyXG4gIGZsYXZvdXI6ICdsb25nLXRpbWUnLFxyXG4gIHVuaXRzOiBbJ25vdycsICdtaW51dGUnLCAnaG91cicsICdkYXknLCAnd2VlaycsICdtb250aCcsICd5ZWFyJ11cclxufTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwcm94aW1hdGVUaW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/approximateTime.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/getStyleByName.js":
/*!**************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/getStyleByName.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getStyleByName; }\n/* harmony export */ });\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round.js */ \"./node_modules/javascript-time-ago/modules/style/round.js\");\n/* harmony import */ var _roundMinute_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./roundMinute.js */ \"./node_modules/javascript-time-ago/modules/style/roundMinute.js\");\n/* harmony import */ var _approximate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./approximate.js */ \"./node_modules/javascript-time-ago/modules/style/approximate.js\");\n/* harmony import */ var _approximateTime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./approximateTime.js */ \"./node_modules/javascript-time-ago/modules/style/approximateTime.js\");\n/* harmony import */ var _twitter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./twitter.js */ \"./node_modules/javascript-time-ago/modules/style/twitter.js\");\n/* harmony import */ var _twitterNow_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./twitterNow.js */ \"./node_modules/javascript-time-ago/modules/style/twitterNow.js\");\n/* harmony import */ var _twitterMinute_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./twitterMinute.js */ \"./node_modules/javascript-time-ago/modules/style/twitterMinute.js\");\n/* harmony import */ var _twitterMinuteNow_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./twitterMinuteNow.js */ \"./node_modules/javascript-time-ago/modules/style/twitterMinuteNow.js\");\n/* harmony import */ var _twitterFirstMinute_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./twitterFirstMinute.js */ \"./node_modules/javascript-time-ago/modules/style/twitterFirstMinute.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mini.js */ \"./node_modules/javascript-time-ago/modules/style/mini.js\");\n/* harmony import */ var _miniNow_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./miniNow.js */ \"./node_modules/javascript-time-ago/modules/style/miniNow.js\");\n/* harmony import */ var _miniMinute_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./miniMinute.js */ \"./node_modules/javascript-time-ago/modules/style/miniMinute.js\");\n/* harmony import */ var _miniMinuteNow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./miniMinuteNow.js */ \"./node_modules/javascript-time-ago/modules/style/miniMinuteNow.js\");\n\r\n // `approximate` style is deprecated.\r\n\r\n // `approximateTime` style is deprecated.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getStyleByName(style) {\r\n  switch (style) {\r\n    // \"default\" style name is deprecated.\r\n    case 'default':\r\n    case 'round':\r\n      return _round_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n\r\n    case 'round-minute':\r\n      return _roundMinute_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n    case 'approximate':\r\n      return _approximate_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n    // \"time\" style name is deprecated.\r\n\r\n    case 'time':\r\n    case 'approximate-time':\r\n      return _approximateTime_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n\r\n    case 'mini':\r\n      return _mini_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n\r\n    case 'mini-now':\r\n      return _miniNow_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\r\n\r\n    case 'mini-minute':\r\n      return _miniMinute_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\n\r\n    case 'mini-minute-now':\r\n      return _miniMinuteNow_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\r\n\r\n    case 'twitter':\r\n      return _twitter_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\r\n\r\n    case 'twitter-now':\r\n      return _twitterNow_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\r\n\r\n    case 'twitter-minute':\r\n      return _twitterMinute_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\r\n\r\n    case 'twitter-minute-now':\r\n      return _twitterMinuteNow_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\r\n\r\n    case 'twitter-first-minute':\r\n      return _twitterFirstMinute_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\r\n\r\n    default:\r\n      // For historical reasons, the default style is \"approximate\".\r\n      return _approximate_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n  }\r\n}\r\n//# sourceMappingURL=getStyleByName.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL2dldFN0eWxlQnlOYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStCO0FBQ1ksQ0FBQztBQUM1QztBQUMyQyxDQUFDO0FBQzVDO0FBQ21EO0FBQ2hCO0FBQ007QUFDTTtBQUNNO0FBQ0k7QUFDNUI7QUFDTTtBQUNNO0FBQ007QUFDaEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaURBQUs7QUFDbEI7QUFDQTtBQUNBLGFBQWEsdURBQVc7QUFDeEI7QUFDQTtBQUNBLGFBQWEsdURBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJEQUFlO0FBQzVCO0FBQ0E7QUFDQSxhQUFhLGdEQUFJO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhLG1EQUFPO0FBQ3BCO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQSxhQUFhLHlEQUFhO0FBQzFCO0FBQ0E7QUFDQSxhQUFhLG1EQUFPO0FBQ3BCO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQSxhQUFhLDBEQUFhO0FBQzFCO0FBQ0E7QUFDQSxhQUFhLDZEQUFnQjtBQUM3QjtBQUNBO0FBQ0EsYUFBYSwrREFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1REFBVztBQUN4QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdHlsZS9nZXRTdHlsZUJ5TmFtZS5qcz8yYjE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByb3VuZCBmcm9tICcuL3JvdW5kLmpzJztcclxuaW1wb3J0IHJvdW5kTWludXRlIGZyb20gJy4vcm91bmRNaW51dGUuanMnOyAvLyBgYXBwcm94aW1hdGVgIHN0eWxlIGlzIGRlcHJlY2F0ZWQuXHJcblxyXG5pbXBvcnQgYXBwcm94aW1hdGUgZnJvbSAnLi9hcHByb3hpbWF0ZS5qcyc7IC8vIGBhcHByb3hpbWF0ZVRpbWVgIHN0eWxlIGlzIGRlcHJlY2F0ZWQuXHJcblxyXG5pbXBvcnQgYXBwcm94aW1hdGVUaW1lIGZyb20gJy4vYXBwcm94aW1hdGVUaW1lLmpzJztcclxuaW1wb3J0IHR3aXR0ZXIgZnJvbSAnLi90d2l0dGVyLmpzJztcclxuaW1wb3J0IHR3aXR0ZXJOb3cgZnJvbSAnLi90d2l0dGVyTm93LmpzJztcclxuaW1wb3J0IHR3aXR0ZXJNaW51dGUgZnJvbSAnLi90d2l0dGVyTWludXRlLmpzJztcclxuaW1wb3J0IHR3aXR0ZXJNaW51dGVOb3cgZnJvbSAnLi90d2l0dGVyTWludXRlTm93LmpzJztcclxuaW1wb3J0IHR3aXR0ZXJGaXJzdE1pbnV0ZSBmcm9tICcuL3R3aXR0ZXJGaXJzdE1pbnV0ZS5qcyc7XHJcbmltcG9ydCBtaW5pIGZyb20gJy4vbWluaS5qcyc7XHJcbmltcG9ydCBtaW5pTm93IGZyb20gJy4vbWluaU5vdy5qcyc7XHJcbmltcG9ydCBtaW5pTWludXRlIGZyb20gJy4vbWluaU1pbnV0ZS5qcyc7XHJcbmltcG9ydCBtaW5pTWludXRlTm93IGZyb20gJy4vbWluaU1pbnV0ZU5vdy5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFN0eWxlQnlOYW1lKHN0eWxlKSB7XHJcbiAgc3dpdGNoIChzdHlsZSkge1xyXG4gICAgLy8gXCJkZWZhdWx0XCIgc3R5bGUgbmFtZSBpcyBkZXByZWNhdGVkLlxyXG4gICAgY2FzZSAnZGVmYXVsdCc6XHJcbiAgICBjYXNlICdyb3VuZCc6XHJcbiAgICAgIHJldHVybiByb3VuZDtcclxuXHJcbiAgICBjYXNlICdyb3VuZC1taW51dGUnOlxyXG4gICAgICByZXR1cm4gcm91bmRNaW51dGU7XHJcblxyXG4gICAgY2FzZSAnYXBwcm94aW1hdGUnOlxyXG4gICAgICByZXR1cm4gYXBwcm94aW1hdGU7XHJcbiAgICAvLyBcInRpbWVcIiBzdHlsZSBuYW1lIGlzIGRlcHJlY2F0ZWQuXHJcblxyXG4gICAgY2FzZSAndGltZSc6XHJcbiAgICBjYXNlICdhcHByb3hpbWF0ZS10aW1lJzpcclxuICAgICAgcmV0dXJuIGFwcHJveGltYXRlVGltZTtcclxuXHJcbiAgICBjYXNlICdtaW5pJzpcclxuICAgICAgcmV0dXJuIG1pbmk7XHJcblxyXG4gICAgY2FzZSAnbWluaS1ub3cnOlxyXG4gICAgICByZXR1cm4gbWluaU5vdztcclxuXHJcbiAgICBjYXNlICdtaW5pLW1pbnV0ZSc6XHJcbiAgICAgIHJldHVybiBtaW5pTWludXRlO1xyXG5cclxuICAgIGNhc2UgJ21pbmktbWludXRlLW5vdyc6XHJcbiAgICAgIHJldHVybiBtaW5pTWludXRlTm93O1xyXG5cclxuICAgIGNhc2UgJ3R3aXR0ZXInOlxyXG4gICAgICByZXR1cm4gdHdpdHRlcjtcclxuXHJcbiAgICBjYXNlICd0d2l0dGVyLW5vdyc6XHJcbiAgICAgIHJldHVybiB0d2l0dGVyTm93O1xyXG5cclxuICAgIGNhc2UgJ3R3aXR0ZXItbWludXRlJzpcclxuICAgICAgcmV0dXJuIHR3aXR0ZXJNaW51dGU7XHJcblxyXG4gICAgY2FzZSAndHdpdHRlci1taW51dGUtbm93JzpcclxuICAgICAgcmV0dXJuIHR3aXR0ZXJNaW51dGVOb3c7XHJcblxyXG4gICAgY2FzZSAndHdpdHRlci1maXJzdC1taW51dGUnOlxyXG4gICAgICByZXR1cm4gdHdpdHRlckZpcnN0TWludXRlO1xyXG5cclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIC8vIEZvciBoaXN0b3JpY2FsIHJlYXNvbnMsIHRoZSBkZWZhdWx0IHN0eWxlIGlzIFwiYXBwcm94aW1hdGVcIi5cclxuICAgICAgcmV0dXJuIGFwcHJveGltYXRlO1xyXG4gIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRTdHlsZUJ5TmFtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/getStyleByName.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/mini.js":
/*!****************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/mini.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  steps: [{\r\n    formatAs: 'second'\r\n  }, {\r\n    formatAs: 'minute'\r\n  }, {\r\n    formatAs: 'hour'\r\n  }, {\r\n    formatAs: 'day'\r\n  }, {\r\n    formatAs: 'month'\r\n  }, {\r\n    formatAs: 'year'\r\n  }],\r\n  labels: [// \"mini\" labels are only defined for a few languages.\r\n  'mini', // \"short-time\" labels are only defined for a few languages.\r\n  'short-time', // \"narrow\" and \"short\" labels are defined for all languages.\r\n  // \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n  // but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n  // more appropriate.\r\n  // \"short\" labels would have been more appropriate if they\r\n  // didn't have the \" ago\" part, hence the \"short-time\" above.\r\n  'narrow', // Since \"narrow\" labels are always present, \"short\" element\r\n  // of this array can be removed.\r\n  'short']\r\n});\r\n//# sourceMappingURL=mini.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL21pbmkuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0FBQ2Y7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdHlsZS9taW5pLmpzP2MyZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG4gIHN0ZXBzOiBbe1xyXG4gICAgZm9ybWF0QXM6ICdzZWNvbmQnXHJcbiAgfSwge1xyXG4gICAgZm9ybWF0QXM6ICdtaW51dGUnXHJcbiAgfSwge1xyXG4gICAgZm9ybWF0QXM6ICdob3VyJ1xyXG4gIH0sIHtcclxuICAgIGZvcm1hdEFzOiAnZGF5J1xyXG4gIH0sIHtcclxuICAgIGZvcm1hdEFzOiAnbW9udGgnXHJcbiAgfSwge1xyXG4gICAgZm9ybWF0QXM6ICd5ZWFyJ1xyXG4gIH1dLFxyXG4gIGxhYmVsczogWy8vIFwibWluaVwiIGxhYmVscyBhcmUgb25seSBkZWZpbmVkIGZvciBhIGZldyBsYW5ndWFnZXMuXHJcbiAgJ21pbmknLCAvLyBcInNob3J0LXRpbWVcIiBsYWJlbHMgYXJlIG9ubHkgZGVmaW5lZCBmb3IgYSBmZXcgbGFuZ3VhZ2VzLlxyXG4gICdzaG9ydC10aW1lJywgLy8gXCJuYXJyb3dcIiBhbmQgXCJzaG9ydFwiIGxhYmVscyBhcmUgZGVmaW5lZCBmb3IgYWxsIGxhbmd1YWdlcy5cclxuICAvLyBcIm5hcnJvd1wiIGxhYmVscyBjYW4gc29tZXRpbWVzIGJlIHdlaXJkIChsaWtlIFwiKzVkLlwiKSxcclxuICAvLyBidXQgXCJzaG9ydFwiIGxhYmVscyBoYXZlIHRoZSBcIiBhZ29cIiBwYXJ0LCBzbyBcIm5hcnJvd1wiIHNlZW1cclxuICAvLyBtb3JlIGFwcHJvcHJpYXRlLlxyXG4gIC8vIFwic2hvcnRcIiBsYWJlbHMgd291bGQgaGF2ZSBiZWVuIG1vcmUgYXBwcm9wcmlhdGUgaWYgdGhleVxyXG4gIC8vIGRpZG4ndCBoYXZlIHRoZSBcIiBhZ29cIiBwYXJ0LCBoZW5jZSB0aGUgXCJzaG9ydC10aW1lXCIgYWJvdmUuXHJcbiAgJ25hcnJvdycsIC8vIFNpbmNlIFwibmFycm93XCIgbGFiZWxzIGFyZSBhbHdheXMgcHJlc2VudCwgXCJzaG9ydFwiIGVsZW1lbnRcclxuICAvLyBvZiB0aGlzIGFycmF5IGNhbiBiZSByZW1vdmVkLlxyXG4gICdzaG9ydCddXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pbmkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/mini.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/miniMinute.js":
/*!**********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/miniMinute.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mini.js */ \"./node_modules/javascript-time-ago/modules/style/mini.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _mini_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Skip \"seconds\".\r\n  steps: _mini_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps.filter(function (step) {\r\n    return step.formatAs !== 'second';\r\n  })\r\n}));\r\n//# sourceMappingURL=miniMinute.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL21pbmlNaW51dGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQzZCO0FBQzdCLCtEQUFlLDhCQUE4QixFQUFFLGdEQUFJLEtBQUs7QUFDeEQ7QUFDQSxTQUFTLDZEQUFpQjtBQUMxQjtBQUNBLEdBQUc7QUFDSCxDQUFDLENBQUMsRUFBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvbWluaU1pbnV0ZS5qcz9jYmY1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XHJcblxyXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cclxuXHJcbmltcG9ydCBtaW5pIGZyb20gJy4vbWluaS5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWluaSksIHt9LCB7XHJcbiAgLy8gU2tpcCBcInNlY29uZHNcIi5cclxuICBzdGVwczogbWluaS5zdGVwcy5maWx0ZXIoZnVuY3Rpb24gKHN0ZXApIHtcclxuICAgIHJldHVybiBzdGVwLmZvcm1hdEFzICE9PSAnc2Vjb25kJztcclxuICB9KVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWluaU1pbnV0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/miniMinute.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/miniMinuteNow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/miniMinuteNow.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _miniMinute_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./miniMinute.js */ \"./node_modules/javascript-time-ago/modules/style/miniMinute.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _miniMinute_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Add \"now\".\r\n  steps: [{\r\n    formatAs: 'now'\r\n  }].concat(_miniMinute_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps)\r\n}));\r\n//# sourceMappingURL=miniMinuteNow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL21pbmlNaW51dGVOb3cuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQ3lDO0FBQ3pDLCtEQUFlLDhCQUE4QixFQUFFLHNEQUFVLEtBQUs7QUFDOUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRyxTQUFTLDREQUFnQjtBQUM1QixDQUFDLENBQUMsRUFBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvbWluaU1pbnV0ZU5vdy5qcz81YTZlIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XHJcblxyXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cclxuXHJcbmltcG9ydCBtaW5pTWludXRlIGZyb20gJy4vbWluaU1pbnV0ZS5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWluaU1pbnV0ZSksIHt9LCB7XHJcbiAgLy8gQWRkIFwibm93XCIuXHJcbiAgc3RlcHM6IFt7XHJcbiAgICBmb3JtYXRBczogJ25vdydcclxuICB9XS5jb25jYXQobWluaU1pbnV0ZS5zdGVwcylcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pbmlNaW51dGVOb3cuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/miniMinuteNow.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/miniNow.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/miniNow.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mini.js */ \"./node_modules/javascript-time-ago/modules/style/mini.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _mini_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Add \"now\".\r\n  steps: [{\r\n    formatAs: 'now'\r\n  }].concat(_mini_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps)\r\n}));\r\n//# sourceMappingURL=miniNow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL21pbmlOb3cuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQzZCO0FBQzdCLCtEQUFlLDhCQUE4QixFQUFFLGdEQUFJLEtBQUs7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsR0FBRyxTQUFTLHNEQUFVO0FBQ3RCLENBQUMsQ0FBQyxFQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdHlsZS9taW5pTm93LmpzPzUwZTciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cclxuXHJcbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XHJcblxyXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxyXG5cclxuaW1wb3J0IG1pbmkgZnJvbSAnLi9taW5pLmpzJztcclxuZXhwb3J0IGRlZmF1bHQgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtaW5pKSwge30sIHtcclxuICAvLyBBZGQgXCJub3dcIi5cclxuICBzdGVwczogW3tcclxuICAgIGZvcm1hdEFzOiAnbm93J1xyXG4gIH1dLmNvbmNhdChtaW5pLnN0ZXBzKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWluaU5vdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/miniNow.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/round.js":
/*!*****************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/round.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steps_round_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../steps/round.js */ \"./node_modules/javascript-time-ago/modules/steps/round.js\");\n // just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// …\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\n//\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  steps: _steps_round_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n  labels: 'long'\r\n});\r\n//# sourceMappingURL=round.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3JvdW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQXNDLENBQUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWU7QUFDZixTQUFTLHVEQUFLO0FBQ2Q7QUFDQSxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3JvdW5kLmpzPzFjNmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJvdW5kIGZyb20gJy4uL3N0ZXBzL3JvdW5kLmpzJzsgLy8ganVzdCBub3dcclxuLy8gMSBzZWNvbmQgYWdvXHJcbi8vIDIgc2Vjb25kcyBhZ29cclxuLy8g4oCmXHJcbi8vIDU5IHNlY29uZHMgYWdvXHJcbi8vIDEgbWludXRlIGFnb1xyXG4vLyAyIG1pbnV0ZXMgYWdvXHJcbi8vIOKAplxyXG4vLyA1OSBtaW51dGVzIGFnb1xyXG4vLyAxIG1pbnV0ZSBhZ29cclxuLy8gMiBtaW51dGVzIGFnb1xyXG4vLyDigKZcclxuLy8gNTkgbWludXRlcyBhZ29cclxuLy8gMSBob3VyIGFnb1xyXG4vLyAyIGhvdXJzIGFnb1xyXG4vLyDigKZcclxuLy8gMjQgaG91cnMgYWdvXHJcbi8vIDEgZGF5IGFnb1xyXG4vLyAyIGRheXMgYWdvXHJcbi8vIOKAplxyXG4vLyA2IGRheXMgYWdvXHJcbi8vIDEgd2VlayBhZ29cclxuLy8gMiB3ZWVrcyBhZ29cclxuLy8gMyB3ZWVrcyBhZ29cclxuLy8gNCB3ZWVrcyBhZ29cclxuLy8gMSBtb250aCBhZ29cclxuLy8gMiBtb250aHMgYWdvXHJcbi8vIOKAplxyXG4vLyAxMSBtb250aHMgYWdvXHJcbi8vIDEgeWVhciBhZ29cclxuLy8gMiB5ZWFycyBhZ29cclxuLy8g4oCmXHJcbi8vXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgc3RlcHM6IHJvdW5kLFxyXG4gIGxhYmVsczogJ2xvbmcnXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/round.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/roundMinute.js":
/*!***********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/roundMinute.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round.js */ \"./node_modules/javascript-time-ago/modules/style/round.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n // just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\n//\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _round_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Skip \"seconds\".\r\n  steps: _round_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps.filter(function (step) {\r\n    return step.formatAs !== 'second';\r\n  })\r\n}));\r\n//# sourceMappingURL=roundMinute.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3JvdW5kTWludXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQTJDLGdDQUFnQyxvQ0FBb0Msb0RBQW9ELDZEQUE2RCxpRUFBaUUsc0NBQXNDO0FBQ3ZVO0FBQ0EsaUNBQWlDLGdCQUFnQixzQkFBc0IsT0FBTyx1REFBdUQsNkRBQTZELDRDQUE0QyxvS0FBb0ssbUZBQW1GLEtBQUs7QUFDMWU7QUFDQSw0Q0FBNEMsa0JBQWtCLGtDQUFrQyxvRUFBb0UsS0FBSyxPQUFPLG9CQUFvQjtBQUNwTTtBQUMrQixDQUFDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBZSw4QkFBOEIsRUFBRSxpREFBSyxLQUFLO0FBQ3pEO0FBQ0EsU0FBUyw4REFBa0I7QUFDM0I7QUFDQSxHQUFHO0FBQ0gsQ0FBQyxDQUFDLEVBQUM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3JvdW5kTWludXRlLmpzPzEzZmMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cclxuXHJcbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XHJcblxyXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxyXG5cclxuaW1wb3J0IHJvdW5kIGZyb20gJy4vcm91bmQuanMnOyAvLyBqdXN0IG5vd1xyXG4vLyAxIG1pbnV0ZSBhZ29cclxuLy8gMiBtaW51dGVzIGFnb1xyXG4vLyDigKZcclxuLy8gNTkgbWludXRlcyBhZ29cclxuLy8gMSBtaW51dGUgYWdvXHJcbi8vIDIgbWludXRlcyBhZ29cclxuLy8g4oCmXHJcbi8vIDU5IG1pbnV0ZXMgYWdvXHJcbi8vIDEgaG91ciBhZ29cclxuLy8gMiBob3VycyBhZ29cclxuLy8g4oCmXHJcbi8vIDI0IGhvdXJzIGFnb1xyXG4vLyAxIGRheSBhZ29cclxuLy8gMiBkYXlzIGFnb1xyXG4vLyDigKZcclxuLy8gNiBkYXlzIGFnb1xyXG4vLyAxIHdlZWsgYWdvXHJcbi8vIDIgd2Vla3MgYWdvXHJcbi8vIDMgd2Vla3MgYWdvXHJcbi8vIDQgd2Vla3MgYWdvXHJcbi8vIDEgbW9udGggYWdvXHJcbi8vIDIgbW9udGhzIGFnb1xyXG4vLyDigKZcclxuLy8gMTEgbW9udGhzIGFnb1xyXG4vLyAxIHllYXIgYWdvXHJcbi8vIDIgeWVhcnMgYWdvXHJcbi8vIOKAplxyXG4vL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByb3VuZCksIHt9LCB7XHJcbiAgLy8gU2tpcCBcInNlY29uZHNcIi5cclxuICBzdGVwczogcm91bmQuc3RlcHMuZmlsdGVyKGZ1bmN0aW9uIChzdGVwKSB7XHJcbiAgICByZXR1cm4gc3RlcC5mb3JtYXRBcyAhPT0gJ3NlY29uZCc7XHJcbiAgfSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdW5kTWludXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/roundMinute.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/twitter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/twitter.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steps_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../steps/index.js */ \"./node_modules/javascript-time-ago/modules/steps/index.js\");\n/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../locale.js */ \"./node_modules/javascript-time-ago/modules/locale.js\");\n\r\n // For compatibility with the old versions of this library.\r\n\r\n // Twitter-style relative date/time formatting.\r\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\r\n//\r\n// Seconds, minutes or hours are shown for shorter intervals,\r\n// and longer intervals are formatted using full date format.\r\n\r\nvar steps = [{\r\n  formatAs: 'second'\r\n}, {\r\n  formatAs: 'minute'\r\n}, {\r\n  formatAs: 'hour'\r\n}]; // A cache for `Intl.DateTimeFormat` formatters\r\n// for various locales (is a global variable).\r\n\r\nvar formatters = {}; // Starting from day intervals, output month and day.\r\n\r\nvar monthAndDay = {\r\n  minTime: function minTime(timestamp, _ref) {\r\n    var future = _ref.future,\r\n        getMinTimeForUnit = _ref.getMinTimeForUnit;\r\n    // Returns `23.5 * 60 * 60` when `round` is \"round\",\r\n    // and `24 * 60 * 60` when `round` is \"floor\".\r\n    return getMinTimeForUnit('day');\r\n  },\r\n  format: function format(value, locale) {\r\n    /* istanbul ignore else */\r\n    if (!formatters[locale]) {\r\n      formatters[locale] = {};\r\n    }\r\n    /* istanbul ignore else */\r\n\r\n\r\n    if (!formatters[locale].dayMonth) {\r\n      // \"Apr 11\" (MMMd)\r\n      formatters[locale].dayMonth = new Intl.DateTimeFormat(locale, {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    } // Output month and day.\r\n\r\n\r\n    return formatters[locale].dayMonth.format((0,_steps_index_js__WEBPACK_IMPORTED_MODULE_0__.getDate)(value));\r\n  }\r\n}; // If the `date` happened/happens outside of current year,\r\n// then output day, month and year.\r\n// The interval should be such that the `date` lies outside of the current year.\r\n\r\nvar yearMonthAndDay = {\r\n  minTime: function minTime(timestamp, _ref2) {\r\n    var future = _ref2.future;\r\n\r\n    if (future) {\r\n      // January 1, 00:00, of the `date`'s year is right after\r\n      // the maximum `now` for formatting a future date:\r\n      // When `now` is before that date, the `date` is formatted as \"day/month/year\" (this step),\r\n      // When `now` is equal to or after that date, the `date` is formatted as \"day/month\" (another step).\r\n      // After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n      // The date is right after the maximum `now` for formatting a future date,\r\n      // so subtract 1 millisecond from it.\r\n      var maxFittingNow = new Date(new Date(timestamp).getFullYear(), 0).getTime() - 1; // Return `minTime` (in seconds).\r\n\r\n      return (timestamp - maxFittingNow) / 1000;\r\n    } else {\r\n      // January 1, 00:00, of the year following the `date`'s year\r\n      // is the minimum `now` for formatting a past date:\r\n      // When `now` is before that date, the `date` is formatted as \"day/month\" (another step),\r\n      // When `now` is equal to or after that date, the `date` is formatted as \"day/month/year\" (this step).\r\n      // After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n      var minFittingNow = new Date(new Date(timestamp).getFullYear() + 1, 0).getTime(); // Return `minTime` (in seconds).\r\n\r\n      return (minFittingNow - timestamp) / 1000;\r\n    }\r\n  },\r\n  format: function format(value, locale) {\r\n    /* istanbul ignore if */\r\n    if (!formatters[locale]) {\r\n      formatters[locale] = {};\r\n    }\r\n    /* istanbul ignore else */\r\n\r\n\r\n    if (!formatters[locale].dayMonthYear) {\r\n      // \"Apr 11, 2017\" (yMMMd)\r\n      formatters[locale].dayMonthYear = new Intl.DateTimeFormat(locale, {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    } // Output day, month and year.\r\n\r\n\r\n    return formatters[locale].dayMonthYear.format((0,_steps_index_js__WEBPACK_IMPORTED_MODULE_0__.getDate)(value));\r\n  }\r\n}; // If `Intl.DateTimeFormat` is supported,\r\n// then longer time intervals will be formatted as dates.\r\n\r\n/* istanbul ignore else */\r\n\r\nif ((0,_locale_js__WEBPACK_IMPORTED_MODULE_1__.intlDateTimeFormatSupported)()) {\r\n  steps.push(monthAndDay, yearMonthAndDay);\r\n} // Otherwise, if `Intl.DateTimeFormat` is not supported,\r\n// which could be the case when using Internet Explorer,\r\n// then simply mimick \"round\" steps.\r\nelse {\r\n  steps.push({\r\n    formatAs: 'day'\r\n  }, {\r\n    formatAs: 'week'\r\n  }, {\r\n    formatAs: 'month'\r\n  }, {\r\n    formatAs: 'year'\r\n  });\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  steps: steps,\r\n  labels: [// \"mini\" labels are only defined for a few languages.\r\n  'mini', // \"short-time\" labels are only defined for a few languages.\r\n  'short-time', // \"narrow\" and \"short\" labels are defined for all languages.\r\n  // \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n  // but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n  // more appropriate.\r\n  // \"short\" labels would have been more appropriate if they\r\n  // didn't have the \" ago\" part, hence the \"short-time\" above.\r\n  'narrow', // Since \"narrow\" labels are always present, \"short\" element\r\n  // of this array can be removed.\r\n  'short']\r\n});\r\n//# sourceMappingURL=twitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3R3aXR0ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQWlEO0FBQ1UsQ0FBQztBQUM1RDtBQUNpRSxDQUFDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQyxHQUFHO0FBQ0o7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0EsOENBQThDLHdEQUFPO0FBQ3JEO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RjtBQUN4RjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQSxrREFBa0Qsd0RBQU87QUFDekQ7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVFQUEyQjtBQUMvQjtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSwrREFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvdHdpdHRlci5qcz9hNmY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRheSwgZ2V0RGF0ZSB9IGZyb20gJy4uL3N0ZXBzL2luZGV4LmpzJztcclxuaW1wb3J0IHsgaW50bERhdGVUaW1lRm9ybWF0U3VwcG9ydGVkIH0gZnJvbSAnLi4vbG9jYWxlLmpzJzsgLy8gRm9yIGNvbXBhdGliaWxpdHkgd2l0aCB0aGUgb2xkIHZlcnNpb25zIG9mIHRoaXMgbGlicmFyeS5cclxuXHJcbmltcG9ydCByZW5hbWVMZWdhY3lQcm9wZXJ0aWVzIGZyb20gJy4vcmVuYW1lTGVnYWN5UHJvcGVydGllcy5qcyc7IC8vIFR3aXR0ZXItc3R5bGUgcmVsYXRpdmUgZGF0ZS90aW1lIGZvcm1hdHRpbmcuXHJcbi8vIChcIjFtXCIsIFwiMmhcIiwgXCJNYXIgM1wiLCBcIkFwciA0LCAyMDEyXCIpLlxyXG4vL1xyXG4vLyBTZWNvbmRzLCBtaW51dGVzIG9yIGhvdXJzIGFyZSBzaG93biBmb3Igc2hvcnRlciBpbnRlcnZhbHMsXHJcbi8vIGFuZCBsb25nZXIgaW50ZXJ2YWxzIGFyZSBmb3JtYXR0ZWQgdXNpbmcgZnVsbCBkYXRlIGZvcm1hdC5cclxuXHJcbnZhciBzdGVwcyA9IFt7XHJcbiAgZm9ybWF0QXM6ICdzZWNvbmQnXHJcbn0sIHtcclxuICBmb3JtYXRBczogJ21pbnV0ZSdcclxufSwge1xyXG4gIGZvcm1hdEFzOiAnaG91cidcclxufV07IC8vIEEgY2FjaGUgZm9yIGBJbnRsLkRhdGVUaW1lRm9ybWF0YCBmb3JtYXR0ZXJzXHJcbi8vIGZvciB2YXJpb3VzIGxvY2FsZXMgKGlzIGEgZ2xvYmFsIHZhcmlhYmxlKS5cclxuXHJcbnZhciBmb3JtYXR0ZXJzID0ge307IC8vIFN0YXJ0aW5nIGZyb20gZGF5IGludGVydmFscywgb3V0cHV0IG1vbnRoIGFuZCBkYXkuXHJcblxyXG52YXIgbW9udGhBbmREYXkgPSB7XHJcbiAgbWluVGltZTogZnVuY3Rpb24gbWluVGltZSh0aW1lc3RhbXAsIF9yZWYpIHtcclxuICAgIHZhciBmdXR1cmUgPSBfcmVmLmZ1dHVyZSxcclxuICAgICAgICBnZXRNaW5UaW1lRm9yVW5pdCA9IF9yZWYuZ2V0TWluVGltZUZvclVuaXQ7XHJcbiAgICAvLyBSZXR1cm5zIGAyMy41ICogNjAgKiA2MGAgd2hlbiBgcm91bmRgIGlzIFwicm91bmRcIixcclxuICAgIC8vIGFuZCBgMjQgKiA2MCAqIDYwYCB3aGVuIGByb3VuZGAgaXMgXCJmbG9vclwiLlxyXG4gICAgcmV0dXJuIGdldE1pblRpbWVGb3JVbml0KCdkYXknKTtcclxuICB9LFxyXG4gIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBsb2NhbGUpIHtcclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXHJcbiAgICBpZiAoIWZvcm1hdHRlcnNbbG9jYWxlXSkge1xyXG4gICAgICBmb3JtYXR0ZXJzW2xvY2FsZV0gPSB7fTtcclxuICAgIH1cclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXHJcblxyXG5cclxuICAgIGlmICghZm9ybWF0dGVyc1tsb2NhbGVdLmRheU1vbnRoKSB7XHJcbiAgICAgIC8vIFwiQXByIDExXCIgKE1NTWQpXHJcbiAgICAgIGZvcm1hdHRlcnNbbG9jYWxlXS5kYXlNb250aCA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KGxvY2FsZSwge1xyXG4gICAgICAgIG1vbnRoOiAnc2hvcnQnLFxyXG4gICAgICAgIGRheTogJ251bWVyaWMnXHJcbiAgICAgIH0pO1xyXG4gICAgfSAvLyBPdXRwdXQgbW9udGggYW5kIGRheS5cclxuXHJcblxyXG4gICAgcmV0dXJuIGZvcm1hdHRlcnNbbG9jYWxlXS5kYXlNb250aC5mb3JtYXQoZ2V0RGF0ZSh2YWx1ZSkpO1xyXG4gIH1cclxufTsgLy8gSWYgdGhlIGBkYXRlYCBoYXBwZW5lZC9oYXBwZW5zIG91dHNpZGUgb2YgY3VycmVudCB5ZWFyLFxyXG4vLyB0aGVuIG91dHB1dCBkYXksIG1vbnRoIGFuZCB5ZWFyLlxyXG4vLyBUaGUgaW50ZXJ2YWwgc2hvdWxkIGJlIHN1Y2ggdGhhdCB0aGUgYGRhdGVgIGxpZXMgb3V0c2lkZSBvZiB0aGUgY3VycmVudCB5ZWFyLlxyXG5cclxudmFyIHllYXJNb250aEFuZERheSA9IHtcclxuICBtaW5UaW1lOiBmdW5jdGlvbiBtaW5UaW1lKHRpbWVzdGFtcCwgX3JlZjIpIHtcclxuICAgIHZhciBmdXR1cmUgPSBfcmVmMi5mdXR1cmU7XHJcblxyXG4gICAgaWYgKGZ1dHVyZSkge1xyXG4gICAgICAvLyBKYW51YXJ5IDEsIDAwOjAwLCBvZiB0aGUgYGRhdGVgJ3MgeWVhciBpcyByaWdodCBhZnRlclxyXG4gICAgICAvLyB0aGUgbWF4aW11bSBgbm93YCBmb3IgZm9ybWF0dGluZyBhIGZ1dHVyZSBkYXRlOlxyXG4gICAgICAvLyBXaGVuIGBub3dgIGlzIGJlZm9yZSB0aGF0IGRhdGUsIHRoZSBgZGF0ZWAgaXMgZm9ybWF0dGVkIGFzIFwiZGF5L21vbnRoL3llYXJcIiAodGhpcyBzdGVwKSxcclxuICAgICAgLy8gV2hlbiBgbm93YCBpcyBlcXVhbCB0byBvciBhZnRlciB0aGF0IGRhdGUsIHRoZSBgZGF0ZWAgaXMgZm9ybWF0dGVkIGFzIFwiZGF5L21vbnRoXCIgKGFub3RoZXIgc3RlcCkuXHJcbiAgICAgIC8vIEFmdGVyIHRoYXQsIGl0J3MgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMsIGFuZCBhZnRlciB0aGF0IGl0J3Mgbm8gbG9uZ2VyIGBmdXR1cmVgLlxyXG4gICAgICAvLyBUaGUgZGF0ZSBpcyByaWdodCBhZnRlciB0aGUgbWF4aW11bSBgbm93YCBmb3IgZm9ybWF0dGluZyBhIGZ1dHVyZSBkYXRlLFxyXG4gICAgICAvLyBzbyBzdWJ0cmFjdCAxIG1pbGxpc2Vjb25kIGZyb20gaXQuXHJcbiAgICAgIHZhciBtYXhGaXR0aW5nTm93ID0gbmV3IERhdGUobmV3IERhdGUodGltZXN0YW1wKS5nZXRGdWxsWWVhcigpLCAwKS5nZXRUaW1lKCkgLSAxOyAvLyBSZXR1cm4gYG1pblRpbWVgIChpbiBzZWNvbmRzKS5cclxuXHJcbiAgICAgIHJldHVybiAodGltZXN0YW1wIC0gbWF4Rml0dGluZ05vdykgLyAxMDAwO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gSmFudWFyeSAxLCAwMDowMCwgb2YgdGhlIHllYXIgZm9sbG93aW5nIHRoZSBgZGF0ZWAncyB5ZWFyXHJcbiAgICAgIC8vIGlzIHRoZSBtaW5pbXVtIGBub3dgIGZvciBmb3JtYXR0aW5nIGEgcGFzdCBkYXRlOlxyXG4gICAgICAvLyBXaGVuIGBub3dgIGlzIGJlZm9yZSB0aGF0IGRhdGUsIHRoZSBgZGF0ZWAgaXMgZm9ybWF0dGVkIGFzIFwiZGF5L21vbnRoXCIgKGFub3RoZXIgc3RlcCksXHJcbiAgICAgIC8vIFdoZW4gYG5vd2AgaXMgZXF1YWwgdG8gb3IgYWZ0ZXIgdGhhdCBkYXRlLCB0aGUgYGRhdGVgIGlzIGZvcm1hdHRlZCBhcyBcImRheS9tb250aC95ZWFyXCIgKHRoaXMgc3RlcCkuXHJcbiAgICAgIC8vIEFmdGVyIHRoYXQsIGl0J3MgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMsIGFuZCBhZnRlciB0aGF0IGl0J3Mgbm8gbG9uZ2VyIGBmdXR1cmVgLlxyXG4gICAgICB2YXIgbWluRml0dGluZ05vdyA9IG5ldyBEYXRlKG5ldyBEYXRlKHRpbWVzdGFtcCkuZ2V0RnVsbFllYXIoKSArIDEsIDApLmdldFRpbWUoKTsgLy8gUmV0dXJuIGBtaW5UaW1lYCAoaW4gc2Vjb25kcykuXHJcblxyXG4gICAgICByZXR1cm4gKG1pbkZpdHRpbmdOb3cgLSB0aW1lc3RhbXApIC8gMTAwMDtcclxuICAgIH1cclxuICB9LFxyXG4gIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBsb2NhbGUpIHtcclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xyXG4gICAgaWYgKCFmb3JtYXR0ZXJzW2xvY2FsZV0pIHtcclxuICAgICAgZm9ybWF0dGVyc1tsb2NhbGVdID0ge307XHJcbiAgICB9XHJcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xyXG5cclxuXHJcbiAgICBpZiAoIWZvcm1hdHRlcnNbbG9jYWxlXS5kYXlNb250aFllYXIpIHtcclxuICAgICAgLy8gXCJBcHIgMTEsIDIwMTdcIiAoeU1NTWQpXHJcbiAgICAgIGZvcm1hdHRlcnNbbG9jYWxlXS5kYXlNb250aFllYXIgPSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChsb2NhbGUsIHtcclxuICAgICAgICB5ZWFyOiAnbnVtZXJpYycsXHJcbiAgICAgICAgbW9udGg6ICdzaG9ydCcsXHJcbiAgICAgICAgZGF5OiAnbnVtZXJpYydcclxuICAgICAgfSk7XHJcbiAgICB9IC8vIE91dHB1dCBkYXksIG1vbnRoIGFuZCB5ZWFyLlxyXG5cclxuXHJcbiAgICByZXR1cm4gZm9ybWF0dGVyc1tsb2NhbGVdLmRheU1vbnRoWWVhci5mb3JtYXQoZ2V0RGF0ZSh2YWx1ZSkpO1xyXG4gIH1cclxufTsgLy8gSWYgYEludGwuRGF0ZVRpbWVGb3JtYXRgIGlzIHN1cHBvcnRlZCxcclxuLy8gdGhlbiBsb25nZXIgdGltZSBpbnRlcnZhbHMgd2lsbCBiZSBmb3JtYXR0ZWQgYXMgZGF0ZXMuXHJcblxyXG4vKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xyXG5cclxuaWYgKGludGxEYXRlVGltZUZvcm1hdFN1cHBvcnRlZCgpKSB7XHJcbiAgc3RlcHMucHVzaChtb250aEFuZERheSwgeWVhck1vbnRoQW5kRGF5KTtcclxufSAvLyBPdGhlcndpc2UsIGlmIGBJbnRsLkRhdGVUaW1lRm9ybWF0YCBpcyBub3Qgc3VwcG9ydGVkLFxyXG4vLyB3aGljaCBjb3VsZCBiZSB0aGUgY2FzZSB3aGVuIHVzaW5nIEludGVybmV0IEV4cGxvcmVyLFxyXG4vLyB0aGVuIHNpbXBseSBtaW1pY2sgXCJyb3VuZFwiIHN0ZXBzLlxyXG5lbHNlIHtcclxuICBzdGVwcy5wdXNoKHtcclxuICAgIGZvcm1hdEFzOiAnZGF5J1xyXG4gIH0sIHtcclxuICAgIGZvcm1hdEFzOiAnd2VlaydcclxuICB9LCB7XHJcbiAgICBmb3JtYXRBczogJ21vbnRoJ1xyXG4gIH0sIHtcclxuICAgIGZvcm1hdEFzOiAneWVhcidcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIHN0ZXBzOiBzdGVwcyxcclxuICBsYWJlbHM6IFsvLyBcIm1pbmlcIiBsYWJlbHMgYXJlIG9ubHkgZGVmaW5lZCBmb3IgYSBmZXcgbGFuZ3VhZ2VzLlxyXG4gICdtaW5pJywgLy8gXCJzaG9ydC10aW1lXCIgbGFiZWxzIGFyZSBvbmx5IGRlZmluZWQgZm9yIGEgZmV3IGxhbmd1YWdlcy5cclxuICAnc2hvcnQtdGltZScsIC8vIFwibmFycm93XCIgYW5kIFwic2hvcnRcIiBsYWJlbHMgYXJlIGRlZmluZWQgZm9yIGFsbCBsYW5ndWFnZXMuXHJcbiAgLy8gXCJuYXJyb3dcIiBsYWJlbHMgY2FuIHNvbWV0aW1lcyBiZSB3ZWlyZCAobGlrZSBcIis1ZC5cIiksXHJcbiAgLy8gYnV0IFwic2hvcnRcIiBsYWJlbHMgaGF2ZSB0aGUgXCIgYWdvXCIgcGFydCwgc28gXCJuYXJyb3dcIiBzZWVtXHJcbiAgLy8gbW9yZSBhcHByb3ByaWF0ZS5cclxuICAvLyBcInNob3J0XCIgbGFiZWxzIHdvdWxkIGhhdmUgYmVlbiBtb3JlIGFwcHJvcHJpYXRlIGlmIHRoZXlcclxuICAvLyBkaWRuJ3QgaGF2ZSB0aGUgXCIgYWdvXCIgcGFydCwgaGVuY2UgdGhlIFwic2hvcnQtdGltZVwiIGFib3ZlLlxyXG4gICduYXJyb3cnLCAvLyBTaW5jZSBcIm5hcnJvd1wiIGxhYmVscyBhcmUgYWx3YXlzIHByZXNlbnQsIFwic2hvcnRcIiBlbGVtZW50XHJcbiAgLy8gb2YgdGhpcyBhcnJheSBjYW4gYmUgcmVtb3ZlZC5cclxuICAnc2hvcnQnXVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD10d2l0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/twitter.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/twitterFirstMinute.js":
/*!******************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/twitterFirstMinute.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steps_units_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../steps/units.js */ \"./node_modules/javascript-time-ago/modules/steps/units.js\");\n/* harmony import */ var _twitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./twitter.js */ \"./node_modules/javascript-time-ago/modules/style/twitter.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Skip \"seconds\".\r\n  steps: _twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps.filter(function (step) {\r\n    return step.formatAs !== 'second';\r\n  }) // Start showing `1m` from the first minute.\r\n  .map(function (step) {\r\n    return step.formatAs === 'minute' ? _objectSpread(_objectSpread({}, step), {}, {\r\n      minTime: _steps_units_js__WEBPACK_IMPORTED_MODULE_1__.minute\r\n    }) : step;\r\n  })\r\n}));\r\n//# sourceMappingURL=twitterFirstMinute.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3R3aXR0ZXJGaXJzdE1pbnV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQzJDO0FBQ1I7QUFDbkMsK0RBQWUsOEJBQThCLEVBQUUsbURBQU8sS0FBSztBQUMzRDtBQUNBLFNBQVMsZ0VBQW9CO0FBQzdCO0FBQ0EsR0FBRztBQUNIO0FBQ0Esc0VBQXNFLFdBQVc7QUFDakYsZUFBZSxtREFBTTtBQUNyQixLQUFLO0FBQ0wsR0FBRztBQUNILENBQUMsQ0FBQyxFQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdHlsZS90d2l0dGVyRmlyc3RNaW51dGUuanM/NWRlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxyXG5cclxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cclxuXHJcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XHJcblxyXG5pbXBvcnQgeyBtaW51dGUgfSBmcm9tICcuLi9zdGVwcy91bml0cy5qcyc7XHJcbmltcG9ydCB0d2l0dGVyIGZyb20gJy4vdHdpdHRlci5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdHdpdHRlciksIHt9LCB7XHJcbiAgLy8gU2tpcCBcInNlY29uZHNcIi5cclxuICBzdGVwczogdHdpdHRlci5zdGVwcy5maWx0ZXIoZnVuY3Rpb24gKHN0ZXApIHtcclxuICAgIHJldHVybiBzdGVwLmZvcm1hdEFzICE9PSAnc2Vjb25kJztcclxuICB9KSAvLyBTdGFydCBzaG93aW5nIGAxbWAgZnJvbSB0aGUgZmlyc3QgbWludXRlLlxyXG4gIC5tYXAoZnVuY3Rpb24gKHN0ZXApIHtcclxuICAgIHJldHVybiBzdGVwLmZvcm1hdEFzID09PSAnbWludXRlJyA/IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgc3RlcCksIHt9LCB7XHJcbiAgICAgIG1pblRpbWU6IG1pbnV0ZVxyXG4gICAgfSkgOiBzdGVwO1xyXG4gIH0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD10d2l0dGVyRmlyc3RNaW51dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/twitterFirstMinute.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/twitterMinute.js":
/*!*************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/twitterMinute.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _twitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./twitter.js */ \"./node_modules/javascript-time-ago/modules/style/twitter.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Skip \"seconds\".\r\n  steps: _twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps.filter(function (step) {\r\n    return step.formatAs !== 'second';\r\n  })\r\n}));\r\n//# sourceMappingURL=twitterMinute.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3R3aXR0ZXJNaW51dGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQ21DO0FBQ25DLCtEQUFlLDhCQUE4QixFQUFFLG1EQUFPLEtBQUs7QUFDM0Q7QUFDQSxTQUFTLGdFQUFvQjtBQUM3QjtBQUNBLEdBQUc7QUFDSCxDQUFDLENBQUMsRUFBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvdHdpdHRlck1pbnV0ZS5qcz8wMTU1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XHJcblxyXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cclxuXHJcbmltcG9ydCB0d2l0dGVyIGZyb20gJy4vdHdpdHRlci5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdHdpdHRlciksIHt9LCB7XHJcbiAgLy8gU2tpcCBcInNlY29uZHNcIi5cclxuICBzdGVwczogdHdpdHRlci5zdGVwcy5maWx0ZXIoZnVuY3Rpb24gKHN0ZXApIHtcclxuICAgIHJldHVybiBzdGVwLmZvcm1hdEFzICE9PSAnc2Vjb25kJztcclxuICB9KVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHdpdHRlck1pbnV0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/twitterMinute.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/twitterMinuteNow.js":
/*!****************************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/twitterMinuteNow.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _twitterMinute_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./twitterMinute.js */ \"./node_modules/javascript-time-ago/modules/style/twitterMinute.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _twitterMinute_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Add \"now\".\r\n  steps: [{\r\n    formatAs: 'now'\r\n  }].concat(_twitterMinute_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps)\r\n}));\r\n//# sourceMappingURL=twitterMinuteNow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3R3aXR0ZXJNaW51dGVOb3cuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQytDO0FBQy9DLCtEQUFlLDhCQUE4QixFQUFFLHlEQUFhLEtBQUs7QUFDakU7QUFDQTtBQUNBO0FBQ0EsR0FBRyxTQUFTLCtEQUFtQjtBQUMvQixDQUFDLENBQUMsRUFBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qYXZhc2NyaXB0LXRpbWUtYWdvL21vZHVsZXMvc3R5bGUvdHdpdHRlck1pbnV0ZU5vdy5qcz8zYjJiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XHJcblxyXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cclxuXHJcbmltcG9ydCB0d2l0dGVyTWludXRlIGZyb20gJy4vdHdpdHRlck1pbnV0ZS5qcyc7XHJcbmV4cG9ydCBkZWZhdWx0IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdHdpdHRlck1pbnV0ZSksIHt9LCB7XHJcbiAgLy8gQWRkIFwibm93XCIuXHJcbiAgc3RlcHM6IFt7XHJcbiAgICBmb3JtYXRBczogJ25vdydcclxuICB9XS5jb25jYXQodHdpdHRlck1pbnV0ZS5zdGVwcylcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR3aXR0ZXJNaW51dGVOb3cuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/twitterMinuteNow.js\n"));

/***/ }),

/***/ "./node_modules/javascript-time-ago/modules/style/twitterNow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/javascript-time-ago/modules/style/twitterNow.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _twitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./twitter.js */ \"./node_modules/javascript-time-ago/modules/style/twitter.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (_objectSpread(_objectSpread({}, _twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]), {}, {\r\n  // Add \"now\".\r\n  steps: [{\r\n    formatAs: 'now'\r\n  }].concat(_twitter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].steps)\r\n}));\r\n//# sourceMappingURL=twitterNow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvamF2YXNjcmlwdC10aW1lLWFnby9tb2R1bGVzL3N0eWxlL3R3aXR0ZXJOb3cuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkMsZ0NBQWdDLG9DQUFvQyxvREFBb0QsNkRBQTZELGlFQUFpRSxzQ0FBc0M7QUFDdlU7QUFDQSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSztBQUMxZTtBQUNBLDRDQUE0QyxrQkFBa0Isa0NBQWtDLG9FQUFvRSxLQUFLLE9BQU8sb0JBQW9CO0FBQ3BNO0FBQ21DO0FBQ25DLCtEQUFlLDhCQUE4QixFQUFFLG1EQUFPLEtBQUs7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRyxTQUFTLHlEQUFhO0FBQ3pCLENBQUMsQ0FBQyxFQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2phdmFzY3JpcHQtdGltZS1hZ28vbW9kdWxlcy9zdHlsZS90d2l0dGVyTm93LmpzPzNlN2MiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cclxuXHJcbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XHJcblxyXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxyXG5cclxuaW1wb3J0IHR3aXR0ZXIgZnJvbSAnLi90d2l0dGVyLmpzJztcclxuZXhwb3J0IGRlZmF1bHQgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0d2l0dGVyKSwge30sIHtcclxuICAvLyBBZGQgXCJub3dcIi5cclxuICBzdGVwczogW3tcclxuICAgIGZvcm1hdEFzOiAnbm93J1xyXG4gIH1dLmNvbmNhdCh0d2l0dGVyLnN0ZXBzKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHdpdHRlck5vdy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/javascript-time-ago/modules/style/twitterNow.js\n"));

/***/ }),

/***/ "./node_modules/js-base64/base64.mjs":
/*!*******************************************!*\
  !*** ./node_modules/js-base64/base64.mjs ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Base64\": function() { return /* binding */ gBase64; },\n/* harmony export */   \"VERSION\": function() { return /* binding */ VERSION; },\n/* harmony export */   \"atob\": function() { return /* binding */ _atob; },\n/* harmony export */   \"atobPolyfill\": function() { return /* binding */ atobPolyfill; },\n/* harmony export */   \"btoa\": function() { return /* binding */ _btoa; },\n/* harmony export */   \"btoaPolyfill\": function() { return /* binding */ btoaPolyfill; },\n/* harmony export */   \"btou\": function() { return /* binding */ btou; },\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"encode\": function() { return /* binding */ encode; },\n/* harmony export */   \"encodeURI\": function() { return /* binding */ encodeURI; },\n/* harmony export */   \"encodeURL\": function() { return /* binding */ encodeURI; },\n/* harmony export */   \"extendBuiltins\": function() { return /* binding */ extendBuiltins; },\n/* harmony export */   \"extendString\": function() { return /* binding */ extendString; },\n/* harmony export */   \"extendUint8Array\": function() { return /* binding */ extendUint8Array; },\n/* harmony export */   \"fromBase64\": function() { return /* binding */ decode; },\n/* harmony export */   \"fromUint8Array\": function() { return /* binding */ fromUint8Array; },\n/* harmony export */   \"isValid\": function() { return /* binding */ isValid; },\n/* harmony export */   \"toBase64\": function() { return /* binding */ encode; },\n/* harmony export */   \"toUint8Array\": function() { return /* binding */ toUint8Array; },\n/* harmony export */   \"utob\": function() { return /* binding */ utob; },\n/* harmony export */   \"version\": function() { return /* binding */ version; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/**\r\n *  base64.ts\r\n *\r\n *  Licensed under the BSD 3-Clause License.\r\n *    http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n *  References:\r\n *    http://en.wikipedia.org/wiki/Base64\r\n *\r\n * @author Dan Kogai (https://github.com/dankogai)\r\n */\r\nconst version = '3.7.5';\r\n/**\r\n * @deprecated use lowercase `version`.\r\n */\r\nconst VERSION = version;\r\nconst _hasatob = typeof atob === 'function';\r\nconst _hasbtoa = typeof btoa === 'function';\r\nconst _hasBuffer = typeof Buffer === 'function';\r\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\r\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\r\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nconst b64chs = Array.prototype.slice.call(b64ch);\r\nconst b64tab = ((a) => {\r\n    let tab = {};\r\n    a.forEach((c, i) => tab[c] = i);\r\n    return tab;\r\n})(b64chs);\r\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\r\nconst _fromCC = String.fromCharCode.bind(String);\r\nconst _U8Afrom = typeof Uint8Array.from === 'function'\r\n    ? Uint8Array.from.bind(Uint8Array)\r\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\r\nconst _mkUriSafe = (src) => src\r\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\r\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\r\n/**\r\n * polyfill version of `btoa`\r\n */\r\nconst btoaPolyfill = (bin) => {\r\n    // console.log('polyfilled');\r\n    let u32, c0, c1, c2, asc = '';\r\n    const pad = bin.length % 3;\r\n    for (let i = 0; i < bin.length;) {\r\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\r\n            (c1 = bin.charCodeAt(i++)) > 255 ||\r\n            (c2 = bin.charCodeAt(i++)) > 255)\r\n            throw new TypeError('invalid character found');\r\n        u32 = (c0 << 16) | (c1 << 8) | c2;\r\n        asc += b64chs[u32 >> 18 & 63]\r\n            + b64chs[u32 >> 12 & 63]\r\n            + b64chs[u32 >> 6 & 63]\r\n            + b64chs[u32 & 63];\r\n    }\r\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\r\n};\r\n/**\r\n * does what `window.btoa` of web browsers do.\r\n * @param {String} bin binary string\r\n * @returns {string} Base64-encoded string\r\n */\r\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\r\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\r\n        : btoaPolyfill;\r\nconst _fromUint8Array = _hasBuffer\r\n    ? (u8a) => Buffer.from(u8a).toString('base64')\r\n    : (u8a) => {\r\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\r\n        const maxargs = 0x1000;\r\n        let strs = [];\r\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\r\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\r\n        }\r\n        return _btoa(strs.join(''));\r\n    };\r\n/**\r\n * converts a Uint8Array to a Base64 string.\r\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\r\n * @returns {string} Base64 string\r\n */\r\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\r\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\r\n// const utob = (src: string) => unescape(encodeURIComponent(src));\r\n// reverting good old fationed regexp\r\nconst cb_utob = (c) => {\r\n    if (c.length < 2) {\r\n        var cc = c.charCodeAt(0);\r\n        return cc < 0x80 ? c\r\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\r\n                + _fromCC(0x80 | (cc & 0x3f)))\r\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\r\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\r\n                    + _fromCC(0x80 | (cc & 0x3f)));\r\n    }\r\n    else {\r\n        var cc = 0x10000\r\n            + (c.charCodeAt(0) - 0xD800) * 0x400\r\n            + (c.charCodeAt(1) - 0xDC00);\r\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\r\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\r\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\r\n            + _fromCC(0x80 | (cc & 0x3f)));\r\n    }\r\n};\r\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\r\n/**\r\n * @deprecated should have been internal use only.\r\n * @param {string} src UTF-8 string\r\n * @returns {string} UTF-16 string\r\n */\r\nconst utob = (u) => u.replace(re_utob, cb_utob);\r\n//\r\nconst _encode = _hasBuffer\r\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\r\n    : _TE\r\n        ? (s) => _fromUint8Array(_TE.encode(s))\r\n        : (s) => _btoa(utob(s));\r\n/**\r\n * converts a UTF-8-encoded string to a Base64 string.\r\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\r\n * @returns {string} Base64 string\r\n */\r\nconst encode = (src, urlsafe = false) => urlsafe\r\n    ? _mkUriSafe(_encode(src))\r\n    : _encode(src);\r\n/**\r\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\r\n * @returns {string} Base64 string\r\n */\r\nconst encodeURI = (src) => encode(src, true);\r\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\r\n// const btou = (src: string) => decodeURIComponent(escape(src));\r\n// reverting good old fationed regexp\r\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\r\nconst cb_btou = (cccc) => {\r\n    switch (cccc.length) {\r\n        case 4:\r\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\r\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\r\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\r\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\r\n            return (_fromCC((offset >>> 10) + 0xD800)\r\n                + _fromCC((offset & 0x3FF) + 0xDC00));\r\n        case 3:\r\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\r\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\r\n                | (0x3f & cccc.charCodeAt(2)));\r\n        default:\r\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\r\n                | (0x3f & cccc.charCodeAt(1)));\r\n    }\r\n};\r\n/**\r\n * @deprecated should have been internal use only.\r\n * @param {string} src UTF-16 string\r\n * @returns {string} UTF-8 string\r\n */\r\nconst btou = (b) => b.replace(re_btou, cb_btou);\r\n/**\r\n * polyfill version of `atob`\r\n */\r\nconst atobPolyfill = (asc) => {\r\n    // console.log('polyfilled');\r\n    asc = asc.replace(/\\s+/g, '');\r\n    if (!b64re.test(asc))\r\n        throw new TypeError('malformed base64.');\r\n    asc += '=='.slice(2 - (asc.length & 3));\r\n    let u24, bin = '', r1, r2;\r\n    for (let i = 0; i < asc.length;) {\r\n        u24 = b64tab[asc.charAt(i++)] << 18\r\n            | b64tab[asc.charAt(i++)] << 12\r\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\r\n            | (r2 = b64tab[asc.charAt(i++)]);\r\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\r\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\r\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\r\n    }\r\n    return bin;\r\n};\r\n/**\r\n * does what `window.atob` of web browsers do.\r\n * @param {String} asc Base64-encoded string\r\n * @returns {string} binary string\r\n */\r\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\r\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\r\n        : atobPolyfill;\r\n//\r\nconst _toUint8Array = _hasBuffer\r\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\r\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\r\n/**\r\n * converts a Base64 string to a Uint8Array.\r\n */\r\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\r\n//\r\nconst _decode = _hasBuffer\r\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\r\n    : _TD\r\n        ? (a) => _TD.decode(_toUint8Array(a))\r\n        : (a) => btou(_atob(a));\r\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\r\n/**\r\n * converts a Base64 string to a UTF-8 string.\r\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\r\n * @returns {string} UTF-8 string\r\n */\r\nconst decode = (src) => _decode(_unURI(src));\r\n/**\r\n * check if a value is a valid Base64 string\r\n * @param {String} src a value to check\r\n  */\r\nconst isValid = (src) => {\r\n    if (typeof src !== 'string')\r\n        return false;\r\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\r\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\r\n};\r\n//\r\nconst _noEnum = (v) => {\r\n    return {\r\n        value: v, enumerable: false, writable: true, configurable: true\r\n    };\r\n};\r\n/**\r\n * extend String.prototype with relevant methods\r\n */\r\nconst extendString = function () {\r\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\r\n    _add('fromBase64', function () { return decode(this); });\r\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\r\n    _add('toBase64URI', function () { return encode(this, true); });\r\n    _add('toBase64URL', function () { return encode(this, true); });\r\n    _add('toUint8Array', function () { return toUint8Array(this); });\r\n};\r\n/**\r\n * extend Uint8Array.prototype with relevant methods\r\n */\r\nconst extendUint8Array = function () {\r\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\r\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\r\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\r\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\r\n};\r\n/**\r\n * extend Builtin prototypes with relevant methods\r\n */\r\nconst extendBuiltins = () => {\r\n    extendString();\r\n    extendUint8Array();\r\n};\r\nconst gBase64 = {\r\n    version: version,\r\n    VERSION: VERSION,\r\n    atob: _atob,\r\n    atobPolyfill: atobPolyfill,\r\n    btoa: _btoa,\r\n    btoaPolyfill: btoaPolyfill,\r\n    fromBase64: decode,\r\n    toBase64: encode,\r\n    encode: encode,\r\n    encodeURI: encodeURI,\r\n    encodeURL: encodeURI,\r\n    utob: utob,\r\n    btou: btou,\r\n    decode: decode,\r\n    isValid: isValid,\r\n    fromUint8Array: fromUint8Array,\r\n    toUint8Array: toUint8Array,\r\n    extendString: extendString,\r\n    extendUint8Array: extendUint8Array,\r\n    extendBuiltins: extendBuiltins,\r\n};\r\n// makecjs:CUT //\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// and finally,\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanMtYmFzZTY0L2Jhc2U2NC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixNQUFNO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUNBQWlDLEVBQUUsb0JBQW9CLEVBQUUsc0JBQXNCLEVBQUU7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSw0QkFBNEIsTUFBTTtBQUNsQztBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLE9BQU87QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsRUFBRSx3QkFBd0IsRUFBRTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSw0QkFBNEIsTUFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsTUFBTTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELElBQUk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsc0JBQXNCO0FBQzNELDBDQUEwQywrQkFBK0I7QUFDekUsc0NBQXNDLDRCQUE0QjtBQUNsRSxzQ0FBc0MsNEJBQTRCO0FBQ2xFLHVDQUF1Qyw0QkFBNEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHVDQUF1QztBQUNqRixzQ0FBc0Msb0NBQW9DO0FBQzFFLHNDQUFzQyxvQ0FBb0M7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUI7QUFDQTtBQUNNO0FBQ0Q7QUFDQztBQUNEO0FBQ1E7QUFDRjtBQUNkO0FBQ0U7QUFDRztBQUNhO0FBQ2xCO0FBQ0U7QUFDQztBQUNPO0FBQ0Y7QUFDQTtBQUNJO0FBQ0Y7QUFDMUI7QUFDNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzLWJhc2U2NC9iYXNlNjQubWpzP2YyN2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqICBiYXNlNjQudHNcclxuICpcclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBCU0QgMy1DbGF1c2UgTGljZW5zZS5cclxuICogICAgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL0JTRC0zLUNsYXVzZVxyXG4gKlxyXG4gKiAgUmVmZXJlbmNlczpcclxuICogICAgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjRcclxuICpcclxuICogQGF1dGhvciBEYW4gS29nYWkgKGh0dHBzOi8vZ2l0aHViLmNvbS9kYW5rb2dhaSlcclxuICovXHJcbmNvbnN0IHZlcnNpb24gPSAnMy43LjUnO1xyXG4vKipcclxuICogQGRlcHJlY2F0ZWQgdXNlIGxvd2VyY2FzZSBgdmVyc2lvbmAuXHJcbiAqL1xyXG5jb25zdCBWRVJTSU9OID0gdmVyc2lvbjtcclxuY29uc3QgX2hhc2F0b2IgPSB0eXBlb2YgYXRvYiA9PT0gJ2Z1bmN0aW9uJztcclxuY29uc3QgX2hhc2J0b2EgPSB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJztcclxuY29uc3QgX2hhc0J1ZmZlciA9IHR5cGVvZiBCdWZmZXIgPT09ICdmdW5jdGlvbic7XHJcbmNvbnN0IF9URCA9IHR5cGVvZiBUZXh0RGVjb2RlciA9PT0gJ2Z1bmN0aW9uJyA/IG5ldyBUZXh0RGVjb2RlcigpIDogdW5kZWZpbmVkO1xyXG5jb25zdCBfVEUgPSB0eXBlb2YgVGV4dEVuY29kZXIgPT09ICdmdW5jdGlvbicgPyBuZXcgVGV4dEVuY29kZXIoKSA6IHVuZGVmaW5lZDtcclxuY29uc3QgYjY0Y2ggPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nO1xyXG5jb25zdCBiNjRjaHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChiNjRjaCk7XHJcbmNvbnN0IGI2NHRhYiA9ICgoYSkgPT4ge1xyXG4gICAgbGV0IHRhYiA9IHt9O1xyXG4gICAgYS5mb3JFYWNoKChjLCBpKSA9PiB0YWJbY10gPSBpKTtcclxuICAgIHJldHVybiB0YWI7XHJcbn0pKGI2NGNocyk7XHJcbmNvbnN0IGI2NHJlID0gL14oPzpbQS1aYS16XFxkK1xcL117NH0pKj8oPzpbQS1aYS16XFxkK1xcL117Mn0oPzo9PSk/fFtBLVphLXpcXGQrXFwvXXszfT0/KT8kLztcclxuY29uc3QgX2Zyb21DQyA9IFN0cmluZy5mcm9tQ2hhckNvZGUuYmluZChTdHJpbmcpO1xyXG5jb25zdCBfVThBZnJvbSA9IHR5cGVvZiBVaW50OEFycmF5LmZyb20gPT09ICdmdW5jdGlvbidcclxuICAgID8gVWludDhBcnJheS5mcm9tLmJpbmQoVWludDhBcnJheSlcclxuICAgIDogKGl0KSA9PiBuZXcgVWludDhBcnJheShBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChpdCwgMCkpO1xyXG5jb25zdCBfbWtVcmlTYWZlID0gKHNyYykgPT4gc3JjXHJcbiAgICAucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvWytcXC9dL2csIChtMCkgPT4gbTAgPT0gJysnID8gJy0nIDogJ18nKTtcclxuY29uc3QgX3RpZHlCNjQgPSAocykgPT4gcy5yZXBsYWNlKC9bXkEtWmEtejAtOVxcK1xcL10vZywgJycpO1xyXG4vKipcclxuICogcG9seWZpbGwgdmVyc2lvbiBvZiBgYnRvYWBcclxuICovXHJcbmNvbnN0IGJ0b2FQb2x5ZmlsbCA9IChiaW4pID0+IHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdwb2x5ZmlsbGVkJyk7XHJcbiAgICBsZXQgdTMyLCBjMCwgYzEsIGMyLCBhc2MgPSAnJztcclxuICAgIGNvbnN0IHBhZCA9IGJpbi5sZW5ndGggJSAzO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiaW4ubGVuZ3RoOykge1xyXG4gICAgICAgIGlmICgoYzAgPSBiaW4uY2hhckNvZGVBdChpKyspKSA+IDI1NSB8fFxyXG4gICAgICAgICAgICAoYzEgPSBiaW4uY2hhckNvZGVBdChpKyspKSA+IDI1NSB8fFxyXG4gICAgICAgICAgICAoYzIgPSBiaW4uY2hhckNvZGVBdChpKyspKSA+IDI1NSlcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBjaGFyYWN0ZXIgZm91bmQnKTtcclxuICAgICAgICB1MzIgPSAoYzAgPDwgMTYpIHwgKGMxIDw8IDgpIHwgYzI7XHJcbiAgICAgICAgYXNjICs9IGI2NGNoc1t1MzIgPj4gMTggJiA2M11cclxuICAgICAgICAgICAgKyBiNjRjaHNbdTMyID4+IDEyICYgNjNdXHJcbiAgICAgICAgICAgICsgYjY0Y2hzW3UzMiA+PiA2ICYgNjNdXHJcbiAgICAgICAgICAgICsgYjY0Y2hzW3UzMiAmIDYzXTtcclxuICAgIH1cclxuICAgIHJldHVybiBwYWQgPyBhc2Muc2xpY2UoMCwgcGFkIC0gMykgKyBcIj09PVwiLnN1YnN0cmluZyhwYWQpIDogYXNjO1xyXG59O1xyXG4vKipcclxuICogZG9lcyB3aGF0IGB3aW5kb3cuYnRvYWAgb2Ygd2ViIGJyb3dzZXJzIGRvLlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gYmluIGJpbmFyeSBzdHJpbmdcclxuICogQHJldHVybnMge3N0cmluZ30gQmFzZTY0LWVuY29kZWQgc3RyaW5nXHJcbiAqL1xyXG5jb25zdCBfYnRvYSA9IF9oYXNidG9hID8gKGJpbikgPT4gYnRvYShiaW4pXHJcbiAgICA6IF9oYXNCdWZmZXIgPyAoYmluKSA9PiBCdWZmZXIuZnJvbShiaW4sICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0JylcclxuICAgICAgICA6IGJ0b2FQb2x5ZmlsbDtcclxuY29uc3QgX2Zyb21VaW50OEFycmF5ID0gX2hhc0J1ZmZlclxyXG4gICAgPyAodThhKSA9PiBCdWZmZXIuZnJvbSh1OGEpLnRvU3RyaW5nKCdiYXNlNjQnKVxyXG4gICAgOiAodThhKSA9PiB7XHJcbiAgICAgICAgLy8gY2YuIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEyNzEwMDAxL2hvdy10by1jb252ZXJ0LXVpbnQ4LWFycmF5LXRvLWJhc2U2NC1lbmNvZGVkLXN0cmluZy8xMjcxMzMyNiMxMjcxMzMyNlxyXG4gICAgICAgIGNvbnN0IG1heGFyZ3MgPSAweDEwMDA7XHJcbiAgICAgICAgbGV0IHN0cnMgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IHU4YS5sZW5ndGg7IGkgPCBsOyBpICs9IG1heGFyZ3MpIHtcclxuICAgICAgICAgICAgc3Rycy5wdXNoKF9mcm9tQ0MuYXBwbHkobnVsbCwgdThhLnN1YmFycmF5KGksIGkgKyBtYXhhcmdzKSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gX2J0b2Eoc3Rycy5qb2luKCcnKSk7XHJcbiAgICB9O1xyXG4vKipcclxuICogY29udmVydHMgYSBVaW50OEFycmF5IHRvIGEgQmFzZTY0IHN0cmluZy5cclxuICogQHBhcmFtIHtib29sZWFufSBbdXJsc2FmZV0gVVJMLWFuZC1maWxlbmFtZS1zYWZlIGEgbGEgUkZDNDY0OCDCpzVcclxuICogQHJldHVybnMge3N0cmluZ30gQmFzZTY0IHN0cmluZ1xyXG4gKi9cclxuY29uc3QgZnJvbVVpbnQ4QXJyYXkgPSAodThhLCB1cmxzYWZlID0gZmFsc2UpID0+IHVybHNhZmUgPyBfbWtVcmlTYWZlKF9mcm9tVWludDhBcnJheSh1OGEpKSA6IF9mcm9tVWludDhBcnJheSh1OGEpO1xyXG4vLyBUaGlzIHRyaWNrIGlzIGZvdW5kIGJyb2tlbiBodHRwczovL2dpdGh1Yi5jb20vZGFua29nYWkvanMtYmFzZTY0L2lzc3Vlcy8xMzBcclxuLy8gY29uc3QgdXRvYiA9IChzcmM6IHN0cmluZykgPT4gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHNyYykpO1xyXG4vLyByZXZlcnRpbmcgZ29vZCBvbGQgZmF0aW9uZWQgcmVnZXhwXHJcbmNvbnN0IGNiX3V0b2IgPSAoYykgPT4ge1xyXG4gICAgaWYgKGMubGVuZ3RoIDwgMikge1xyXG4gICAgICAgIHZhciBjYyA9IGMuY2hhckNvZGVBdCgwKTtcclxuICAgICAgICByZXR1cm4gY2MgPCAweDgwID8gY1xyXG4gICAgICAgICAgICA6IGNjIDwgMHg4MDAgPyAoX2Zyb21DQygweGMwIHwgKGNjID4+PiA2KSlcclxuICAgICAgICAgICAgICAgICsgX2Zyb21DQygweDgwIHwgKGNjICYgMHgzZikpKVxyXG4gICAgICAgICAgICAgICAgOiAoX2Zyb21DQygweGUwIHwgKChjYyA+Pj4gMTIpICYgMHgwZikpXHJcbiAgICAgICAgICAgICAgICAgICAgKyBfZnJvbUNDKDB4ODAgfCAoKGNjID4+PiA2KSAmIDB4M2YpKVxyXG4gICAgICAgICAgICAgICAgICAgICsgX2Zyb21DQygweDgwIHwgKGNjICYgMHgzZikpKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHZhciBjYyA9IDB4MTAwMDBcclxuICAgICAgICAgICAgKyAoYy5jaGFyQ29kZUF0KDApIC0gMHhEODAwKSAqIDB4NDAwXHJcbiAgICAgICAgICAgICsgKGMuY2hhckNvZGVBdCgxKSAtIDB4REMwMCk7XHJcbiAgICAgICAgcmV0dXJuIChfZnJvbUNDKDB4ZjAgfCAoKGNjID4+PiAxOCkgJiAweDA3KSlcclxuICAgICAgICAgICAgKyBfZnJvbUNDKDB4ODAgfCAoKGNjID4+PiAxMikgJiAweDNmKSlcclxuICAgICAgICAgICAgKyBfZnJvbUNDKDB4ODAgfCAoKGNjID4+PiA2KSAmIDB4M2YpKVxyXG4gICAgICAgICAgICArIF9mcm9tQ0MoMHg4MCB8IChjYyAmIDB4M2YpKSk7XHJcbiAgICB9XHJcbn07XHJcbmNvbnN0IHJlX3V0b2IgPSAvW1xcdUQ4MDAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGRl18W15cXHgwMC1cXHg3Rl0vZztcclxuLyoqXHJcbiAqIEBkZXByZWNhdGVkIHNob3VsZCBoYXZlIGJlZW4gaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcmMgVVRGLTggc3RyaW5nXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFVURi0xNiBzdHJpbmdcclxuICovXHJcbmNvbnN0IHV0b2IgPSAodSkgPT4gdS5yZXBsYWNlKHJlX3V0b2IsIGNiX3V0b2IpO1xyXG4vL1xyXG5jb25zdCBfZW5jb2RlID0gX2hhc0J1ZmZlclxyXG4gICAgPyAocykgPT4gQnVmZmVyLmZyb20ocywgJ3V0ZjgnKS50b1N0cmluZygnYmFzZTY0JylcclxuICAgIDogX1RFXHJcbiAgICAgICAgPyAocykgPT4gX2Zyb21VaW50OEFycmF5KF9URS5lbmNvZGUocykpXHJcbiAgICAgICAgOiAocykgPT4gX2J0b2EodXRvYihzKSk7XHJcbi8qKlxyXG4gKiBjb252ZXJ0cyBhIFVURi04LWVuY29kZWQgc3RyaW5nIHRvIGEgQmFzZTY0IHN0cmluZy5cclxuICogQHBhcmFtIHtib29sZWFufSBbdXJsc2FmZV0gaWYgYHRydWVgIG1ha2UgdGhlIHJlc3VsdCBVUkwtc2FmZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBCYXNlNjQgc3RyaW5nXHJcbiAqL1xyXG5jb25zdCBlbmNvZGUgPSAoc3JjLCB1cmxzYWZlID0gZmFsc2UpID0+IHVybHNhZmVcclxuICAgID8gX21rVXJpU2FmZShfZW5jb2RlKHNyYykpXHJcbiAgICA6IF9lbmNvZGUoc3JjKTtcclxuLyoqXHJcbiAqIGNvbnZlcnRzIGEgVVRGLTgtZW5jb2RlZCBzdHJpbmcgdG8gVVJMLXNhZmUgQmFzZTY0IFJGQzQ2NDggwqc1LlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBCYXNlNjQgc3RyaW5nXHJcbiAqL1xyXG5jb25zdCBlbmNvZGVVUkkgPSAoc3JjKSA9PiBlbmNvZGUoc3JjLCB0cnVlKTtcclxuLy8gVGhpcyB0cmljayBpcyBmb3VuZCBicm9rZW4gaHR0cHM6Ly9naXRodWIuY29tL2RhbmtvZ2FpL2pzLWJhc2U2NC9pc3N1ZXMvMTMwXHJcbi8vIGNvbnN0IGJ0b3UgPSAoc3JjOiBzdHJpbmcpID0+IGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoc3JjKSk7XHJcbi8vIHJldmVydGluZyBnb29kIG9sZCBmYXRpb25lZCByZWdleHBcclxuY29uc3QgcmVfYnRvdSA9IC9bXFx4QzAtXFx4REZdW1xceDgwLVxceEJGXXxbXFx4RTAtXFx4RUZdW1xceDgwLVxceEJGXXsyfXxbXFx4RjAtXFx4RjddW1xceDgwLVxceEJGXXszfS9nO1xyXG5jb25zdCBjYl9idG91ID0gKGNjY2MpID0+IHtcclxuICAgIHN3aXRjaCAoY2NjYy5sZW5ndGgpIHtcclxuICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgIHZhciBjcCA9ICgoMHgwNyAmIGNjY2MuY2hhckNvZGVBdCgwKSkgPDwgMTgpXHJcbiAgICAgICAgICAgICAgICB8ICgoMHgzZiAmIGNjY2MuY2hhckNvZGVBdCgxKSkgPDwgMTIpXHJcbiAgICAgICAgICAgICAgICB8ICgoMHgzZiAmIGNjY2MuY2hhckNvZGVBdCgyKSkgPDwgNilcclxuICAgICAgICAgICAgICAgIHwgKDB4M2YgJiBjY2NjLmNoYXJDb2RlQXQoMykpLCBvZmZzZXQgPSBjcCAtIDB4MTAwMDA7XHJcbiAgICAgICAgICAgIHJldHVybiAoX2Zyb21DQygob2Zmc2V0ID4+PiAxMCkgKyAweEQ4MDApXHJcbiAgICAgICAgICAgICAgICArIF9mcm9tQ0MoKG9mZnNldCAmIDB4M0ZGKSArIDB4REMwMCkpO1xyXG4gICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgcmV0dXJuIF9mcm9tQ0MoKCgweDBmICYgY2NjYy5jaGFyQ29kZUF0KDApKSA8PCAxMilcclxuICAgICAgICAgICAgICAgIHwgKCgweDNmICYgY2NjYy5jaGFyQ29kZUF0KDEpKSA8PCA2KVxyXG4gICAgICAgICAgICAgICAgfCAoMHgzZiAmIGNjY2MuY2hhckNvZGVBdCgyKSkpO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiBfZnJvbUNDKCgoMHgxZiAmIGNjY2MuY2hhckNvZGVBdCgwKSkgPDwgNilcclxuICAgICAgICAgICAgICAgIHwgKDB4M2YgJiBjY2NjLmNoYXJDb2RlQXQoMSkpKTtcclxuICAgIH1cclxufTtcclxuLyoqXHJcbiAqIEBkZXByZWNhdGVkIHNob3VsZCBoYXZlIGJlZW4gaW50ZXJuYWwgdXNlIG9ubHkuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcmMgVVRGLTE2IHN0cmluZ1xyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBVVEYtOCBzdHJpbmdcclxuICovXHJcbmNvbnN0IGJ0b3UgPSAoYikgPT4gYi5yZXBsYWNlKHJlX2J0b3UsIGNiX2J0b3UpO1xyXG4vKipcclxuICogcG9seWZpbGwgdmVyc2lvbiBvZiBgYXRvYmBcclxuICovXHJcbmNvbnN0IGF0b2JQb2x5ZmlsbCA9IChhc2MpID0+IHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdwb2x5ZmlsbGVkJyk7XHJcbiAgICBhc2MgPSBhc2MucmVwbGFjZSgvXFxzKy9nLCAnJyk7XHJcbiAgICBpZiAoIWI2NHJlLnRlc3QoYXNjKSlcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdtYWxmb3JtZWQgYmFzZTY0LicpO1xyXG4gICAgYXNjICs9ICc9PScuc2xpY2UoMiAtIChhc2MubGVuZ3RoICYgMykpO1xyXG4gICAgbGV0IHUyNCwgYmluID0gJycsIHIxLCByMjtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXNjLmxlbmd0aDspIHtcclxuICAgICAgICB1MjQgPSBiNjR0YWJbYXNjLmNoYXJBdChpKyspXSA8PCAxOFxyXG4gICAgICAgICAgICB8IGI2NHRhYlthc2MuY2hhckF0KGkrKyldIDw8IDEyXHJcbiAgICAgICAgICAgIHwgKHIxID0gYjY0dGFiW2FzYy5jaGFyQXQoaSsrKV0pIDw8IDZcclxuICAgICAgICAgICAgfCAocjIgPSBiNjR0YWJbYXNjLmNoYXJBdChpKyspXSk7XHJcbiAgICAgICAgYmluICs9IHIxID09PSA2NCA/IF9mcm9tQ0ModTI0ID4+IDE2ICYgMjU1KVxyXG4gICAgICAgICAgICA6IHIyID09PSA2NCA/IF9mcm9tQ0ModTI0ID4+IDE2ICYgMjU1LCB1MjQgPj4gOCAmIDI1NSlcclxuICAgICAgICAgICAgICAgIDogX2Zyb21DQyh1MjQgPj4gMTYgJiAyNTUsIHUyNCA+PiA4ICYgMjU1LCB1MjQgJiAyNTUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGJpbjtcclxufTtcclxuLyoqXHJcbiAqIGRvZXMgd2hhdCBgd2luZG93LmF0b2JgIG9mIHdlYiBicm93c2VycyBkby5cclxuICogQHBhcmFtIHtTdHJpbmd9IGFzYyBCYXNlNjQtZW5jb2RlZCBzdHJpbmdcclxuICogQHJldHVybnMge3N0cmluZ30gYmluYXJ5IHN0cmluZ1xyXG4gKi9cclxuY29uc3QgX2F0b2IgPSBfaGFzYXRvYiA/IChhc2MpID0+IGF0b2IoX3RpZHlCNjQoYXNjKSlcclxuICAgIDogX2hhc0J1ZmZlciA/IChhc2MpID0+IEJ1ZmZlci5mcm9tKGFzYywgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdiaW5hcnknKVxyXG4gICAgICAgIDogYXRvYlBvbHlmaWxsO1xyXG4vL1xyXG5jb25zdCBfdG9VaW50OEFycmF5ID0gX2hhc0J1ZmZlclxyXG4gICAgPyAoYSkgPT4gX1U4QWZyb20oQnVmZmVyLmZyb20oYSwgJ2Jhc2U2NCcpKVxyXG4gICAgOiAoYSkgPT4gX1U4QWZyb20oX2F0b2IoYSkuc3BsaXQoJycpLm1hcChjID0+IGMuY2hhckNvZGVBdCgwKSkpO1xyXG4vKipcclxuICogY29udmVydHMgYSBCYXNlNjQgc3RyaW5nIHRvIGEgVWludDhBcnJheS5cclxuICovXHJcbmNvbnN0IHRvVWludDhBcnJheSA9IChhKSA9PiBfdG9VaW50OEFycmF5KF91blVSSShhKSk7XHJcbi8vXHJcbmNvbnN0IF9kZWNvZGUgPSBfaGFzQnVmZmVyXHJcbiAgICA/IChhKSA9PiBCdWZmZXIuZnJvbShhLCAnYmFzZTY0JykudG9TdHJpbmcoJ3V0ZjgnKVxyXG4gICAgOiBfVERcclxuICAgICAgICA/IChhKSA9PiBfVEQuZGVjb2RlKF90b1VpbnQ4QXJyYXkoYSkpXHJcbiAgICAgICAgOiAoYSkgPT4gYnRvdShfYXRvYihhKSk7XHJcbmNvbnN0IF91blVSSSA9IChhKSA9PiBfdGlkeUI2NChhLnJlcGxhY2UoL1stX10vZywgKG0wKSA9PiBtMCA9PSAnLScgPyAnKycgOiAnLycpKTtcclxuLyoqXHJcbiAqIGNvbnZlcnRzIGEgQmFzZTY0IHN0cmluZyB0byBhIFVURi04IHN0cmluZy5cclxuICogQHBhcmFtIHtTdHJpbmd9IHNyYyBCYXNlNjQgc3RyaW5nLiAgQm90aCBub3JtYWwgYW5kIFVSTC1zYWZlIGFyZSBzdXBwb3J0ZWRcclxuICogQHJldHVybnMge3N0cmluZ30gVVRGLTggc3RyaW5nXHJcbiAqL1xyXG5jb25zdCBkZWNvZGUgPSAoc3JjKSA9PiBfZGVjb2RlKF91blVSSShzcmMpKTtcclxuLyoqXHJcbiAqIGNoZWNrIGlmIGEgdmFsdWUgaXMgYSB2YWxpZCBCYXNlNjQgc3RyaW5nXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzcmMgYSB2YWx1ZSB0byBjaGVja1xyXG4gICovXHJcbmNvbnN0IGlzVmFsaWQgPSAoc3JjKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHNyYyAhPT0gJ3N0cmluZycpXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgY29uc3QgcyA9IHNyYy5yZXBsYWNlKC9cXHMrL2csICcnKS5yZXBsYWNlKC89ezAsMn0kLywgJycpO1xyXG4gICAgcmV0dXJuICEvW15cXHMwLTlhLXpBLVpcXCsvXS8udGVzdChzKSB8fCAhL1teXFxzMC05YS16QS1aXFwtX10vLnRlc3Qocyk7XHJcbn07XHJcbi8vXHJcbmNvbnN0IF9ub0VudW0gPSAodikgPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB2YWx1ZTogdiwgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH07XHJcbn07XHJcbi8qKlxyXG4gKiBleHRlbmQgU3RyaW5nLnByb3RvdHlwZSB3aXRoIHJlbGV2YW50IG1ldGhvZHNcclxuICovXHJcbmNvbnN0IGV4dGVuZFN0cmluZyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnN0IF9hZGQgPSAobmFtZSwgYm9keSkgPT4gT2JqZWN0LmRlZmluZVByb3BlcnR5KFN0cmluZy5wcm90b3R5cGUsIG5hbWUsIF9ub0VudW0oYm9keSkpO1xyXG4gICAgX2FkZCgnZnJvbUJhc2U2NCcsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRlY29kZSh0aGlzKTsgfSk7XHJcbiAgICBfYWRkKCd0b0Jhc2U2NCcsIGZ1bmN0aW9uICh1cmxzYWZlKSB7IHJldHVybiBlbmNvZGUodGhpcywgdXJsc2FmZSk7IH0pO1xyXG4gICAgX2FkZCgndG9CYXNlNjRVUkknLCBmdW5jdGlvbiAoKSB7IHJldHVybiBlbmNvZGUodGhpcywgdHJ1ZSk7IH0pO1xyXG4gICAgX2FkZCgndG9CYXNlNjRVUkwnLCBmdW5jdGlvbiAoKSB7IHJldHVybiBlbmNvZGUodGhpcywgdHJ1ZSk7IH0pO1xyXG4gICAgX2FkZCgndG9VaW50OEFycmF5JywgZnVuY3Rpb24gKCkgeyByZXR1cm4gdG9VaW50OEFycmF5KHRoaXMpOyB9KTtcclxufTtcclxuLyoqXHJcbiAqIGV4dGVuZCBVaW50OEFycmF5LnByb3RvdHlwZSB3aXRoIHJlbGV2YW50IG1ldGhvZHNcclxuICovXHJcbmNvbnN0IGV4dGVuZFVpbnQ4QXJyYXkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBfYWRkID0gKG5hbWUsIGJvZHkpID0+IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShVaW50OEFycmF5LnByb3RvdHlwZSwgbmFtZSwgX25vRW51bShib2R5KSk7XHJcbiAgICBfYWRkKCd0b0Jhc2U2NCcsIGZ1bmN0aW9uICh1cmxzYWZlKSB7IHJldHVybiBmcm9tVWludDhBcnJheSh0aGlzLCB1cmxzYWZlKTsgfSk7XHJcbiAgICBfYWRkKCd0b0Jhc2U2NFVSSScsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZyb21VaW50OEFycmF5KHRoaXMsIHRydWUpOyB9KTtcclxuICAgIF9hZGQoJ3RvQmFzZTY0VVJMJywgZnVuY3Rpb24gKCkgeyByZXR1cm4gZnJvbVVpbnQ4QXJyYXkodGhpcywgdHJ1ZSk7IH0pO1xyXG59O1xyXG4vKipcclxuICogZXh0ZW5kIEJ1aWx0aW4gcHJvdG90eXBlcyB3aXRoIHJlbGV2YW50IG1ldGhvZHNcclxuICovXHJcbmNvbnN0IGV4dGVuZEJ1aWx0aW5zID0gKCkgPT4ge1xyXG4gICAgZXh0ZW5kU3RyaW5nKCk7XHJcbiAgICBleHRlbmRVaW50OEFycmF5KCk7XHJcbn07XHJcbmNvbnN0IGdCYXNlNjQgPSB7XHJcbiAgICB2ZXJzaW9uOiB2ZXJzaW9uLFxyXG4gICAgVkVSU0lPTjogVkVSU0lPTixcclxuICAgIGF0b2I6IF9hdG9iLFxyXG4gICAgYXRvYlBvbHlmaWxsOiBhdG9iUG9seWZpbGwsXHJcbiAgICBidG9hOiBfYnRvYSxcclxuICAgIGJ0b2FQb2x5ZmlsbDogYnRvYVBvbHlmaWxsLFxyXG4gICAgZnJvbUJhc2U2NDogZGVjb2RlLFxyXG4gICAgdG9CYXNlNjQ6IGVuY29kZSxcclxuICAgIGVuY29kZTogZW5jb2RlLFxyXG4gICAgZW5jb2RlVVJJOiBlbmNvZGVVUkksXHJcbiAgICBlbmNvZGVVUkw6IGVuY29kZVVSSSxcclxuICAgIHV0b2I6IHV0b2IsXHJcbiAgICBidG91OiBidG91LFxyXG4gICAgZGVjb2RlOiBkZWNvZGUsXHJcbiAgICBpc1ZhbGlkOiBpc1ZhbGlkLFxyXG4gICAgZnJvbVVpbnQ4QXJyYXk6IGZyb21VaW50OEFycmF5LFxyXG4gICAgdG9VaW50OEFycmF5OiB0b1VpbnQ4QXJyYXksXHJcbiAgICBleHRlbmRTdHJpbmc6IGV4dGVuZFN0cmluZyxcclxuICAgIGV4dGVuZFVpbnQ4QXJyYXk6IGV4dGVuZFVpbnQ4QXJyYXksXHJcbiAgICBleHRlbmRCdWlsdGluczogZXh0ZW5kQnVpbHRpbnMsXHJcbn07XHJcbi8vIG1ha2VjanM6Q1VUIC8vXHJcbmV4cG9ydCB7IHZlcnNpb24gfTtcclxuZXhwb3J0IHsgVkVSU0lPTiB9O1xyXG5leHBvcnQgeyBfYXRvYiBhcyBhdG9iIH07XHJcbmV4cG9ydCB7IGF0b2JQb2x5ZmlsbCB9O1xyXG5leHBvcnQgeyBfYnRvYSBhcyBidG9hIH07XHJcbmV4cG9ydCB7IGJ0b2FQb2x5ZmlsbCB9O1xyXG5leHBvcnQgeyBkZWNvZGUgYXMgZnJvbUJhc2U2NCB9O1xyXG5leHBvcnQgeyBlbmNvZGUgYXMgdG9CYXNlNjQgfTtcclxuZXhwb3J0IHsgdXRvYiB9O1xyXG5leHBvcnQgeyBlbmNvZGUgfTtcclxuZXhwb3J0IHsgZW5jb2RlVVJJIH07XHJcbmV4cG9ydCB7IGVuY29kZVVSSSBhcyBlbmNvZGVVUkwgfTtcclxuZXhwb3J0IHsgYnRvdSB9O1xyXG5leHBvcnQgeyBkZWNvZGUgfTtcclxuZXhwb3J0IHsgaXNWYWxpZCB9O1xyXG5leHBvcnQgeyBmcm9tVWludDhBcnJheSB9O1xyXG5leHBvcnQgeyB0b1VpbnQ4QXJyYXkgfTtcclxuZXhwb3J0IHsgZXh0ZW5kU3RyaW5nIH07XHJcbmV4cG9ydCB7IGV4dGVuZFVpbnQ4QXJyYXkgfTtcclxuZXhwb3J0IHsgZXh0ZW5kQnVpbHRpbnMgfTtcclxuLy8gYW5kIGZpbmFsbHksXHJcbmV4cG9ydCB7IGdCYXNlNjQgYXMgQmFzZTY0IH07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/js-base64/base64.mjs\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/index.js":
/*!****************************************************!*\
  !*** ./node_modules/relative-time-format/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* reexport safe */ _modules_RelativeTimeFormat_js__WEBPACK_IMPORTED_MODULE_0__["default"]; }
/* harmony export */ });
/* harmony import */ var _modules_RelativeTimeFormat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/RelativeTimeFormat.js */ "./node_modules/relative-time-format/modules/RelativeTimeFormat.js");


/***/ }),

/***/ "./node_modules/relative-time-format/modules/LocaleDataStore.js":
/*!**********************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/LocaleDataStore.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addLocaleData\": function() { return /* binding */ addLocaleData; },\n/* harmony export */   \"getDefaultLocale\": function() { return /* binding */ getDefaultLocale; },\n/* harmony export */   \"getLocaleData\": function() { return /* binding */ getLocaleData; },\n/* harmony export */   \"resolveLocale\": function() { return /* binding */ resolveLocale; },\n/* harmony export */   \"setDefaultLocale\": function() { return /* binding */ setDefaultLocale; }\n/* harmony export */ });\n// Fallback locale.\r\n// (when not a single one of the supplied \"preferred\" locales is available)\r\nvar defaultLocale = 'en'; // For all locales added\r\n// their relative time formatter messages will be stored here.\r\n\r\nvar localesData = {}; // According to the spec BCP 47 language tags are case-insensitive.\r\n// https://tools.ietf.org/html/rfc5646\r\n\r\nvar lowercaseLocaleLookup = {};\r\nfunction getDefaultLocale() {\r\n  return defaultLocale;\r\n}\r\nfunction setDefaultLocale(locale) {\r\n  defaultLocale = locale;\r\n}\r\n/**\r\n * Gets locale data previously added by `addLocaleData()`.\r\n * @return  {object} [localeData]\r\n */\r\n\r\nfunction getLocaleData(locale) {\r\n  return localesData[locale];\r\n}\r\n/**\r\n * Adds locale data.\r\n * Is called by `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {object} localeData\r\n */\r\n\r\nfunction addLocaleData(localeData) {\r\n  if (!localeData) {\r\n    throw new Error('No locale data passed');\r\n  } // This locale data is stored in a global variable\r\n  // and later used when calling `.format(time)`.\r\n\r\n\r\n  localesData[localeData.locale] = localeData;\r\n  lowercaseLocaleLookup[localeData.locale.toLowerCase()] = localeData.locale;\r\n}\r\n/**\r\n * Returns a locale for which locale data has been added\r\n * via `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n */\r\n\r\nfunction resolveLocale(locale) {\r\n  if (localesData[locale]) {\r\n    return locale;\r\n  }\r\n\r\n  if (lowercaseLocaleLookup[locale.toLowerCase()]) {\r\n    return lowercaseLocaleLookup[locale.toLowerCase()];\r\n  }\r\n}\r\n//# sourceMappingURL=LocaleDataStore.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVsYXRpdmUtdGltZS1mb3JtYXQvbW9kdWxlcy9Mb2NhbGVEYXRhU3RvcmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlbGF0aXZlLXRpbWUtZm9ybWF0L21vZHVsZXMvTG9jYWxlRGF0YVN0b3JlLmpzPzFjMTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmFsbGJhY2sgbG9jYWxlLlxyXG4vLyAod2hlbiBub3QgYSBzaW5nbGUgb25lIG9mIHRoZSBzdXBwbGllZCBcInByZWZlcnJlZFwiIGxvY2FsZXMgaXMgYXZhaWxhYmxlKVxyXG52YXIgZGVmYXVsdExvY2FsZSA9ICdlbic7IC8vIEZvciBhbGwgbG9jYWxlcyBhZGRlZFxyXG4vLyB0aGVpciByZWxhdGl2ZSB0aW1lIGZvcm1hdHRlciBtZXNzYWdlcyB3aWxsIGJlIHN0b3JlZCBoZXJlLlxyXG5cclxudmFyIGxvY2FsZXNEYXRhID0ge307IC8vIEFjY29yZGluZyB0byB0aGUgc3BlYyBCQ1AgNDcgbGFuZ3VhZ2UgdGFncyBhcmUgY2FzZS1pbnNlbnNpdGl2ZS5cclxuLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzU2NDZcclxuXHJcbnZhciBsb3dlcmNhc2VMb2NhbGVMb29rdXAgPSB7fTtcclxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRMb2NhbGUoKSB7XHJcbiAgcmV0dXJuIGRlZmF1bHRMb2NhbGU7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRMb2NhbGUobG9jYWxlKSB7XHJcbiAgZGVmYXVsdExvY2FsZSA9IGxvY2FsZTtcclxufVxyXG4vKipcclxuICogR2V0cyBsb2NhbGUgZGF0YSBwcmV2aW91c2x5IGFkZGVkIGJ5IGBhZGRMb2NhbGVEYXRhKClgLlxyXG4gKiBAcmV0dXJuICB7b2JqZWN0fSBbbG9jYWxlRGF0YV1cclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9jYWxlRGF0YShsb2NhbGUpIHtcclxuICByZXR1cm4gbG9jYWxlc0RhdGFbbG9jYWxlXTtcclxufVxyXG4vKipcclxuICogQWRkcyBsb2NhbGUgZGF0YS5cclxuICogSXMgY2FsbGVkIGJ5IGBSZWxhdGl2ZVRpbWVGb3JtYXQuYWRkTG9jYWxlKC4uLilgLlxyXG4gKiBAcGFyYW0gIHtvYmplY3R9IGxvY2FsZURhdGFcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYWRkTG9jYWxlRGF0YShsb2NhbGVEYXRhKSB7XHJcbiAgaWYgKCFsb2NhbGVEYXRhKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGxvY2FsZSBkYXRhIHBhc3NlZCcpO1xyXG4gIH0gLy8gVGhpcyBsb2NhbGUgZGF0YSBpcyBzdG9yZWQgaW4gYSBnbG9iYWwgdmFyaWFibGVcclxuICAvLyBhbmQgbGF0ZXIgdXNlZCB3aGVuIGNhbGxpbmcgYC5mb3JtYXQodGltZSlgLlxyXG5cclxuXHJcbiAgbG9jYWxlc0RhdGFbbG9jYWxlRGF0YS5sb2NhbGVdID0gbG9jYWxlRGF0YTtcclxuICBsb3dlcmNhc2VMb2NhbGVMb29rdXBbbG9jYWxlRGF0YS5sb2NhbGUudG9Mb3dlckNhc2UoKV0gPSBsb2NhbGVEYXRhLmxvY2FsZTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBhIGxvY2FsZSBmb3Igd2hpY2ggbG9jYWxlIGRhdGEgaGFzIGJlZW4gYWRkZWRcclxuICogdmlhIGBSZWxhdGl2ZVRpbWVGb3JtYXQuYWRkTG9jYWxlKC4uLilgLlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGxvY2FsZVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9IFtsb2NhbGVdXHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVMb2NhbGUobG9jYWxlKSB7XHJcbiAgaWYgKGxvY2FsZXNEYXRhW2xvY2FsZV0pIHtcclxuICAgIHJldHVybiBsb2NhbGU7XHJcbiAgfVxyXG5cclxuICBpZiAobG93ZXJjYXNlTG9jYWxlTG9va3VwW2xvY2FsZS50b0xvd2VyQ2FzZSgpXSkge1xyXG4gICAgcmV0dXJuIGxvd2VyY2FzZUxvY2FsZUxvb2t1cFtsb2NhbGUudG9Mb3dlckNhc2UoKV07XHJcbiAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvY2FsZURhdGFTdG9yZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/LocaleDataStore.js\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/modules/PluralRuleFunctions.js":
/*!**************************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/PluralRuleFunctions.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// (this file was autogenerated by `generate-locales`)\r\n// \"plural rules\" functions are not stored in locale JSON files because they're not strings.\r\n// This file isn't big — it's about 5 kilobytes in size (minified).\r\n// Alternatively, the pluralization rules for each locale could be stored\r\n// in their JSON files in a non-parsed form and later parsed via `make-plural` library.\r\n// But `make-plural` library itself is relatively big in size:\r\n// `make-plural.min.js` is about 6 kilobytes (https://unpkg.com/make-plural/).\r\n// So, it's more practical to bypass runtime `make-plural` pluralization rules compilation\r\n// and just include the already compiled pluarlization rules for all locales in the library code.\r\nvar $ = {\r\n  af: function af(n) {\r\n    return n == 1 ? 'one' : 'other';\r\n  },\r\n  am: function am(n) {\r\n    return n >= 0 && n <= 1 ? 'one' : 'other';\r\n  },\r\n  ar: function ar(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n,\r\n        n100 = t0 && s[0].slice(-2);\r\n    return n == 0 ? 'zero' : n == 1 ? 'one' : n == 2 ? 'two' : n100 >= 3 && n100 <= 10 ? 'few' : n100 >= 11 && n100 <= 99 ? 'many' : 'other';\r\n  },\r\n  ast: function ast(n) {\r\n    var s = String(n).split('.'),\r\n        v0 = !s[1];\r\n    return n == 1 && v0 ? 'one' : 'other';\r\n  },\r\n  be: function be(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n,\r\n        n10 = t0 && s[0].slice(-1),\r\n        n100 = t0 && s[0].slice(-2);\r\n    return n10 == 1 && n100 != 11 ? 'one' : n10 >= 2 && n10 <= 4 && (n100 < 12 || n100 > 14) ? 'few' : t0 && n10 == 0 || n10 >= 5 && n10 <= 9 || n100 >= 11 && n100 <= 14 ? 'many' : 'other';\r\n  },\r\n  br: function br(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n,\r\n        n10 = t0 && s[0].slice(-1),\r\n        n100 = t0 && s[0].slice(-2),\r\n        n1000000 = t0 && s[0].slice(-6);\r\n    return n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91 ? 'one' : n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92 ? 'two' : (n10 == 3 || n10 == 4 || n10 == 9) && (n100 < 10 || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90 || n100 > 99) ? 'few' : n != 0 && t0 && n1000000 == 0 ? 'many' : 'other';\r\n  },\r\n  bs: function bs(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        f = s[1] || '',\r\n        v0 = !s[1],\r\n        i10 = i.slice(-1),\r\n        i100 = i.slice(-2),\r\n        f10 = f.slice(-1),\r\n        f100 = f.slice(-2);\r\n    return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : v0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14) || f10 >= 2 && f10 <= 4 && (f100 < 12 || f100 > 14) ? 'few' : 'other';\r\n  },\r\n  ca: function ca(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i1000000 = i.slice(-6);\r\n    return n == 1 && v0 ? 'one' : i != 0 && i1000000 == 0 && v0 ? 'many' : 'other';\r\n  },\r\n  ceb: function ceb(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        f = s[1] || '',\r\n        v0 = !s[1],\r\n        i10 = i.slice(-1),\r\n        f10 = f.slice(-1);\r\n    return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\r\n  },\r\n  cs: function cs(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1];\r\n    return n == 1 && v0 ? 'one' : i >= 2 && i <= 4 && v0 ? 'few' : !v0 ? 'many' : 'other';\r\n  },\r\n  cy: function cy(n) {\r\n    return n == 0 ? 'zero' : n == 1 ? 'one' : n == 2 ? 'two' : n == 3 ? 'few' : n == 6 ? 'many' : 'other';\r\n  },\r\n  da: function da(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        t0 = Number(s[0]) == n;\r\n    return n == 1 || !t0 && (i == 0 || i == 1) ? 'one' : 'other';\r\n  },\r\n  dsb: function dsb(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        f = s[1] || '',\r\n        v0 = !s[1],\r\n        i100 = i.slice(-2),\r\n        f100 = f.slice(-2);\r\n    return v0 && i100 == 1 || f100 == 1 ? 'one' : v0 && i100 == 2 || f100 == 2 ? 'two' : v0 && (i100 == 3 || i100 == 4) || f100 == 3 || f100 == 4 ? 'few' : 'other';\r\n  },\r\n  dz: function dz(n) {\r\n    return 'other';\r\n  },\r\n  es: function es(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i1000000 = i.slice(-6);\r\n    return n == 1 ? 'one' : i != 0 && i1000000 == 0 && v0 ? 'many' : 'other';\r\n  },\r\n  ff: function ff(n) {\r\n    return n >= 0 && n < 2 ? 'one' : 'other';\r\n  },\r\n  fr: function fr(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i1000000 = i.slice(-6);\r\n    return n >= 0 && n < 2 ? 'one' : i != 0 && i1000000 == 0 && v0 ? 'many' : 'other';\r\n  },\r\n  ga: function ga(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n;\r\n    return n == 1 ? 'one' : n == 2 ? 'two' : t0 && n >= 3 && n <= 6 ? 'few' : t0 && n >= 7 && n <= 10 ? 'many' : 'other';\r\n  },\r\n  gd: function gd(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n;\r\n    return n == 1 || n == 11 ? 'one' : n == 2 || n == 12 ? 'two' : t0 && n >= 3 && n <= 10 || t0 && n >= 13 && n <= 19 ? 'few' : 'other';\r\n  },\r\n  he: function he(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1];\r\n    return i == 1 && v0 || i == 0 && !v0 ? 'one' : i == 2 && v0 ? 'two' : 'other';\r\n  },\r\n  is: function is(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        t = (s[1] || '').replace(/0+$/, ''),\r\n        t0 = Number(s[0]) == n,\r\n        i10 = i.slice(-1),\r\n        i100 = i.slice(-2);\r\n    return t0 && i10 == 1 && i100 != 11 || t % 10 == 1 && t % 100 != 11 ? 'one' : 'other';\r\n  },\r\n  ksh: function ksh(n) {\r\n    return n == 0 ? 'zero' : n == 1 ? 'one' : 'other';\r\n  },\r\n  lt: function lt(n) {\r\n    var s = String(n).split('.'),\r\n        f = s[1] || '',\r\n        t0 = Number(s[0]) == n,\r\n        n10 = t0 && s[0].slice(-1),\r\n        n100 = t0 && s[0].slice(-2);\r\n    return n10 == 1 && (n100 < 11 || n100 > 19) ? 'one' : n10 >= 2 && n10 <= 9 && (n100 < 11 || n100 > 19) ? 'few' : f != 0 ? 'many' : 'other';\r\n  },\r\n  lv: function lv(n) {\r\n    var s = String(n).split('.'),\r\n        f = s[1] || '',\r\n        v = f.length,\r\n        t0 = Number(s[0]) == n,\r\n        n10 = t0 && s[0].slice(-1),\r\n        n100 = t0 && s[0].slice(-2),\r\n        f100 = f.slice(-2),\r\n        f10 = f.slice(-1);\r\n    return t0 && n10 == 0 || n100 >= 11 && n100 <= 19 || v == 2 && f100 >= 11 && f100 <= 19 ? 'zero' : n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one' : 'other';\r\n  },\r\n  mk: function mk(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        f = s[1] || '',\r\n        v0 = !s[1],\r\n        i10 = i.slice(-1),\r\n        i100 = i.slice(-2),\r\n        f10 = f.slice(-1),\r\n        f100 = f.slice(-2);\r\n    return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : 'other';\r\n  },\r\n  mt: function mt(n) {\r\n    var s = String(n).split('.'),\r\n        t0 = Number(s[0]) == n,\r\n        n100 = t0 && s[0].slice(-2);\r\n    return n == 1 ? 'one' : n == 2 ? 'two' : n == 0 || n100 >= 3 && n100 <= 10 ? 'few' : n100 >= 11 && n100 <= 19 ? 'many' : 'other';\r\n  },\r\n  pa: function pa(n) {\r\n    return n == 0 || n == 1 ? 'one' : 'other';\r\n  },\r\n  pl: function pl(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i10 = i.slice(-1),\r\n        i100 = i.slice(-2);\r\n    return n == 1 && v0 ? 'one' : v0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14) ? 'few' : v0 && i != 1 && (i10 == 0 || i10 == 1) || v0 && i10 >= 5 && i10 <= 9 || v0 && i100 >= 12 && i100 <= 14 ? 'many' : 'other';\r\n  },\r\n  pt: function pt(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i1000000 = i.slice(-6);\r\n    return i == 0 || i == 1 ? 'one' : i != 0 && i1000000 == 0 && v0 ? 'many' : 'other';\r\n  },\r\n  ro: function ro(n) {\r\n    var s = String(n).split('.'),\r\n        v0 = !s[1],\r\n        t0 = Number(s[0]) == n,\r\n        n100 = t0 && s[0].slice(-2);\r\n    return n == 1 && v0 ? 'one' : !v0 || n == 0 || n != 1 && n100 >= 1 && n100 <= 19 ? 'few' : 'other';\r\n  },\r\n  ru: function ru(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i10 = i.slice(-1),\r\n        i100 = i.slice(-2);\r\n    return v0 && i10 == 1 && i100 != 11 ? 'one' : v0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14) ? 'few' : v0 && i10 == 0 || v0 && i10 >= 5 && i10 <= 9 || v0 && i100 >= 11 && i100 <= 14 ? 'many' : 'other';\r\n  },\r\n  se: function se(n) {\r\n    return n == 1 ? 'one' : n == 2 ? 'two' : 'other';\r\n  },\r\n  si: function si(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        f = s[1] || '';\r\n    return n == 0 || n == 1 || i == 0 && f == 1 ? 'one' : 'other';\r\n  },\r\n  sl: function sl(n) {\r\n    var s = String(n).split('.'),\r\n        i = s[0],\r\n        v0 = !s[1],\r\n        i100 = i.slice(-2);\r\n    return v0 && i100 == 1 ? 'one' : v0 && i100 == 2 ? 'two' : v0 && (i100 == 3 || i100 == 4) || !v0 ? 'few' : 'other';\r\n  }\r\n};\r\n$.as = $.am;\r\n$.az = $.af;\r\n$.bg = $.af;\r\n$.bn = $.am;\r\n$.brx = $.af;\r\n$.ce = $.af;\r\n$.chr = $.af;\r\n$.de = $.ast;\r\n$.ee = $.af;\r\n$.el = $.af;\r\n$.en = $.ast;\r\n$.et = $.ast;\r\n$.eu = $.af;\r\n$.fa = $.am;\r\n$.fi = $.ast;\r\n$.fil = $.ceb;\r\n$.fo = $.af;\r\n$.fur = $.af;\r\n$.fy = $.ast;\r\n$.gl = $.ast;\r\n$.gu = $.am;\r\n$.ha = $.af;\r\n$.hi = $.am;\r\n$.hr = $.bs;\r\n$.hsb = $.dsb;\r\n$.hu = $.af;\r\n$.hy = $.ff;\r\n$.ia = $.ast;\r\n$.id = $.dz;\r\n$.ig = $.dz;\r\n$.it = $.ca;\r\n$.ja = $.dz;\r\n$.jgo = $.af;\r\n$.jv = $.dz;\r\n$.ka = $.af;\r\n$.kea = $.dz;\r\n$.kk = $.af;\r\n$.kl = $.af;\r\n$.km = $.dz;\r\n$.kn = $.am;\r\n$.ko = $.dz;\r\n$.ks = $.af;\r\n$.ku = $.af;\r\n$.ky = $.af;\r\n$.lb = $.af;\r\n$.lkt = $.dz;\r\n$.lo = $.dz;\r\n$.ml = $.af;\r\n$.mn = $.af;\r\n$.mr = $.af;\r\n$.ms = $.dz;\r\n$.my = $.dz;\r\n$.nb = $.af;\r\n$.ne = $.af;\r\n$.nl = $.ast;\r\n$.nn = $.af;\r\n$.no = $.af;\r\n$.or = $.af;\r\n$.pcm = $.am;\r\n$.ps = $.af;\r\n$.rm = $.af;\r\n$.sah = $.dz;\r\n$.sc = $.ast;\r\n$.sd = $.af;\r\n$.sk = $.cs;\r\n$.so = $.af;\r\n$.sq = $.af;\r\n$.sr = $.bs;\r\n$.su = $.dz;\r\n$.sv = $.ast;\r\n$.sw = $.ast;\r\n$.ta = $.af;\r\n$.te = $.af;\r\n$.th = $.dz;\r\n$.ti = $.pa;\r\n$.tk = $.af;\r\n$.to = $.dz;\r\n$.tr = $.af;\r\n$.ug = $.af;\r\n$.uk = $.ru;\r\n$.ur = $.ast;\r\n$.uz = $.af;\r\n$.vi = $.dz;\r\n$.wae = $.af;\r\n$.wo = $.dz;\r\n$.xh = $.af;\r\n$.yi = $.ast;\r\n$.yo = $.dz;\r\n$.yue = $.dz;\r\n$.zh = $.dz;\r\n$.zu = $.am;\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ($);\r\n//# sourceMappingURL=PluralRuleFunctions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/PluralRuleFunctions.js\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/modules/PluralRules.js":
/*!******************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/PluralRules.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PluralRules; }\n/* harmony export */ });\n/* harmony import */ var _PluralRuleFunctions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PluralRuleFunctions.js */ \"./node_modules/relative-time-format/modules/PluralRuleFunctions.js\");\n/* harmony import */ var _getPluralRulesLocale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getPluralRulesLocale.js */ \"./node_modules/relative-time-format/modules/getPluralRulesLocale.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\n// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// export { default as default } from 'intl-plural-rules-polyfill/cardinal'\r\n\r\n\r\n/**\r\n * `Intl.PluralRules` polyfill.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules\r\n */\r\n\r\nvar PluralRules = /*#__PURE__*/function () {\r\n  function PluralRules(locale, options) {\r\n    _classCallCheck(this, PluralRules);\r\n\r\n    var locales = PluralRules.supportedLocalesOf(locale);\r\n\r\n    if (locales.length === 0) {\r\n      throw new RangeError(\"Unsupported locale: \" + locale);\r\n    }\r\n\r\n    if (options && options.type !== \"cardinal\") {\r\n      throw new RangeError(\"Only \\\"cardinal\\\" \\\"type\\\" is supported\");\r\n    }\r\n\r\n    this.$ = _PluralRuleFunctions_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][(0,_getPluralRulesLocale_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(locales[0])];\r\n  }\r\n\r\n  _createClass(PluralRules, [{\r\n    key: \"select\",\r\n    value: function select(number) {\r\n      return this.$(number);\r\n    }\r\n  }], [{\r\n    key: \"supportedLocalesOf\",\r\n    value: function supportedLocalesOf(locales) {\r\n      if (typeof locales === \"string\") {\r\n        locales = [locales];\r\n      }\r\n\r\n      return locales.filter(function (locale) {\r\n        return _PluralRuleFunctions_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][(0,_getPluralRulesLocale_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(locale)];\r\n      });\r\n    }\r\n  }]);\r\n\r\n  return PluralRules;\r\n}();\r\n\r\n\r\n//# sourceMappingURL=PluralRules.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVsYXRpdmUtdGltZS1mb3JtYXQvbW9kdWxlcy9QbHVyYWxSdWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrREFBa0QsMENBQTBDO0FBQzVGO0FBQ0EsNENBQTRDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQ7QUFDL1A7QUFDQSw4REFBOEQsc0VBQXNFLDhEQUE4RCxrREFBa0QsaUJBQWlCLEdBQUc7QUFDeFE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDMEI7QUFDRTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsK0RBQW1CLENBQUMsb0VBQW9CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrREFBbUIsQ0FBQyxvRUFBb0I7QUFDdkQsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlbGF0aXZlLXRpbWUtZm9ybWF0L21vZHVsZXMvUGx1cmFsUnVsZXMuanM/NWZkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cclxuXHJcbi8vIEltcG9ydGluZyBgUGx1cmFsUnVsZWAgcG9seWZpbGwgZnJvbSBhIHNlcGFyYXRlIHBhY2thZ2VcclxuLy8gcmVzdWx0cyBpbiBhIGJ1bmRsZSB0aGF0IGlzIGxhcmdlciBieSAxa0IgZm9yIHNvbWUgcmVhc29uLlxyXG4vLyBleHBvcnQgeyBkZWZhdWx0IGFzIGRlZmF1bHQgfSBmcm9tICdpbnRsLXBsdXJhbC1ydWxlcy1wb2x5ZmlsbC9jYXJkaW5hbCdcclxuaW1wb3J0IFBsdXJhbFJ1bGVGdW5jdGlvbnMgZnJvbSBcIi4vUGx1cmFsUnVsZUZ1bmN0aW9ucy5qc1wiO1xyXG5pbXBvcnQgZ2V0UGx1cmFsUnVsZXNMb2NhbGUgZnJvbSBcIi4vZ2V0UGx1cmFsUnVsZXNMb2NhbGUuanNcIjtcclxuLyoqXHJcbiAqIGBJbnRsLlBsdXJhbFJ1bGVzYCBwb2x5ZmlsbC5cclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUGx1cmFsUnVsZXNcclxuICovXHJcblxyXG52YXIgUGx1cmFsUnVsZXMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xyXG4gIGZ1bmN0aW9uIFBsdXJhbFJ1bGVzKGxvY2FsZSwgb3B0aW9ucykge1xyXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBsdXJhbFJ1bGVzKTtcclxuXHJcbiAgICB2YXIgbG9jYWxlcyA9IFBsdXJhbFJ1bGVzLnN1cHBvcnRlZExvY2FsZXNPZihsb2NhbGUpO1xyXG5cclxuICAgIGlmIChsb2NhbGVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVuc3VwcG9ydGVkIGxvY2FsZTogXCIgKyBsb2NhbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMudHlwZSAhPT0gXCJjYXJkaW5hbFwiKSB7XHJcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiT25seSBcXFwiY2FyZGluYWxcXFwiIFxcXCJ0eXBlXFxcIiBpcyBzdXBwb3J0ZWRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy4kID0gUGx1cmFsUnVsZUZ1bmN0aW9uc1tnZXRQbHVyYWxSdWxlc0xvY2FsZShsb2NhbGVzWzBdKV07XHJcbiAgfVxyXG5cclxuICBfY3JlYXRlQ2xhc3MoUGx1cmFsUnVsZXMsIFt7XHJcbiAgICBrZXk6IFwic2VsZWN0XCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2VsZWN0KG51bWJlcikge1xyXG4gICAgICByZXR1cm4gdGhpcy4kKG51bWJlcik7XHJcbiAgICB9XHJcbiAgfV0sIFt7XHJcbiAgICBrZXk6IFwic3VwcG9ydGVkTG9jYWxlc09mXCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3VwcG9ydGVkTG9jYWxlc09mKGxvY2FsZXMpIHtcclxuICAgICAgaWYgKHR5cGVvZiBsb2NhbGVzID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgbG9jYWxlcyA9IFtsb2NhbGVzXTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGxvY2FsZXMuZmlsdGVyKGZ1bmN0aW9uIChsb2NhbGUpIHtcclxuICAgICAgICByZXR1cm4gUGx1cmFsUnVsZUZ1bmN0aW9uc1tnZXRQbHVyYWxSdWxlc0xvY2FsZShsb2NhbGUpXTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfV0pO1xyXG5cclxuICByZXR1cm4gUGx1cmFsUnVsZXM7XHJcbn0oKTtcclxuXHJcbmV4cG9ydCB7IFBsdXJhbFJ1bGVzIGFzIGRlZmF1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGx1cmFsUnVsZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/PluralRules.js\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/modules/RelativeTimeFormat.js":
/*!*************************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/RelativeTimeFormat.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UNITS\": function() { return /* binding */ UNITS; },\n/* harmony export */   \"default\": function() { return /* binding */ RelativeTimeFormat; }\n/* harmony export */ });\n/* harmony import */ var _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LocaleDataStore.js */ \"./node_modules/relative-time-format/modules/LocaleDataStore.js\");\n/* harmony import */ var _resolveLocale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolveLocale.js */ \"./node_modules/relative-time-format/modules/resolveLocale.js\");\n/* harmony import */ var _PluralRules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PluralRules.js */ \"./node_modules/relative-time-format/modules/PluralRules.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\n\r\n\r\n // Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\r\n// Valid time units.\r\n\r\nvar UNITS = [\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"]; // Valid values for the `numeric` option.\r\n\r\nvar NUMERIC_VALUES = [\"auto\", \"always\"]; // Valid values for the `style` option.\r\n\r\nvar STYLE_VALUES = [\"long\", \"short\", \"narrow\"]; // Valid values for the `localeMatcher` option.\r\n\r\nvar LOCALE_MATCHER_VALUES = [\"lookup\", \"best fit\"];\r\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\r\n\r\nvar RelativeTimeFormat = /*#__PURE__*/function () {\r\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\r\n  function RelativeTimeFormat() {\r\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    _classCallCheck(this, RelativeTimeFormat);\r\n\r\n    var numeric = options.numeric,\r\n        style = options.style,\r\n        localeMatcher = options.localeMatcher;\r\n    this.numeric = \"always\";\r\n    this.style = \"long\";\r\n    this.localeMatcher = \"lookup\"; // Set `numeric` option.\r\n\r\n    if (numeric !== undefined) {\r\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\r\n        throw new RangeError(\"Invalid \\\"numeric\\\" option: \".concat(numeric));\r\n      }\r\n\r\n      this.numeric = numeric;\r\n    } // Set `style` option.\r\n\r\n\r\n    if (style !== undefined) {\r\n      if (STYLE_VALUES.indexOf(style) < 0) {\r\n        throw new RangeError(\"Invalid \\\"style\\\" option: \".concat(style));\r\n      }\r\n\r\n      this.style = style;\r\n    } // Set `localeMatcher` option.\r\n\r\n\r\n    if (localeMatcher !== undefined) {\r\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\r\n        throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));\r\n      }\r\n\r\n      this.localeMatcher = localeMatcher;\r\n    } // Set `locale`.\r\n    // Convert `locales` to an array.\r\n\r\n\r\n    if (typeof locales === 'string') {\r\n      locales = [locales];\r\n    } // Add default locale.\r\n\r\n\r\n    locales.push((0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultLocale)()); // Choose the most appropriate locale.\r\n\r\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\r\n      localeMatcher: this.localeMatcher\r\n    })[0];\r\n\r\n    if (!this.locale) {\r\n      throw new Error(\"No supported locale was found\");\r\n    } // Construct an `Intl.PluralRules` instance (polyfill).\r\n\r\n\r\n    if (_PluralRules_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].supportedLocalesOf(this.locale).length > 0) {\r\n      this.pluralRules = new _PluralRules_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.locale);\r\n    } else {\r\n      console.warn(\"\\\"\".concat(this.locale, \"\\\" locale is not supported\"));\r\n    } // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n\r\n\r\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n      this.numberFormat = new Intl.NumberFormat(this.locale);\r\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem;\r\n    } else {\r\n      this.numberingSystem = 'latn';\r\n    }\r\n\r\n    this.locale = (0,_resolveLocale_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.locale, {\r\n      localeMatcher: this.localeMatcher\r\n    });\r\n  }\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\r\n\r\n\r\n  _createClass(RelativeTimeFormat, [{\r\n    key: \"format\",\r\n    value: function format() {\r\n      var _parseFormatArgs = parseFormatArgs(arguments),\r\n          _parseFormatArgs2 = _slicedToArray(_parseFormatArgs, 2),\r\n          number = _parseFormatArgs2[0],\r\n          unit = _parseFormatArgs2[1];\r\n\r\n      return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)));\r\n    }\r\n    /**\r\n     * Formats time `number` in `units` (either in past or in future).\r\n     * @param {number} number - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Version 1 (deprecated).\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"day\", value: \"100\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     * //\r\n     * // Version 2.\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     */\r\n\r\n  }, {\r\n    key: \"formatToParts\",\r\n    value: function formatToParts() {\r\n      var _parseFormatArgs3 = parseFormatArgs(arguments),\r\n          _parseFormatArgs4 = _slicedToArray(_parseFormatArgs3, 2),\r\n          number = _parseFormatArgs4[0],\r\n          unit = _parseFormatArgs4[1];\r\n\r\n      var rule = this.getRule(number, unit);\r\n      var valueIndex = rule.indexOf(\"{0}\"); // \"yesterday\"/\"today\"/\"tomorrow\".\r\n\r\n      if (valueIndex < 0) {\r\n        return [{\r\n          type: \"literal\",\r\n          value: rule\r\n        }];\r\n      }\r\n\r\n      var parts = [];\r\n\r\n      if (valueIndex > 0) {\r\n        parts.push({\r\n          type: \"literal\",\r\n          value: rule.slice(0, valueIndex)\r\n        });\r\n      }\r\n\r\n      parts = parts.concat(this.formatNumberToParts(Math.abs(number)).map(function (part) {\r\n        return _objectSpread(_objectSpread({}, part), {}, {\r\n          unit: unit\r\n        });\r\n      }));\r\n\r\n      if (valueIndex + \"{0}\".length < rule.length - 1) {\r\n        parts.push({\r\n          type: \"literal\",\r\n          value: rule.slice(valueIndex + \"{0}\".length)\r\n        });\r\n      }\r\n\r\n      return parts;\r\n    }\r\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {string}\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getRule(-2, \"day\")\r\n     */\r\n\r\n  }, {\r\n    key: \"getRule\",\r\n    value: function getRule(value, unit) {\r\n      // Get locale-specific time interval formatting rules\r\n      // of a given `style` for the given value of measurement `unit`.\r\n      //\r\n      // E.g.:\r\n      //\r\n      // ```json\r\n      // {\r\n      //  \"past\": {\r\n      //    \"one\": \"a second ago\",\r\n      //    \"other\": \"{0} seconds ago\"\r\n      //  },\r\n      //  \"future\": {\r\n      //    \"one\": \"in a second\",\r\n      //    \"other\": \"in {0} seconds\"\r\n      //  }\r\n      // }\r\n      // ```\r\n      //\r\n      var unitMessages = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.getLocaleData)(this.locale)[this.style][unit]; // Bundle size optimization technique for styles like\r\n      // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\r\n\r\n      if (typeof unitMessages === 'string') {\r\n        return unitMessages;\r\n      } // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\r\n\r\n\r\n      if (this.numeric === \"auto\") {\r\n        // \"yesterday\", \"the day before yesterday\", etc.\r\n        if (value === -2 || value === -1) {\r\n          var message = unitMessages[\"previous\".concat(value === -1 ? '' : '-' + Math.abs(value))];\r\n\r\n          if (message) {\r\n            return message;\r\n          }\r\n        } // \"tomorrow\", \"the day after tomorrow\", etc.\r\n        else if (value === 1 || value === 2) {\r\n          var _message = unitMessages[\"next\".concat(value === 1 ? '' : '-' + Math.abs(value))];\r\n\r\n          if (_message) {\r\n            return _message;\r\n          }\r\n        } // \"today\"\r\n        else if (value === 0) {\r\n          if (unitMessages.current) {\r\n            return unitMessages.current;\r\n          }\r\n        }\r\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\r\n      // If there's only \"other\" then it's being collapsed.\r\n      // (the resulting bundle size optimization technique)\r\n\r\n\r\n      var pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]; // Bundle size optimization technique for styles like \"narrow\"\r\n      // having messages like \"in {0} d.\" or \"{0} d. ago\".\r\n\r\n      if (typeof pluralizedMessages === \"string\") {\r\n        return pluralizedMessages;\r\n      } // Quantify `value`.\r\n      // There seems to be no such locale in CLDR\r\n      // for which \"plural rules\" function is missing.\r\n\r\n\r\n      var quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'; // \"other\" rule is supposed to be always present.\r\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\r\n      return pluralizedMessages[quantifier] || pluralizedMessages.other;\r\n    }\r\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"formatNumber\",\r\n    value: function formatNumber(number) {\r\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\r\n    }\r\n    /**\r\n     * Formats a number into a list of parts.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {object[]}\r\n     */\r\n\r\n  }, {\r\n    key: \"formatNumberToParts\",\r\n    value: function formatNumberToParts(number) {\r\n      // `Intl.NumberFormat.formatToParts()` is not present, for example,\r\n      // in Node.js 8.x while `Intl.NumberFormat` itself is present.\r\n      return this.numberFormat && this.numberFormat.formatToParts ? this.numberFormat.formatToParts(number) : [{\r\n        type: \"integer\",\r\n        value: this.formatNumber(number)\r\n      }];\r\n    }\r\n    /**\r\n     * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n     * @return {Object}\r\n     */\r\n\r\n  }, {\r\n    key: \"resolvedOptions\",\r\n    value: function resolvedOptions() {\r\n      return {\r\n        locale: this.locale,\r\n        style: this.style,\r\n        numeric: this.numeric,\r\n        numberingSystem: this.numberingSystem\r\n      };\r\n    }\r\n  }]);\r\n\r\n  return RelativeTimeFormat;\r\n}();\r\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\r\n\r\n\r\n\r\n\r\nRelativeTimeFormat.supportedLocalesOf = function (locales) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n  // Convert `locales` to an array.\r\n  if (typeof locales === 'string') {\r\n    locales = [locales];\r\n  } else if (!Array.isArray(locales)) {\r\n    throw new TypeError('Invalid \"locales\" argument');\r\n  }\r\n\r\n  return locales.filter(function (locale) {\r\n    return (0,_resolveLocale_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(locale, options);\r\n  });\r\n};\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\n\r\n\r\nRelativeTimeFormat.addLocale = _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.addLocaleData;\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\n\r\nRelativeTimeFormat.setDefaultLocale = _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.setDefaultLocale;\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\n\r\nRelativeTimeFormat.getDefaultLocale = _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultLocale;\r\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\r\n\r\nRelativeTimeFormat.PluralRules = _PluralRules_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; // The specification allows units to be in plural form.\r\n// Convert plural to singular.\r\n// Example: \"seconds\" -> \"second\".\r\n\r\nvar UNIT_ERROR = 'Invalid \"unit\" argument';\r\n\r\nfunction parseUnit(unit) {\r\n  if (_typeof(unit) === 'symbol') {\r\n    throw new TypeError(UNIT_ERROR);\r\n  }\r\n\r\n  if (typeof unit !== 'string') {\r\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\r\n  }\r\n\r\n  if (unit[unit.length - 1] === 's') {\r\n    unit = unit.slice(0, unit.length - 1);\r\n  }\r\n\r\n  if (UNITS.indexOf(unit) < 0) {\r\n    throw new RangeError(\"\".concat(UNIT_ERROR, \": \").concat(unit));\r\n  }\r\n\r\n  return unit;\r\n} // Converts `value` to a `Number`.\r\n// The specification allows value to be a non-number.\r\n// For example, \"-0\" is supposed to be treated as `-0`.\r\n// Also checks if `value` is a finite number.\r\n\r\n\r\nvar NUMBER_ERROR = 'Invalid \"number\" argument';\r\n\r\nfunction parseNumber(value) {\r\n  value = Number(value);\r\n\r\n  if (Number.isFinite) {\r\n    if (!Number.isFinite(value)) {\r\n      throw new RangeError(\"\".concat(NUMBER_ERROR, \": \").concat(value));\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\r\n\r\n\r\nfunction isNegativeZero(number) {\r\n  return 1 / number === -Infinity;\r\n}\r\n\r\nfunction isNegative(number) {\r\n  return number < 0 || number === 0 && isNegativeZero(number);\r\n}\r\n\r\nfunction parseFormatArgs(args) {\r\n  if (args.length < 2) {\r\n    throw new TypeError(\"\\\"unit\\\" argument is required\");\r\n  }\r\n\r\n  return [parseNumber(args[0]), parseUnit(args[1])];\r\n}\r\n//# sourceMappingURL=RelativeTimeFormat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVsYXRpdmUtdGltZS1mb3JtYXQvbW9kdWxlcy9SZWxhdGl2ZVRpbWVGb3JtYXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSx3QkFBd0IsMkJBQTJCLHNHQUFzRyxxQkFBcUIsbUJBQW1CLDhIQUE4SDtBQUMvVDtBQUNBLDJDQUEyQyxnQ0FBZ0Msb0NBQW9DLG9EQUFvRCw2REFBNkQsaUVBQWlFLHNDQUFzQztBQUN2VTtBQUNBLGlDQUFpQyxnQkFBZ0Isc0JBQXNCLE9BQU8sdURBQXVELDZEQUE2RCw0Q0FBNEMsb0tBQW9LLG1GQUFtRixLQUFLO0FBQzFlO0FBQ0EsNENBQTRDLGtCQUFrQixrQ0FBa0Msb0VBQW9FLEtBQUssT0FBTyxvQkFBb0I7QUFDcE07QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxrREFBa0QsZ0JBQWdCLGdFQUFnRSx3REFBd0QsNkRBQTZELHNEQUFzRDtBQUM3UztBQUNBLHVDQUF1Qyx1REFBdUQsdUNBQXVDLFNBQVMsT0FBTyxvQkFBb0I7QUFDeks7QUFDQSx5Q0FBeUMsMEdBQTBHLHdCQUF3QixlQUFlLGVBQWUsZ0JBQWdCLFlBQVksTUFBTSx3QkFBd0IsK0JBQStCLGFBQWEscUJBQXFCLHVDQUF1QyxjQUFjLFdBQVcsWUFBWSxVQUFVLE1BQU0sbURBQW1ELFVBQVUsc0JBQXNCO0FBQ25mO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0Esa0RBQWtELDBDQUEwQztBQUM1RjtBQUNBLDRDQUE0QyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVEO0FBQy9QO0FBQ0EsOERBQThELHNFQUFzRSw4REFBOEQsa0RBQWtELGlCQUFpQixHQUFHO0FBQ3hRO0FBQ3dHO0FBQ3pEO0FBQ0osQ0FBQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNPLHFGQUFxRjtBQUM1RjtBQUNBLHlDQUF5QztBQUN6QztBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQW1CO0FBQ2hDLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLGlCQUFpQixxRUFBZ0IsS0FBSztBQUN0QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRLDBFQUE4QjtBQUN0Qyw2QkFBNkIsdURBQVc7QUFDeEMsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZEQUFhO0FBQy9CO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGNBQWMsWUFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxFQUFFO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLFVBQVUsY0FBYyxvQkFBb0I7QUFDNUQsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsY0FBYywrQkFBK0I7QUFDN0MsY0FBYywyQkFBMkI7QUFDekMsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLCtCQUErQjtBQUM3QyxjQUFjLDRDQUE0QztBQUMxRCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxFQUFFLElBQUk7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxXQUFXO0FBQ3hEO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBLHlCQUF5QixFQUFFO0FBQzNCO0FBQ0E7QUFDQSwyQ0FBMkMsRUFBRTtBQUM3QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixnQkFBZ0I7QUFDaEIsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQSxvQkFBb0IsR0FBRztBQUN2QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixHQUFHO0FBQzFCLFdBQVc7QUFDWDtBQUNBO0FBQ0EsMEJBQTBCLEdBQUc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsa0VBQWEsaUNBQWlDO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GO0FBQ3BGLG1DQUFtQyxHQUFHLFNBQVMsR0FBRztBQUNsRDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnR0FBZ0c7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZEQUFhO0FBQ3hCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFhO0FBQzVDO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBLHNDQUFzQyxpRUFBZ0I7QUFDdEQ7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0Esc0NBQXNDLGlFQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx1REFBVyxFQUFFO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVk7QUFDWjtBQUNBLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlbGF0aXZlLXRpbWUtZm9ybWF0L21vZHVsZXMvUmVsYXRpdmVUaW1lRm9ybWF0LmpzPzkzZjEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH0sIF90eXBlb2Yob2JqKTsgfVxyXG5cclxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cclxuXHJcbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XHJcblxyXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxyXG5cclxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cclxuXHJcbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cclxuXHJcbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxyXG5cclxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XHJcblxyXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxyXG5cclxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XHJcblxyXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHsgd3JpdGFibGU6IGZhbHNlIH0pOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cclxuXHJcbmltcG9ydCB7IGdldERlZmF1bHRMb2NhbGUsIHNldERlZmF1bHRMb2NhbGUsIGdldExvY2FsZURhdGEsIGFkZExvY2FsZURhdGEgfSBmcm9tICcuL0xvY2FsZURhdGFTdG9yZS5qcyc7XHJcbmltcG9ydCByZXNvbHZlTG9jYWxlIGZyb20gJy4vcmVzb2x2ZUxvY2FsZS5qcyc7XHJcbmltcG9ydCBQbHVyYWxSdWxlcyBmcm9tICcuL1BsdXJhbFJ1bGVzLmpzJzsgLy8gSW1wb3J0aW5nIGBQbHVyYWxSdWxlYCBwb2x5ZmlsbCBmcm9tIGEgc2VwYXJhdGUgcGFja2FnZVxyXG4vLyByZXN1bHRzIGluIGEgYnVuZGxlIHRoYXQgaXMgbGFyZ2VyIGJ5IDFrQiBmb3Igc29tZSByZWFzb24uXHJcbi8vIGltcG9ydCBQbHVyYWxSdWxlcyBmcm9tICdpbnRsLXBsdXJhbC1ydWxlcy1wb2x5ZmlsbC9jYXJkaW5hbCdcclxuLy8gVmFsaWQgdGltZSB1bml0cy5cclxuXHJcbmV4cG9ydCB2YXIgVU5JVFMgPSBbXCJzZWNvbmRcIiwgXCJtaW51dGVcIiwgXCJob3VyXCIsIFwiZGF5XCIsIFwid2Vla1wiLCBcIm1vbnRoXCIsIFwicXVhcnRlclwiLCBcInllYXJcIl07IC8vIFZhbGlkIHZhbHVlcyBmb3IgdGhlIGBudW1lcmljYCBvcHRpb24uXHJcblxyXG52YXIgTlVNRVJJQ19WQUxVRVMgPSBbXCJhdXRvXCIsIFwiYWx3YXlzXCJdOyAvLyBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBgc3R5bGVgIG9wdGlvbi5cclxuXHJcbnZhciBTVFlMRV9WQUxVRVMgPSBbXCJsb25nXCIsIFwic2hvcnRcIiwgXCJuYXJyb3dcIl07IC8vIFZhbGlkIHZhbHVlcyBmb3IgdGhlIGBsb2NhbGVNYXRjaGVyYCBvcHRpb24uXHJcblxyXG52YXIgTE9DQUxFX01BVENIRVJfVkFMVUVTID0gW1wibG9va3VwXCIsIFwiYmVzdCBmaXRcIl07XHJcbi8qKlxyXG4gKiBQb2x5ZmlsbCBmb3IgYEludGwuUmVsYXRpdmVUaW1lRm9ybWF0YCBwcm9wb3NhbC5cclxuICogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtaW50bC1yZWxhdGl2ZS10aW1lXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWludGwtcmVsYXRpdmUtdGltZS9pc3N1ZXMvNTVcclxuICovXHJcblxyXG52YXIgUmVsYXRpdmVUaW1lRm9ybWF0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0geyhzdHJpbmd8c3RyaW5nW10pfSBbbG9jYWxlc10gLSBQcmVmZXJyZWQgbG9jYWxlcyAob3IgbG9jYWxlKS5cclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gRm9ybWF0dGluZyBvcHRpb25zLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5zdHlsZT1cImxvbmdcIl0gLSBPbmUgb2Y6IFwibG9uZ1wiLCBcInNob3J0XCIsIFwibmFycm93XCIuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm51bWVyaWM9XCJhbHdheXNcIl0gLSAoVmVyc2lvbiA+PSAyKSBPbmUgb2Y6IFwiYWx3YXlzXCIsIFwiYXV0b1wiLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5sb2NhbGVNYXRjaGVyPVwibG9va3VwXCJdIC0gT25lIG9mOiBcImxvb2t1cFwiLCBcImJlc3QgZml0XCIuIEN1cnJlbnRseSBvbmx5IFwibG9va3VwXCIgaXMgc3VwcG9ydGVkLlxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIFJlbGF0aXZlVGltZUZvcm1hdCgpIHtcclxuICAgIHZhciBsb2NhbGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTtcclxuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcclxuXHJcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVsYXRpdmVUaW1lRm9ybWF0KTtcclxuXHJcbiAgICB2YXIgbnVtZXJpYyA9IG9wdGlvbnMubnVtZXJpYyxcclxuICAgICAgICBzdHlsZSA9IG9wdGlvbnMuc3R5bGUsXHJcbiAgICAgICAgbG9jYWxlTWF0Y2hlciA9IG9wdGlvbnMubG9jYWxlTWF0Y2hlcjtcclxuICAgIHRoaXMubnVtZXJpYyA9IFwiYWx3YXlzXCI7XHJcbiAgICB0aGlzLnN0eWxlID0gXCJsb25nXCI7XHJcbiAgICB0aGlzLmxvY2FsZU1hdGNoZXIgPSBcImxvb2t1cFwiOyAvLyBTZXQgYG51bWVyaWNgIG9wdGlvbi5cclxuXHJcbiAgICBpZiAobnVtZXJpYyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGlmIChOVU1FUklDX1ZBTFVFUy5pbmRleE9mKG51bWVyaWMpIDwgMCkge1xyXG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCBcXFwibnVtZXJpY1xcXCIgb3B0aW9uOiBcIi5jb25jYXQobnVtZXJpYykpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLm51bWVyaWMgPSBudW1lcmljO1xyXG4gICAgfSAvLyBTZXQgYHN0eWxlYCBvcHRpb24uXHJcblxyXG5cclxuICAgIGlmIChzdHlsZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGlmIChTVFlMRV9WQUxVRVMuaW5kZXhPZihzdHlsZSkgPCAwKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbnZhbGlkIFxcXCJzdHlsZVxcXCIgb3B0aW9uOiBcIi5jb25jYXQoc3R5bGUpKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5zdHlsZSA9IHN0eWxlO1xyXG4gICAgfSAvLyBTZXQgYGxvY2FsZU1hdGNoZXJgIG9wdGlvbi5cclxuXHJcblxyXG4gICAgaWYgKGxvY2FsZU1hdGNoZXIgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBpZiAoTE9DQUxFX01BVENIRVJfVkFMVUVTLmluZGV4T2YobG9jYWxlTWF0Y2hlcikgPCAwKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbnZhbGlkIFxcXCJsb2NhbGVNYXRjaGVyXFxcIiBvcHRpb246IFwiLmNvbmNhdChsb2NhbGVNYXRjaGVyKSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMubG9jYWxlTWF0Y2hlciA9IGxvY2FsZU1hdGNoZXI7XHJcbiAgICB9IC8vIFNldCBgbG9jYWxlYC5cclxuICAgIC8vIENvbnZlcnQgYGxvY2FsZXNgIHRvIGFuIGFycmF5LlxyXG5cclxuXHJcbiAgICBpZiAodHlwZW9mIGxvY2FsZXMgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGxvY2FsZXMgPSBbbG9jYWxlc107XHJcbiAgICB9IC8vIEFkZCBkZWZhdWx0IGxvY2FsZS5cclxuXHJcblxyXG4gICAgbG9jYWxlcy5wdXNoKGdldERlZmF1bHRMb2NhbGUoKSk7IC8vIENob29zZSB0aGUgbW9zdCBhcHByb3ByaWF0ZSBsb2NhbGUuXHJcblxyXG4gICAgdGhpcy5sb2NhbGUgPSBSZWxhdGl2ZVRpbWVGb3JtYXQuc3VwcG9ydGVkTG9jYWxlc09mKGxvY2FsZXMsIHtcclxuICAgICAgbG9jYWxlTWF0Y2hlcjogdGhpcy5sb2NhbGVNYXRjaGVyXHJcbiAgICB9KVswXTtcclxuXHJcbiAgICBpZiAoIXRoaXMubG9jYWxlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHN1cHBvcnRlZCBsb2NhbGUgd2FzIGZvdW5kXCIpO1xyXG4gICAgfSAvLyBDb25zdHJ1Y3QgYW4gYEludGwuUGx1cmFsUnVsZXNgIGluc3RhbmNlIChwb2x5ZmlsbCkuXHJcblxyXG5cclxuICAgIGlmIChQbHVyYWxSdWxlcy5zdXBwb3J0ZWRMb2NhbGVzT2YodGhpcy5sb2NhbGUpLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5wbHVyYWxSdWxlcyA9IG5ldyBQbHVyYWxSdWxlcyh0aGlzLmxvY2FsZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLndhcm4oXCJcXFwiXCIuY29uY2F0KHRoaXMubG9jYWxlLCBcIlxcXCIgbG9jYWxlIGlzIG5vdCBzdXBwb3J0ZWRcIikpO1xyXG4gICAgfSAvLyBVc2UgYEludGwuTnVtYmVyRm9ybWF0YCBmb3IgZm9ybWF0dGluZyBudW1iZXJzICh3aGVuIGF2YWlsYWJsZSkuXHJcblxyXG5cclxuICAgIGlmICh0eXBlb2YgSW50bCAhPT0gJ3VuZGVmaW5lZCcgJiYgSW50bC5OdW1iZXJGb3JtYXQpIHtcclxuICAgICAgdGhpcy5udW1iZXJGb3JtYXQgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQodGhpcy5sb2NhbGUpO1xyXG4gICAgICB0aGlzLm51bWJlcmluZ1N5c3RlbSA9IHRoaXMubnVtYmVyRm9ybWF0LnJlc29sdmVkT3B0aW9ucygpLm51bWJlcmluZ1N5c3RlbTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMubnVtYmVyaW5nU3lzdGVtID0gJ2xhdG4nO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubG9jYWxlID0gcmVzb2x2ZUxvY2FsZSh0aGlzLmxvY2FsZSwge1xyXG4gICAgICBsb2NhbGVNYXRjaGVyOiB0aGlzLmxvY2FsZU1hdGNoZXJcclxuICAgIH0pO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBGb3JtYXRzIHRpbWUgYG51bWJlcmAgaW4gYHVuaXRzYCAoZWl0aGVyIGluIHBhc3Qgb3IgaW4gZnV0dXJlKS5cclxuICAgKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyIC0gVGltZSBpbnRlcnZhbCB2YWx1ZS5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdW5pdCAtIFRpbWUgaW50ZXJ2YWwgbWVhc3VyZW1lbnQgdW5pdC5cclxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAgICogQHRocm93cyB7UmFuZ2VFcnJvcn0gSWYgdW5pdCBpcyBub3Qgb25lIG9mIFwic2Vjb25kXCIsIFwibWludXRlXCIsIFwiaG91clwiLCBcImRheVwiLCBcIndlZWtcIiwgXCJtb250aFwiLCBcInF1YXJ0ZXJcIi5cclxuICAgKiBAZXhhbXBsZVxyXG4gICAqIC8vIFJldHVybnMgXCIyIGRheXMgYWdvXCJcclxuICAgKiBydGYuZm9ybWF0KC0yLCBcImRheVwiKVxyXG4gICAqIC8vIFJldHVybnMgXCJpbiA1IG1pbnV0ZXNcIlxyXG4gICAqIHJ0Zi5mb3JtYXQoNSwgXCJtaW51dGVcIilcclxuICAgKi9cclxuXHJcblxyXG4gIF9jcmVhdGVDbGFzcyhSZWxhdGl2ZVRpbWVGb3JtYXQsIFt7XHJcbiAgICBrZXk6IFwiZm9ybWF0XCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0KCkge1xyXG4gICAgICB2YXIgX3BhcnNlRm9ybWF0QXJncyA9IHBhcnNlRm9ybWF0QXJncyhhcmd1bWVudHMpLFxyXG4gICAgICAgICAgX3BhcnNlRm9ybWF0QXJnczIgPSBfc2xpY2VkVG9BcnJheShfcGFyc2VGb3JtYXRBcmdzLCAyKSxcclxuICAgICAgICAgIG51bWJlciA9IF9wYXJzZUZvcm1hdEFyZ3MyWzBdLFxyXG4gICAgICAgICAgdW5pdCA9IF9wYXJzZUZvcm1hdEFyZ3MyWzFdO1xyXG5cclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0UnVsZShudW1iZXIsIHVuaXQpLnJlcGxhY2UoJ3swfScsIHRoaXMuZm9ybWF0TnVtYmVyKE1hdGguYWJzKG51bWJlcikpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRm9ybWF0cyB0aW1lIGBudW1iZXJgIGluIGB1bml0c2AgKGVpdGhlciBpbiBwYXN0IG9yIGluIGZ1dHVyZSkuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyIC0gVGltZSBpbnRlcnZhbCB2YWx1ZS5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1bml0IC0gVGltZSBpbnRlcnZhbCBtZWFzdXJlbWVudCB1bml0LlxyXG4gICAgICogQHJldHVybiB7T2JqZWN0W119IFRoZSBwYXJ0cyAoYHsgdHlwZSwgdmFsdWUsIHVuaXQ/IH1gKS5cclxuICAgICAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IElmIHVuaXQgaXMgbm90IG9uZSBvZiBcInNlY29uZFwiLCBcIm1pbnV0ZVwiLCBcImhvdXJcIiwgXCJkYXlcIiwgXCJ3ZWVrXCIsIFwibW9udGhcIiwgXCJxdWFydGVyXCIuXHJcbiAgICAgKiBAZXhhbXBsZVxyXG4gICAgICogLy8gVmVyc2lvbiAxIChkZXByZWNhdGVkKS5cclxuICAgICAqIC8vIFJldHVybnMgW1xyXG4gICAgICogLy8gICB7IHR5cGU6IFwibGl0ZXJhbFwiLCB2YWx1ZTogXCJpbiBcIiB9LFxyXG4gICAgICogLy8gICB7IHR5cGU6IFwiZGF5XCIsIHZhbHVlOiBcIjEwMFwiIH0sXHJcbiAgICAgKiAvLyAgIHsgdHlwZTogXCJsaXRlcmFsXCIsIHZhbHVlOiBcIiBkYXlzXCIgfVxyXG4gICAgICogLy8gXVxyXG4gICAgICogcnRmLmZvcm1hdFRvUGFydHMoMTAwLCBcImRheVwiKVxyXG4gICAgICogLy9cclxuICAgICAqIC8vIFZlcnNpb24gMi5cclxuICAgICAqIC8vIFJldHVybnMgW1xyXG4gICAgICogLy8gICB7IHR5cGU6IFwibGl0ZXJhbFwiLCB2YWx1ZTogXCJpbiBcIiB9LFxyXG4gICAgICogLy8gICB7IHR5cGU6IFwiaW50ZWdlclwiLCB2YWx1ZTogXCIxMDBcIiwgdW5pdDogXCJkYXlcIiB9LFxyXG4gICAgICogLy8gICB7IHR5cGU6IFwibGl0ZXJhbFwiLCB2YWx1ZTogXCIgZGF5c1wiIH1cclxuICAgICAqIC8vIF1cclxuICAgICAqIHJ0Zi5mb3JtYXRUb1BhcnRzKDEwMCwgXCJkYXlcIilcclxuICAgICAqL1xyXG5cclxuICB9LCB7XHJcbiAgICBrZXk6IFwiZm9ybWF0VG9QYXJ0c1wiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdFRvUGFydHMoKSB7XHJcbiAgICAgIHZhciBfcGFyc2VGb3JtYXRBcmdzMyA9IHBhcnNlRm9ybWF0QXJncyhhcmd1bWVudHMpLFxyXG4gICAgICAgICAgX3BhcnNlRm9ybWF0QXJnczQgPSBfc2xpY2VkVG9BcnJheShfcGFyc2VGb3JtYXRBcmdzMywgMiksXHJcbiAgICAgICAgICBudW1iZXIgPSBfcGFyc2VGb3JtYXRBcmdzNFswXSxcclxuICAgICAgICAgIHVuaXQgPSBfcGFyc2VGb3JtYXRBcmdzNFsxXTtcclxuXHJcbiAgICAgIHZhciBydWxlID0gdGhpcy5nZXRSdWxlKG51bWJlciwgdW5pdCk7XHJcbiAgICAgIHZhciB2YWx1ZUluZGV4ID0gcnVsZS5pbmRleE9mKFwiezB9XCIpOyAvLyBcInllc3RlcmRheVwiL1widG9kYXlcIi9cInRvbW9ycm93XCIuXHJcblxyXG4gICAgICBpZiAodmFsdWVJbmRleCA8IDApIHtcclxuICAgICAgICByZXR1cm4gW3tcclxuICAgICAgICAgIHR5cGU6IFwibGl0ZXJhbFwiLFxyXG4gICAgICAgICAgdmFsdWU6IHJ1bGVcclxuICAgICAgICB9XTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHBhcnRzID0gW107XHJcblxyXG4gICAgICBpZiAodmFsdWVJbmRleCA+IDApIHtcclxuICAgICAgICBwYXJ0cy5wdXNoKHtcclxuICAgICAgICAgIHR5cGU6IFwibGl0ZXJhbFwiLFxyXG4gICAgICAgICAgdmFsdWU6IHJ1bGUuc2xpY2UoMCwgdmFsdWVJbmRleClcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcGFydHMgPSBwYXJ0cy5jb25jYXQodGhpcy5mb3JtYXROdW1iZXJUb1BhcnRzKE1hdGguYWJzKG51bWJlcikpLm1hcChmdW5jdGlvbiAocGFydCkge1xyXG4gICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHBhcnQpLCB7fSwge1xyXG4gICAgICAgICAgdW5pdDogdW5pdFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KSk7XHJcblxyXG4gICAgICBpZiAodmFsdWVJbmRleCArIFwiezB9XCIubGVuZ3RoIDwgcnVsZS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgcGFydHMucHVzaCh7XHJcbiAgICAgICAgICB0eXBlOiBcImxpdGVyYWxcIixcclxuICAgICAgICAgIHZhbHVlOiBydWxlLnNsaWNlKHZhbHVlSW5kZXggKyBcInswfVwiLmxlbmd0aClcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIHBhcnRzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGZvcm1hdHRpbmcgcnVsZSBmb3IgYHZhbHVlYCBpbiBgdW5pdHNgIChlaXRoZXIgaW4gcGFzdCBvciBpbiBmdXR1cmUpLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIC0gVGltZSBpbnRlcnZhbCB2YWx1ZS5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1bml0IC0gVGltZSBpbnRlcnZhbCBtZWFzdXJlbWVudCB1bml0LlxyXG4gICAgICogQHJldHVybiB7c3RyaW5nfVxyXG4gICAgICogQHRocm93cyB7UmFuZ2VFcnJvcn0gSWYgdW5pdCBpcyBub3Qgb25lIG9mIFwic2Vjb25kXCIsIFwibWludXRlXCIsIFwiaG91clwiLCBcImRheVwiLCBcIndlZWtcIiwgXCJtb250aFwiLCBcInF1YXJ0ZXJcIi5cclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiAvLyBSZXR1cm5zIFwiezB9IGRheXMgYWdvXCJcclxuICAgICAqIGdldFJ1bGUoLTIsIFwiZGF5XCIpXHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiBcImdldFJ1bGVcIixcclxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSdWxlKHZhbHVlLCB1bml0KSB7XHJcbiAgICAgIC8vIEdldCBsb2NhbGUtc3BlY2lmaWMgdGltZSBpbnRlcnZhbCBmb3JtYXR0aW5nIHJ1bGVzXHJcbiAgICAgIC8vIG9mIGEgZ2l2ZW4gYHN0eWxlYCBmb3IgdGhlIGdpdmVuIHZhbHVlIG9mIG1lYXN1cmVtZW50IGB1bml0YC5cclxuICAgICAgLy9cclxuICAgICAgLy8gRS5nLjpcclxuICAgICAgLy9cclxuICAgICAgLy8gYGBganNvblxyXG4gICAgICAvLyB7XHJcbiAgICAgIC8vICBcInBhc3RcIjoge1xyXG4gICAgICAvLyAgICBcIm9uZVwiOiBcImEgc2Vjb25kIGFnb1wiLFxyXG4gICAgICAvLyAgICBcIm90aGVyXCI6IFwiezB9IHNlY29uZHMgYWdvXCJcclxuICAgICAgLy8gIH0sXHJcbiAgICAgIC8vICBcImZ1dHVyZVwiOiB7XHJcbiAgICAgIC8vICAgIFwib25lXCI6IFwiaW4gYSBzZWNvbmRcIixcclxuICAgICAgLy8gICAgXCJvdGhlclwiOiBcImluIHswfSBzZWNvbmRzXCJcclxuICAgICAgLy8gIH1cclxuICAgICAgLy8gfVxyXG4gICAgICAvLyBgYGBcclxuICAgICAgLy9cclxuICAgICAgdmFyIHVuaXRNZXNzYWdlcyA9IGdldExvY2FsZURhdGEodGhpcy5sb2NhbGUpW3RoaXMuc3R5bGVdW3VuaXRdOyAvLyBCdW5kbGUgc2l6ZSBvcHRpbWl6YXRpb24gdGVjaG5pcXVlIGZvciBzdHlsZXMgbGlrZVxyXG4gICAgICAvLyBcInRpbnlcIiBpbiBgamF2YXNjcmlwdC10aW1lLWFnb2A6IFwiMW1cIiwgXCIyaFwiLCBcIjNkXCIuLi5cclxuXHJcbiAgICAgIGlmICh0eXBlb2YgdW5pdE1lc3NhZ2VzID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHJldHVybiB1bml0TWVzc2FnZXM7XHJcbiAgICAgIH0gLy8gU3BlY2lhbCBjYXNlIGZvciBcInllc3RlcmRheVwiL1widG9kYXlcIi9cInRvbW9ycm93XCIuXHJcblxyXG5cclxuICAgICAgaWYgKHRoaXMubnVtZXJpYyA9PT0gXCJhdXRvXCIpIHtcclxuICAgICAgICAvLyBcInllc3RlcmRheVwiLCBcInRoZSBkYXkgYmVmb3JlIHllc3RlcmRheVwiLCBldGMuXHJcbiAgICAgICAgaWYgKHZhbHVlID09PSAtMiB8fCB2YWx1ZSA9PT0gLTEpIHtcclxuICAgICAgICAgIHZhciBtZXNzYWdlID0gdW5pdE1lc3NhZ2VzW1wicHJldmlvdXNcIi5jb25jYXQodmFsdWUgPT09IC0xID8gJycgOiAnLScgKyBNYXRoLmFicyh2YWx1ZSkpXTtcclxuXHJcbiAgICAgICAgICBpZiAobWVzc2FnZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IC8vIFwidG9tb3Jyb3dcIiwgXCJ0aGUgZGF5IGFmdGVyIHRvbW9ycm93XCIsIGV0Yy5cclxuICAgICAgICBlbHNlIGlmICh2YWx1ZSA9PT0gMSB8fCB2YWx1ZSA9PT0gMikge1xyXG4gICAgICAgICAgdmFyIF9tZXNzYWdlID0gdW5pdE1lc3NhZ2VzW1wibmV4dFwiLmNvbmNhdCh2YWx1ZSA9PT0gMSA/ICcnIDogJy0nICsgTWF0aC5hYnModmFsdWUpKV07XHJcblxyXG4gICAgICAgICAgaWYgKF9tZXNzYWdlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBfbWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IC8vIFwidG9kYXlcIlxyXG4gICAgICAgIGVsc2UgaWYgKHZhbHVlID09PSAwKSB7XHJcbiAgICAgICAgICBpZiAodW5pdE1lc3NhZ2VzLmN1cnJlbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHVuaXRNZXNzYWdlcy5jdXJyZW50O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSAvLyBDaG9vc2UgZWl0aGVyIFwicGFzdFwiIG9yIFwiZnV0dXJlXCIgYmFzZWQgb24gdGltZSBgdmFsdWVgIHNpZ24uXHJcbiAgICAgIC8vIElmIHRoZXJlJ3Mgb25seSBcIm90aGVyXCIgdGhlbiBpdCdzIGJlaW5nIGNvbGxhcHNlZC5cclxuICAgICAgLy8gKHRoZSByZXN1bHRpbmcgYnVuZGxlIHNpemUgb3B0aW1pemF0aW9uIHRlY2huaXF1ZSlcclxuXHJcblxyXG4gICAgICB2YXIgcGx1cmFsaXplZE1lc3NhZ2VzID0gdW5pdE1lc3NhZ2VzW2lzTmVnYXRpdmUodmFsdWUpID8gXCJwYXN0XCIgOiBcImZ1dHVyZVwiXTsgLy8gQnVuZGxlIHNpemUgb3B0aW1pemF0aW9uIHRlY2huaXF1ZSBmb3Igc3R5bGVzIGxpa2UgXCJuYXJyb3dcIlxyXG4gICAgICAvLyBoYXZpbmcgbWVzc2FnZXMgbGlrZSBcImluIHswfSBkLlwiIG9yIFwiezB9IGQuIGFnb1wiLlxyXG5cclxuICAgICAgaWYgKHR5cGVvZiBwbHVyYWxpemVkTWVzc2FnZXMgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICByZXR1cm4gcGx1cmFsaXplZE1lc3NhZ2VzO1xyXG4gICAgICB9IC8vIFF1YW50aWZ5IGB2YWx1ZWAuXHJcbiAgICAgIC8vIFRoZXJlIHNlZW1zIHRvIGJlIG5vIHN1Y2ggbG9jYWxlIGluIENMRFJcclxuICAgICAgLy8gZm9yIHdoaWNoIFwicGx1cmFsIHJ1bGVzXCIgZnVuY3Rpb24gaXMgbWlzc2luZy5cclxuXHJcblxyXG4gICAgICB2YXIgcXVhbnRpZmllciA9IHRoaXMucGx1cmFsUnVsZXMgJiYgdGhpcy5wbHVyYWxSdWxlcy5zZWxlY3QoTWF0aC5hYnModmFsdWUpKSB8fCAnb3RoZXInOyAvLyBcIm90aGVyXCIgcnVsZSBpcyBzdXBwb3NlZCB0byBiZSBhbHdheXMgcHJlc2VudC5cclxuICAgICAgLy8gSWYgb25seSBcIm90aGVyXCIgcnVsZSBpcyBwcmVzZW50IHRoZW4gXCJydWxlc1wiIGlzIG5vdCBhbiBvYmplY3QgYW5kIGlzIGEgc3RyaW5nLlxyXG5cclxuICAgICAgcmV0dXJuIHBsdXJhbGl6ZWRNZXNzYWdlc1txdWFudGlmaWVyXSB8fCBwbHVyYWxpemVkTWVzc2FnZXMub3RoZXI7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZvcm1hdHMgYSBudW1iZXIgaW50byBhIHN0cmluZy5cclxuICAgICAqIFVzZXMgYEludGwuTnVtYmVyRm9ybWF0YCB3aGVuIGF2YWlsYWJsZS5cclxuICAgICAqIEBwYXJhbSAge251bWJlcn0gbnVtYmVyXHJcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAgICAgKi9cclxuXHJcbiAgfSwge1xyXG4gICAga2V5OiBcImZvcm1hdE51bWJlclwiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW1iZXIpIHtcclxuICAgICAgcmV0dXJuIHRoaXMubnVtYmVyRm9ybWF0ID8gdGhpcy5udW1iZXJGb3JtYXQuZm9ybWF0KG51bWJlcikgOiBTdHJpbmcobnVtYmVyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRm9ybWF0cyBhIG51bWJlciBpbnRvIGEgbGlzdCBvZiBwYXJ0cy5cclxuICAgICAqIFVzZXMgYEludGwuTnVtYmVyRm9ybWF0YCB3aGVuIGF2YWlsYWJsZS5cclxuICAgICAqIEBwYXJhbSAge251bWJlcn0gbnVtYmVyXHJcbiAgICAgKiBAcmV0dXJuIHtvYmplY3RbXX1cclxuICAgICAqL1xyXG5cclxuICB9LCB7XHJcbiAgICBrZXk6IFwiZm9ybWF0TnVtYmVyVG9QYXJ0c1wiLFxyXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdE51bWJlclRvUGFydHMobnVtYmVyKSB7XHJcbiAgICAgIC8vIGBJbnRsLk51bWJlckZvcm1hdC5mb3JtYXRUb1BhcnRzKClgIGlzIG5vdCBwcmVzZW50LCBmb3IgZXhhbXBsZSxcclxuICAgICAgLy8gaW4gTm9kZS5qcyA4Lnggd2hpbGUgYEludGwuTnVtYmVyRm9ybWF0YCBpdHNlbGYgaXMgcHJlc2VudC5cclxuICAgICAgcmV0dXJuIHRoaXMubnVtYmVyRm9ybWF0ICYmIHRoaXMubnVtYmVyRm9ybWF0LmZvcm1hdFRvUGFydHMgPyB0aGlzLm51bWJlckZvcm1hdC5mb3JtYXRUb1BhcnRzKG51bWJlcikgOiBbe1xyXG4gICAgICAgIHR5cGU6IFwiaW50ZWdlclwiLFxyXG4gICAgICAgIHZhbHVlOiB0aGlzLmZvcm1hdE51bWJlcihudW1iZXIpXHJcbiAgICAgIH1dO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgbmV3IG9iamVjdCB3aXRoIHByb3BlcnRpZXMgcmVmbGVjdGluZyB0aGUgbG9jYWxlIGFuZCBkYXRlIGFuZCB0aW1lIGZvcm1hdHRpbmcgb3B0aW9ucyBjb21wdXRlZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2YgdGhpcyBEYXRlVGltZUZvcm1hdCBvYmplY3QuXHJcbiAgICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9EYXRlVGltZUZvcm1hdC9yZXNvbHZlZE9wdGlvbnNcclxuICAgICAqIEByZXR1cm4ge09iamVjdH1cclxuICAgICAqL1xyXG5cclxuICB9LCB7XHJcbiAgICBrZXk6IFwicmVzb2x2ZWRPcHRpb25zXCIsXHJcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzb2x2ZWRPcHRpb25zKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGxvY2FsZTogdGhpcy5sb2NhbGUsXHJcbiAgICAgICAgc3R5bGU6IHRoaXMuc3R5bGUsXHJcbiAgICAgICAgbnVtZXJpYzogdGhpcy5udW1lcmljLFxyXG4gICAgICAgIG51bWJlcmluZ1N5c3RlbTogdGhpcy5udW1iZXJpbmdTeXN0ZW1cclxuICAgICAgfTtcclxuICAgIH1cclxuICB9XSk7XHJcblxyXG4gIHJldHVybiBSZWxhdGl2ZVRpbWVGb3JtYXQ7XHJcbn0oKTtcclxuLyoqXHJcbiAqIFJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aG9zZSBvZiB0aGUgcHJvdmlkZWQgbG9jYWxlc1xyXG4gKiB0aGF0IGFyZSBzdXBwb3J0ZWQgaW4gY29sbGF0aW9uIHdpdGhvdXQgaGF2aW5nIHRvIGZhbGwgYmFja1xyXG4gKiB0byB0aGUgcnVudGltZSdzIGRlZmF1bHQgbG9jYWxlLlxyXG4gKiBAcGFyYW0geyhzdHJpbmd8c3RyaW5nW10pfSBsb2NhbGUgLSBBIHN0cmluZyB3aXRoIGEgQkNQIDQ3IGxhbmd1YWdlIHRhZywgb3IgYW4gYXJyYXkgb2Ygc3VjaCBzdHJpbmdzLiBGb3IgdGhlIGdlbmVyYWwgZm9ybSBvZiB0aGUgbG9jYWxlcyBhcmd1bWVudCwgc2VlIHRoZSBJbnRsIHBhZ2UuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBBbiBvYmplY3QgdGhhdCBtYXkgaGF2ZSB0aGUgZm9sbG93aW5nIHByb3BlcnR5OlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubG9jYWxlTWF0Y2hlcj1cImxvb2t1cFwiXSAtIFRoZSBsb2NhbGUgbWF0Y2hpbmcgYWxnb3JpdGhtIHRvIHVzZS4gUG9zc2libGUgdmFsdWVzIGFyZSBcImxvb2t1cFwiIGFuZCBcImJlc3QgZml0XCIuIEN1cnJlbnRseSBvbmx5IFwibG9va3VwXCIgaXMgc3VwcG9ydGVkLlxyXG4gKiBAcmV0dXJuIHtzdHJpbmdbXX0gQW4gYXJyYXkgb2Ygc3RyaW5ncyByZXByZXNlbnRpbmcgYSBzdWJzZXQgb2YgdGhlIGdpdmVuIGxvY2FsZSB0YWdzIHRoYXQgYXJlIHN1cHBvcnRlZCBpbiBjb2xsYXRpb24gd2l0aG91dCBoYXZpbmcgdG8gZmFsbCBiYWNrIHRvIHRoZSBydW50aW1lJ3MgZGVmYXVsdCBsb2NhbGUuXHJcbiAqIEBleGFtcGxlXHJcbiAqIHZhciBsb2NhbGVzID0gWydiYW4nLCAnaWQtdS1jby1waW55aW4nLCAnZXMtUFknXVxyXG4gKiB2YXIgb3B0aW9ucyA9IHsgbG9jYWxlTWF0Y2hlcjogJ2xvb2t1cCcgfVxyXG4gKiAvLyBSZXR1cm5zIFtcImlkXCIsIFwiZXMtUFlcIl1cclxuICogSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXQuc3VwcG9ydGVkTG9jYWxlc09mKGxvY2FsZXMsIG9wdGlvbnMpXHJcbiAqL1xyXG5cclxuXHJcbmV4cG9ydCB7IFJlbGF0aXZlVGltZUZvcm1hdCBhcyBkZWZhdWx0IH07XHJcblxyXG5SZWxhdGl2ZVRpbWVGb3JtYXQuc3VwcG9ydGVkTG9jYWxlc09mID0gZnVuY3Rpb24gKGxvY2FsZXMpIHtcclxuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XHJcblxyXG4gIC8vIENvbnZlcnQgYGxvY2FsZXNgIHRvIGFuIGFycmF5LlxyXG4gIGlmICh0eXBlb2YgbG9jYWxlcyA9PT0gJ3N0cmluZycpIHtcclxuICAgIGxvY2FsZXMgPSBbbG9jYWxlc107XHJcbiAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShsb2NhbGVzKSkge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBcImxvY2FsZXNcIiBhcmd1bWVudCcpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGxvY2FsZXMuZmlsdGVyKGZ1bmN0aW9uIChsb2NhbGUpIHtcclxuICAgIHJldHVybiByZXNvbHZlTG9jYWxlKGxvY2FsZSwgb3B0aW9ucyk7XHJcbiAgfSk7XHJcbn07XHJcbi8qKlxyXG4gKiBBZGRzIGxvY2FsZSBkYXRhIGZvciBhIHNwZWNpZmljIGxvY2FsZS5cclxuICogQHBhcmFtIHtPYmplY3R9IGxvY2FsZURhdGFcclxuICovXHJcblxyXG5cclxuUmVsYXRpdmVUaW1lRm9ybWF0LmFkZExvY2FsZSA9IGFkZExvY2FsZURhdGE7XHJcbi8qKlxyXG4gKiBTZXRzIGRlZmF1bHQgbG9jYWxlLlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGxvY2FsZVxyXG4gKi9cclxuXHJcblJlbGF0aXZlVGltZUZvcm1hdC5zZXREZWZhdWx0TG9jYWxlID0gc2V0RGVmYXVsdExvY2FsZTtcclxuLyoqXHJcbiAqIEdldHMgZGVmYXVsdCBsb2NhbGUuXHJcbiAqIEByZXR1cm4gIHtzdHJpbmd9IGxvY2FsZVxyXG4gKi9cclxuXHJcblJlbGF0aXZlVGltZUZvcm1hdC5nZXREZWZhdWx0TG9jYWxlID0gZ2V0RGVmYXVsdExvY2FsZTtcclxuLyoqXHJcbiAqIEV4cG9ydCBgSW50bC5QbHVyYWxSdWxlc2AganVzdCBpbiBjYXNlIGl0J3MgdXNlZCBzb21ld2hlcmUgZWxzZS5cclxuICovXHJcblxyXG5SZWxhdGl2ZVRpbWVGb3JtYXQuUGx1cmFsUnVsZXMgPSBQbHVyYWxSdWxlczsgLy8gVGhlIHNwZWNpZmljYXRpb24gYWxsb3dzIHVuaXRzIHRvIGJlIGluIHBsdXJhbCBmb3JtLlxyXG4vLyBDb252ZXJ0IHBsdXJhbCB0byBzaW5ndWxhci5cclxuLy8gRXhhbXBsZTogXCJzZWNvbmRzXCIgLT4gXCJzZWNvbmRcIi5cclxuXHJcbnZhciBVTklUX0VSUk9SID0gJ0ludmFsaWQgXCJ1bml0XCIgYXJndW1lbnQnO1xyXG5cclxuZnVuY3Rpb24gcGFyc2VVbml0KHVuaXQpIHtcclxuICBpZiAoX3R5cGVvZih1bml0KSA9PT0gJ3N5bWJvbCcpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoVU5JVF9FUlJPUik7XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIHVuaXQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlwiLmNvbmNhdChVTklUX0VSUk9SLCBcIjogXCIpLmNvbmNhdCh1bml0KSk7XHJcbiAgfVxyXG5cclxuICBpZiAodW5pdFt1bml0Lmxlbmd0aCAtIDFdID09PSAncycpIHtcclxuICAgIHVuaXQgPSB1bml0LnNsaWNlKDAsIHVuaXQubGVuZ3RoIC0gMSk7XHJcbiAgfVxyXG5cclxuICBpZiAoVU5JVFMuaW5kZXhPZih1bml0KSA8IDApIHtcclxuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiXCIuY29uY2F0KFVOSVRfRVJST1IsIFwiOiBcIikuY29uY2F0KHVuaXQpKTtcclxuICB9XHJcblxyXG4gIHJldHVybiB1bml0O1xyXG59IC8vIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBgTnVtYmVyYC5cclxuLy8gVGhlIHNwZWNpZmljYXRpb24gYWxsb3dzIHZhbHVlIHRvIGJlIGEgbm9uLW51bWJlci5cclxuLy8gRm9yIGV4YW1wbGUsIFwiLTBcIiBpcyBzdXBwb3NlZCB0byBiZSB0cmVhdGVkIGFzIGAtMGAuXHJcbi8vIEFsc28gY2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBmaW5pdGUgbnVtYmVyLlxyXG5cclxuXHJcbnZhciBOVU1CRVJfRVJST1IgPSAnSW52YWxpZCBcIm51bWJlclwiIGFyZ3VtZW50JztcclxuXHJcbmZ1bmN0aW9uIHBhcnNlTnVtYmVyKHZhbHVlKSB7XHJcbiAgdmFsdWUgPSBOdW1iZXIodmFsdWUpO1xyXG5cclxuICBpZiAoTnVtYmVyLmlzRmluaXRlKSB7XHJcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZSh2YWx1ZSkpIHtcclxuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJcIi5jb25jYXQoTlVNQkVSX0VSUk9SLCBcIjogXCIpLmNvbmNhdCh2YWx1ZSkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHZhbHVlO1xyXG59XHJcbi8qKlxyXG4gKiBUZWxscyBgMGAgZnJvbSBgLTBgLlxyXG4gKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83MjIzMzU5L2FyZS0wLWFuZC0wLXRoZS1zYW1lXHJcbiAqIEBwYXJhbSAge251bWJlcn0gbnVtYmVyXHJcbiAqIEByZXR1cm4ge0Jvb2xlYW59XHJcbiAqIEBleGFtcGxlXHJcbiAqIGlzTmVnYXRpdmVaZXJvKDApOyAvLyBmYWxzZVxyXG4gKiBpc05lZ2F0aXZlWmVybygtMCk7IC8vIHRydWVcclxuICovXHJcblxyXG5cclxuZnVuY3Rpb24gaXNOZWdhdGl2ZVplcm8obnVtYmVyKSB7XHJcbiAgcmV0dXJuIDEgLyBudW1iZXIgPT09IC1JbmZpbml0eTtcclxufVxyXG5cclxuZnVuY3Rpb24gaXNOZWdhdGl2ZShudW1iZXIpIHtcclxuICByZXR1cm4gbnVtYmVyIDwgMCB8fCBudW1iZXIgPT09IDAgJiYgaXNOZWdhdGl2ZVplcm8obnVtYmVyKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcGFyc2VGb3JtYXRBcmdzKGFyZ3MpIHtcclxuICBpZiAoYXJncy5sZW5ndGggPCAyKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiXFxcInVuaXRcXFwiIGFyZ3VtZW50IGlzIHJlcXVpcmVkXCIpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIFtwYXJzZU51bWJlcihhcmdzWzBdKSwgcGFyc2VVbml0KGFyZ3NbMV0pXTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWxhdGl2ZVRpbWVGb3JtYXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/RelativeTimeFormat.js\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/modules/getPluralRulesLocale.js":
/*!***************************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/getPluralRulesLocale.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getPluralRulesLocale; }\n/* harmony export */ });\n/**\r\n * Returns a `locale` for which a function exists in `./PluralRuleFunctions.js`.\r\n * @param  {string} locale\r\n * @return {string}\r\n * @example\r\n * getPluralRulesLocale(\"ru-RU-Cyrl\") // Returns \"ru\".\r\n */\r\nfunction getPluralRulesLocale(locale) {\r\n  // \"pt\" language is the only one having different pluralization rules\r\n  // for the one (\"pt\") (Portuguese) locale and the other (\"pt-PT\") (European Portuguese).\r\n  // http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\r\n  // (see the entries for \"pt\" and \"pt_PT\" there)\r\n  if (locale === 'pt-PT') {\r\n    return locale;\r\n  }\r\n\r\n  return getLanguageFromLanguageTag(locale);\r\n}\r\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\r\n\r\nvar LANGUAGE_REG_EXP = /^([a-z0-9]+)/i;\r\n\r\nfunction getLanguageFromLanguageTag(languageTag) {\r\n  var match = languageTag.match(LANGUAGE_REG_EXP);\r\n\r\n  if (!match) {\r\n    throw new TypeError(\"Invalid locale: \".concat(languageTag));\r\n  }\r\n\r\n  return match[1];\r\n}\r\n//# sourceMappingURL=getPluralRulesLocale.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVsYXRpdmUtdGltZS1mb3JtYXQvbW9kdWxlcy9nZXRQbHVyYWxSdWxlc0xvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWxhdGl2ZS10aW1lLWZvcm1hdC9tb2R1bGVzL2dldFBsdXJhbFJ1bGVzTG9jYWxlLmpzPzE0MjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFJldHVybnMgYSBgbG9jYWxlYCBmb3Igd2hpY2ggYSBmdW5jdGlvbiBleGlzdHMgaW4gYC4vUGx1cmFsUnVsZUZ1bmN0aW9ucy5qc2AuXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gbG9jYWxlXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICogQGV4YW1wbGVcclxuICogZ2V0UGx1cmFsUnVsZXNMb2NhbGUoXCJydS1SVS1DeXJsXCIpIC8vIFJldHVybnMgXCJydVwiLlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0UGx1cmFsUnVsZXNMb2NhbGUobG9jYWxlKSB7XHJcbiAgLy8gXCJwdFwiIGxhbmd1YWdlIGlzIHRoZSBvbmx5IG9uZSBoYXZpbmcgZGlmZmVyZW50IHBsdXJhbGl6YXRpb24gcnVsZXNcclxuICAvLyBmb3IgdGhlIG9uZSAoXCJwdFwiKSAoUG9ydHVndWVzZSkgbG9jYWxlIGFuZCB0aGUgb3RoZXIgKFwicHQtUFRcIikgKEV1cm9wZWFuIFBvcnR1Z3Vlc2UpLlxyXG4gIC8vIGh0dHA6Ly93d3cudW5pY29kZS5vcmcvY2xkci9jaGFydHMvbGF0ZXN0L3N1cHBsZW1lbnRhbC9sYW5ndWFnZV9wbHVyYWxfcnVsZXMuaHRtbFxyXG4gIC8vIChzZWUgdGhlIGVudHJpZXMgZm9yIFwicHRcIiBhbmQgXCJwdF9QVFwiIHRoZXJlKVxyXG4gIGlmIChsb2NhbGUgPT09ICdwdC1QVCcpIHtcclxuICAgIHJldHVybiBsb2NhbGU7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZ2V0TGFuZ3VhZ2VGcm9tTGFuZ3VhZ2VUYWcobG9jYWxlKTtcclxufVxyXG4vKipcclxuICogRXh0cmFjdHMgbGFuZ3VhZ2UgZnJvbSBhbiBJRVRGIEJDUCA0NyBsYW5ndWFnZSB0YWcuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZVRhZyAtIElFVEYgQkNQIDQ3IGxhbmd1YWdlIHRhZy5cclxuICogQHJldHVybiB7c3RyaW5nfVxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBSZXR1cm5zIFwiaGVcIlxyXG4gKiBnZXRMYW5ndWFnZUZyb21MYW5ndWFnZVRhZyhcImhlLUlMLXUtY2EtaGVicmV3LXR6LWplcnVzbG1cIilcclxuICogLy8gUmV0dXJucyBcImFyXCJcclxuICogZ2V0TGFuZ3VhZ2VGcm9tTGFuZ3VhZ2VUYWcoXCJhci11LW51LWxhdG5cIilcclxuICovXHJcblxyXG52YXIgTEFOR1VBR0VfUkVHX0VYUCA9IC9eKFthLXowLTldKykvaTtcclxuXHJcbmZ1bmN0aW9uIGdldExhbmd1YWdlRnJvbUxhbmd1YWdlVGFnKGxhbmd1YWdlVGFnKSB7XHJcbiAgdmFyIG1hdGNoID0gbGFuZ3VhZ2VUYWcubWF0Y2goTEFOR1VBR0VfUkVHX0VYUCk7XHJcblxyXG4gIGlmICghbWF0Y2gpIHtcclxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGxvY2FsZTogXCIuY29uY2F0KGxhbmd1YWdlVGFnKSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbWF0Y2hbMV07XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UGx1cmFsUnVsZXNMb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/getPluralRulesLocale.js\n"));

/***/ }),

/***/ "./node_modules/relative-time-format/modules/resolveLocale.js":
/*!********************************************************************!*\
  !*** ./node_modules/relative-time-format/modules/resolveLocale.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ resolveLocale; },\n/* harmony export */   \"resolveLocaleLookup\": function() { return /* binding */ resolveLocaleLookup; }\n/* harmony export */ });\n/* harmony import */ var _LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LocaleDataStore.js */ \"./node_modules/relative-time-format/modules/LocaleDataStore.js\");\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */\r\n\r\nfunction resolveLocale(locale) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var localeMatcher = options.localeMatcher || 'lookup';\r\n\r\n  switch (localeMatcher) {\r\n    case 'lookup':\r\n      return resolveLocaleLookup(locale);\r\n    // \"best fit\" locale matching is not supported.\r\n    // https://github.com/catamphetamine/relative-time-format/issues/2\r\n\r\n    case 'best fit':\r\n      // return resolveLocaleBestFit(locale)\r\n      return resolveLocaleLookup(locale);\r\n\r\n    default:\r\n      throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));\r\n  }\r\n}\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */\r\n\r\nfunction resolveLocaleLookup(locale) {\r\n  var resolvedLocale = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.resolveLocale)(locale);\r\n\r\n  if (resolvedLocale) {\r\n    return resolvedLocale;\r\n  } // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n\r\n\r\n  var parts = locale.split('-');\r\n\r\n  while (locale.length > 1) {\r\n    parts.pop();\r\n    locale = parts.join('-');\r\n\r\n    var _resolvedLocale = (0,_LocaleDataStore_js__WEBPACK_IMPORTED_MODULE_0__.resolveLocale)(locale);\r\n\r\n    if (_resolvedLocale) {\r\n      return _resolvedLocale;\r\n    }\r\n  }\r\n}\r\n//# sourceMappingURL=resolveLocale.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVsYXRpdmUtdGltZS1mb3JtYXQvbW9kdWxlcy9yZXNvbHZlTG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2RTtBQUM3RTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLGtFQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrRUFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlbGF0aXZlLXRpbWUtZm9ybWF0L21vZHVsZXMvcmVzb2x2ZUxvY2FsZS5qcz8wNjJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlc29sdmVMb2NhbGUgYXMgcmVzb2x2ZUxvY2FsZUZvckRhdGEgfSBmcm9tICcuL0xvY2FsZURhdGFTdG9yZS5qcyc7XHJcbi8qKlxyXG4gKiBSZXNvbHZlcyBhIGxvY2FsZSB0byBhIHN1cHBvcnRlZCBvbmUgKGlmIGFueSkuXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gbG9jYWxlXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBBbiBvYmplY3QgdGhhdCBtYXkgaGF2ZSB0aGUgZm9sbG93aW5nIHByb3BlcnR5OlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubG9jYWxlTWF0Y2hlcj1cImxvb2t1cFwiXSAtIFRoZSBsb2NhbGUgbWF0Y2hpbmcgYWxnb3JpdGhtIHRvIHVzZS4gUG9zc2libGUgdmFsdWVzIGFyZSBcImxvb2t1cFwiIGFuZCBcImJlc3QgZml0XCIuIEN1cnJlbnRseSBvbmx5IFwibG9va3VwXCIgaXMgc3VwcG9ydGVkLlxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9IFtsb2NhbGVdXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIFJldHVybnMgXCJzclwiXHJcbiAqIHJlc29sdmVMb2NhbGUoXCJzci1DeXJsLUJBXCIpXHJcbiAqIC8vIFJldHVybnMgYHVuZGVmaW5lZGBcclxuICogcmVzb2x2ZUxvY2FsZShcInh4LUxhdG5cIilcclxuICovXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlTG9jYWxlKGxvY2FsZSkge1xyXG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcclxuICB2YXIgbG9jYWxlTWF0Y2hlciA9IG9wdGlvbnMubG9jYWxlTWF0Y2hlciB8fCAnbG9va3VwJztcclxuXHJcbiAgc3dpdGNoIChsb2NhbGVNYXRjaGVyKSB7XHJcbiAgICBjYXNlICdsb29rdXAnOlxyXG4gICAgICByZXR1cm4gcmVzb2x2ZUxvY2FsZUxvb2t1cChsb2NhbGUpO1xyXG4gICAgLy8gXCJiZXN0IGZpdFwiIGxvY2FsZSBtYXRjaGluZyBpcyBub3Qgc3VwcG9ydGVkLlxyXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2NhdGFtcGhldGFtaW5lL3JlbGF0aXZlLXRpbWUtZm9ybWF0L2lzc3Vlcy8yXHJcblxyXG4gICAgY2FzZSAnYmVzdCBmaXQnOlxyXG4gICAgICAvLyByZXR1cm4gcmVzb2x2ZUxvY2FsZUJlc3RGaXQobG9jYWxlKVxyXG4gICAgICByZXR1cm4gcmVzb2x2ZUxvY2FsZUxvb2t1cChsb2NhbGUpO1xyXG5cclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCBcXFwibG9jYWxlTWF0Y2hlclxcXCIgb3B0aW9uOiBcIi5jb25jYXQobG9jYWxlTWF0Y2hlcikpO1xyXG4gIH1cclxufVxyXG4vKipcclxuICogUmVzb2x2ZXMgYSBsb2NhbGUgdG8gYSBzdXBwb3J0ZWQgb25lIChpZiBhbnkpLlxyXG4gKiBTdGFydHMgZnJvbSB0aGUgbW9zdCBzcGVjaWZpYyBsb2NhbGUgYW5kIGdyYWR1YWxseVxyXG4gKiBmYWxscyBiYWNrIHRvIGxlc3Mgc3BlY2lmaWMgb25lcy5cclxuICogVGhpcyBpcyBhIGJhc2ljIGltcGxlbWVudGF0aW9uIG9mIHRoZSBcImxvb2t1cFwiIGFsZ29yaXRobS5cclxuICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQ2NDcjc2VjdGlvbi0zLjRcclxuICogQHBhcmFtICB7c3RyaW5nfSBsb2NhbGVcclxuICogQHJldHVybiB7c3RyaW5nfSBbbG9jYWxlXVxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBSZXR1cm5zIFwic3JcIlxyXG4gKiByZXNvbHZlTG9jYWxlTG9va3VwKFwic3ItQ3lybC1CQVwiKVxyXG4gKiAvLyBSZXR1cm5zIGB1bmRlZmluZWRgXHJcbiAqIHJlc29sdmVMb2NhbGVMb29rdXAoXCJ4eC1MYXRuXCIpXHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVMb2NhbGVMb29rdXAobG9jYWxlKSB7XHJcbiAgdmFyIHJlc29sdmVkTG9jYWxlID0gcmVzb2x2ZUxvY2FsZUZvckRhdGEobG9jYWxlKTtcclxuXHJcbiAgaWYgKHJlc29sdmVkTG9jYWxlKSB7XHJcbiAgICByZXR1cm4gcmVzb2x2ZWRMb2NhbGU7XHJcbiAgfSAvLyBgc3ItQ3lybC1CQWAgLT4gYHNyLUN5cmxgIC0+IGBzcmAuXHJcblxyXG5cclxuICB2YXIgcGFydHMgPSBsb2NhbGUuc3BsaXQoJy0nKTtcclxuXHJcbiAgd2hpbGUgKGxvY2FsZS5sZW5ndGggPiAxKSB7XHJcbiAgICBwYXJ0cy5wb3AoKTtcclxuICAgIGxvY2FsZSA9IHBhcnRzLmpvaW4oJy0nKTtcclxuXHJcbiAgICB2YXIgX3Jlc29sdmVkTG9jYWxlID0gcmVzb2x2ZUxvY2FsZUZvckRhdGEobG9jYWxlKTtcclxuXHJcbiAgICBpZiAoX3Jlc29sdmVkTG9jYWxlKSB7XHJcbiAgICAgIHJldHVybiBfcmVzb2x2ZWRMb2NhbGU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc29sdmVMb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/relative-time-format/modules/resolveLocale.js\n"));

/***/ }),

/***/ "./node_modules/websocket/package.json":
/*!*********************************************!*\
  !*** ./node_modules/websocket/package.json ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = JSON.parse('{"name":"websocket","description":"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.","keywords":["websocket","websockets","socket","networking","comet","push","RFC-6455","realtime","server","client"],"author":"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)","contributors":["Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)"],"version":"1.0.34","repository":{"type":"git","url":"https://github.com/theturtle32/WebSocket-Node.git"},"homepage":"https://github.com/theturtle32/WebSocket-Node","engines":{"node":">=4.0.0"},"dependencies":{"bufferutil":"^4.0.1","debug":"^2.2.0","es5-ext":"^0.10.50","typedarray-to-buffer":"^3.1.5","utf-8-validate":"^5.0.2","yaeti":"^0.0.6"},"devDependencies":{"buffer-equal":"^1.0.0","gulp":"^4.0.2","gulp-jshint":"^2.0.4","jshint-stylish":"^2.2.1","jshint":"^2.0.0","tape":"^4.9.1"},"config":{"verbose":false},"scripts":{"test":"tape test/unit/*.js","gulp":"gulp"},"main":"index","directories":{"lib":"./lib"},"browser":"lib/browser.js","license":"Apache-2.0"}');

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);